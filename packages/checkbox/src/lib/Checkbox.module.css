@value tokens: "../../../theme/src/lib/tokens.css";
@value display, black, primaryBackground, blue80, blue130, signalRed10, signalRed100, signalRed130, white, gray10, gray40, gray100, gray50, gray20, regularWeight, mediumWeight, smBreakpoint, borderSecondary from tokens;

.wrap {
  grid-area: Input;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.checkboxInner {
  width: 1rem;
  height: 1rem;
  box-sizing: border-box;
  border: 1px solid black;
  transition: all 200ms;
  align-items: center;
  justify-content: center;
  forced-color-adjust: none;
  display: flex;

  & svg {
    width: 1rem;
    height: 1rem;
    fill: none;
    stroke: var(--checkmarkColor, white);
    stroke-width: 2px;
    stroke-dasharray: 22;
    stroke-dashoffset: 66;
    transition: all 200ms;
  }
}

.checkbox {
  font-family: display;
  font-weight: regularWeight;

  --borderColorPressed: borderSecondary;
  --focusRingColor: black;
  --selectedColor: primaryBackground;
  --selectedPressed: blue80;
  --selectedHover: blue130;
  --invalidColor: signalRed100;
  --invalidPressed: signalRed130;
  --checkmarkColor: white;

  gap: 0.5rem;
  align-items: center;
  forced-color-adjust: none;
  display: flex;
  width: max-content;

  &:hover div {
    border-color: gray100;
  }

  &[data-pressed] div {
    border-color: var(--borderColorPressed);
  }

  &[data-focus-visible] {
    outline: 2px solid var(--focusRingColor);
    outline-offset: 2px;
  }

  &[data-selected] div,
  &[data-indeterminate] div {
    background: var(--selectedColor);
    border-color: var(--selectedColor);
  }

  &[data-invalid] div {
    border: 2px solid var(--invalidColor);
  }

  &[data-disabled] div {
    pointer-events: none;
    border: 1px solid gray50;
  }

  &[data-selected]:hover div,
  &[data-indeterminate]:hover div {
    background: var(--selectedHover);
    border-color: var(--selectedHover);
  }

  &[data-selected][data-pressed] div,
  &[data-indeterminate][data-pressed] div {
    border-color: blue100;
    background: blue100;
  }

  &[data-selected] svg,
  &[data-indeterminate] svg {
    stroke-dashoffset: 44;
  }

  &[data-indeterminate] svg {
    stroke: none;
    fill: var(--checkmarkColor);
  }

  &[data-invalid]:hover div {
    opacity: 0.5;
    border-color: var(--invalidColor);
  }

  &[data-invalid][data-pressed] div {
    border-color: var(--invalidPressed);
  }

  &[data-disabled] {
    color: gray50;
  }

  &[data-disabled][data-selected] div {
    pointer-events: none;
    border: none;
    background: gray20;
  }

  &[data-disabled][data-indeterminate] div {
    pointer-events: none;
    border: none;
    background: gray20;
  }

  @media smBreakpoint {
    padding: 0.875rem 1rem;
    border: 1px solid black;
    width: auto;

    &:hover {
      background-color: gray10;
    }

    &[data-invalid] {
      border: 2px solid var(--invalidColor);
    }

    &[data-disabled] {
      pointer-events: none;
      border-color: gray50;
    }
  }
}

.checkboxGroup {
  font-family: display;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  font-size: 1rem;
  min-width: 150px;

  & span {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  &[data-disabled] {
    color: gray50;
  }
}
