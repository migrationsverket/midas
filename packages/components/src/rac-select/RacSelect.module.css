.select {
  display: flex;
  flex-direction: column;
  border: 2px dashed rebeccapurple;
}

.triggerContainer {
  display: flex;
  flex-direction: column;
  position: relative;
}

.trigger {
  align-items: center;
  background-color: var(--midas-field-01-base);
  border: none;
  border-bottom: 1px solid var(--midas-border-color-primary);
  border-radius: 0;
  color: var(--midas-text-primary);
  display: flex;
  font-size: var(--midas-typography-font-size-30);
  justify-content: flex-end;
  min-height: var(--midas-size-150);
  padding-left: var(--midas-size-70);
  padding-right: var(--midas-size-70);

  &.medium {
    min-height: var(--midas-size-130);
  }

  &:focus-visible {
    outline: none;
    box-shadow: var(--midas-state-focus);

    @media (forced-colors: active) {
      outline: 3px solid highlight;
      outline-offset: 2px;
    }
  }

  &:hover {
    background-color: var(--midas-field-01-hover);
    cursor: pointer;
  }

  &[data-disabled] {
    cursor: not-allowed;
    background: var(--midas-field-disabled);
    color: var(--midas-text-disabled);
    border-color: var(--midas-border-color-disabled);
  }

  &[data-invalid]:not(:focus-visible) {
    border: none;
    box-shadow: inset 0 0 0 2px var(--midas-support-border-warning);

    @media (forced-colors: active) {
      border: 5px solid Highlight !important;
    }
  }

  &[data-open] {
    .icon svg {
      transform: rotate(180deg);
    }
  }
}

.selectValue {
  pointer-events: none;
  font-family: var(--midas-typography-font-family);
  left: var(--midas-spacing-30);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);

  &[data-disabled] {
    color: var(--midas-text-disabled);
    cursor: not-allowed;
  }
}

.selectValueTag {
  pointer-events: all;
  align-items: center;
  background-color: var(--midas-button-background-primary-base);
  border-radius: 1.25rem;
  color: var(--midas-text-on-color);
  display: flex;
  font-size: 0.875rem;
  justify-content: center;
  min-height: 1.75rem;
  padding: 0 0.5rem;

  &:has(.clearButton) {
    padding-right: 0;
  }

  &[data-disabled] {
    background-color: var(--midas-field-disabled);
    border-color: var(--midas-border-color-disabled);
    color: var(--midas-text-disabled);
    pointer-events: none;
  }
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.clearButton {
  background-color: var(--midas-button-background-primary-base);
  border: none;
  border-radius: 100%;
  color: var(--midas-text-on-color);
  display: flex;
  margin: 0 0 0 0.5rem;
  padding: 0.375rem;

  &:hover {
    background-color: var(--midas-button-background-primary-hover);
    cursor: pointer;
  }

  &:disabled {
    background-color: var(--midas-button-background-disabled);
    color: var(--midas-text-disabled);
    pointer-events: none;
  }

  &:focus-visible {
    box-shadow: var(--midas-state-focus);
    outline: none;

    @media (forced-colors: active) {
      outline: 3px solid highlight;
      outline-offset: 2px;
    }
  }
}

.popover {
  &[data-trigger='Select'] {
    border: 2px dashed red;

    /* RAC passes this variable via the style prop, making it available during runtime only */
    /* stylelint-disable-next-line csstools/value-no-unknown-custom-properties */
    min-width: var(--trigger-width);
    transition: all 0.2s ease; /** TODO set appropriate transition later */
    opacity: 1;

    &[data-entering] {
      opacity: 0;
    }

    &[data-exiting] {
      opacity: 0;
    }
  }

  .listBox {
    display: block;
  }

  .listBoxItem {
    border: 2px dashed blue;

    &[data-selected] {
      &::after {
        content: 'âœ“';
        alt: ' ';
        position: relative;
        top: 4px;
        left: 4px;
      }
    }
  }
}
