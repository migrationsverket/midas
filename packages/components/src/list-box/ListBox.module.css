/**
 * 1. Represents max ~5 options in the list.
 */
.listBox {
  max-height: 295px; /* 1 */
  overflow-y: auto;

  > div {
    /* react aria fiddles with pointer events during scroll
     * after a few scrolls the value sticks to "none" in our storybook
     */
    pointer-events: auto !important;
  }
}

.listBoxPopover {
  font-family: var(--midas-typography-font-family);

  /* RAC passes this variable via the style prop, making it available during runtime only */
  /* stylelint-disable-next-line csstools/value-no-unknown-custom-properties */
  width: var(--trigger-width);
  background: var(--midas-layer-01-base);
  overflow-y: auto;
  box-shadow: 0 3px 5px 0 rgba(0 0 0 / 20%);

  @media (forced-colors: active) {
    border: 1px solid var(--midas-border-color-primary);
  }
}

.listBoxSectionHeading {
  font-family: var(--midas-typography-font-family);
  display: block;
  padding: var(--midas-size-80) var(--midas-size-80) var(--midas-size-40)
    var(--midas-spacing-40);
  font-weight: 500;
  font-size: 14px;
  color: var(--midas-menu-text-section-header);
}

.listBoxButton {
  all: unset;
  width: 100%;
  box-sizing: border-box;
  margin-bottom: 2px !important;

  &:focus-visible {
    box-shadow: var(--midas-state-focus-inset);
    outline: none;
  }
}

.listBoxItem {
  background-color: var(--midas-layer-01-base);
  color: var(--midas-text-primary);
  display: flex;
  font-family: var(--midas-typography-font-family);
  line-height: 1;
  margin-bottom: 0;
  padding: var(--midas-size-80);
  transition: background-color 60ms;

  &:hover:not([data-disabled]) {
    background-color: var(--midas-layer-01-hover);
    cursor: pointer;
    transition-delay: 60ms;
  }

  &[data-disabled] {
    color: var(--midas-text-disabled);
    cursor: not-allowed;
  }

  &[data-selected] {
    background-color: var(--midas-layer-01-selected);

    &:hover:not([data-disabled]) {
      background-color: var(--midas-layer-01-selected-hover);
      transition-delay: 60ms;
    }
  }

  &[data-focused] {
    outline: none;
    box-shadow: none;

    @media (forced-colors: active) {
      outline: var(--midas-state-focus-contrast-mode-outline) solid highlight !important;
      outline-offset: calc(var(--midas-state-focus-contrast-mode-outline) * -1);
    }
  }

  &[data-focus-visible] {
    box-shadow: var(--midas-state-focus-inset);
    outline: none;
  }
}

.listBoxLoadMoreItem {
  align-items: center;
  display: flex;
  gap: var(--midas-size-80);
  line-height: var(--midas-typography-line-height-30);
  padding: var(--midas-size-80) var(--midas-size-80) var(--midas-size-60)
    var(--midas-size-80);
}
