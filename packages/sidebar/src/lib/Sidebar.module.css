@value tokens: "../../../theme/src/lib/tokens.css";
@value display, primaryBackground, gray10, gray30, gray70, mdBreakpoint, logoPrimary from tokens;

.baseLayout {
  --sideBarWidth: 230px;
  --headerHeight: 60px;

  @media mdBreakpoint {
    --headerHeight: 85px;
  }
}

.mainContent {
  display: flex;
  flex-direction: row;
}

.header {
  position: sticky;
  top: 0;
  font-family: display;
  padding: 0.5rem 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid gray70;
  background-color: white;

  @media mdBreakpoint {
    padding: 1rem;
    z-index: 3;
  }
}

.headerContent {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  gap: 2rem;

  > svg {
    display: none;
  }

  @media mdBreakpoint {
    > svg {
      display: initial;
    }
  }
}

.headerItems,
.logo {
  display: none;

  @media mdBreakpoint {
    display: block;
  }
}

.headerMenu {
  display: block;

  @media mdBreakpoint {
    display: none;
  }
}

.toggleButton {
  display: block;

  @media mdBreakpoint {
    display: none !important;
  }
}

.sidebar {
  font-family: display;
  background-color: primaryBackground;
  color: white;
  display: flex;
  flex-flow: wrap column;
  flex: 0 0 var(--sideBarWidth);
  transition: 200ms;
  position: fixed;
  top: 0;
  height: 100vh;
  width: var(--sideBarWidth);
  transform: translateX(calc(var(--sideBarWidth) * -1));
  z-index: 2;

  @media mdBreakpoint {
    position: sticky;
    top: var(--headerHeight);
    align-self: start;
    height: calc(100vh - var(--headerHeight));
    transform: none;
    width: var(--sideBarWidth);
  }
}

.main {
  font-family: display;
  background-color: white;
  flex: 0 0 auto;
  width: 100%;

  @media mdBreakpoint {
    background-color: gray10;
  }
}

.sidebarOpened {
  transform: translateX(0);
}

.sidebarHeader {
  padding: 1rem;
  border-bottom: 1px solid gray70;

  & p {
    margin: 0;
  }
}

.sidebarFooter {
  display: none;
  padding: 0.5rem 1rem;
  position: sticky;
  bottom: 0;

  @media mdBreakpoint {
    justify-self: flex-end;
    display: flex;
    justify-content: flex-end;
    border-top: 1px solid gray70;
  }
}

.sidebarCollapsed {
  --sideBarWidth: 66px;

  transition: all 0.2s ease-out;

  .sidebarHeader {
    display: flex;
    justify-content: center;
    padding: 1rem 0;
  }

  .sidebarFooter {
    padding: 0.5rem 0;
    justify-content: center;
  }
}

.userName {
  margin: 0;
  margin-bottom: 0.25rem;
  font-size: 0.875rem;
  font-weight: 500;
  display: none;

  @media mdBreakpoint {
    display: block;
  }
}

.abbr {
  font-size: 0.875rem;
  font-weight: 600;
  align-self: center;
}

.userTitle {
  margin: 0;
  font-size: 0.875rem;
  font-weight: 400;
  display: none;

  @media mdBreakpoint {
    display: block;
  }
}

.title {
  margin: 0;
  font-size: 1rem;
  font-weight: 500;
  display: block;

  @media mdBreakpoint {
    display: none;
  }
}

.sidebarNav {
  padding: 0.5rem;
  overflow-y: auto;
  margin-bottom: auto;
}

.list {
  color: white;
  list-style-type: none;
  margin: 0;
  padding: 0;
  margin-bottom: 1rem;
}

.listGroupTitle {
  font-size: 0.75rem;
  letter-spacing: 0.0375rem;
  text-transform: uppercase;
  padding: 0.5rem;
  margin: 0;
}

.listItem {
  display: flex;
}

.listItemCollapsed {
  justify-content: center;
}

.listLink {
  flex-grow: 1;
  color: currentColor !important;
  transition: 100ms;
  justify-content: flex-end !important;
}

.linkText {
  transform: translateX(0);
  opacity: 1;
  width: auto;
  transition-property: transform width opacity;
  transition-duration: 0s 0s 10ms;
  transition-delay: 0s 0s 200ms;
  transition-behavior: allow-discrete;
}

.linkTextCollapsed {
  display: none;
  transform: translateX(-200px);
  opacity: 0;
  width: 0;
  transition-property: transform, opacity, width;
  transition-duration: 0, 100ms, 100ms;
  transition-delay: 0s;
  transition-behavior: allow-discrete;
}

.listLinkCollapsed {
  flex-grow: unset;
}

.collapseButton {
  color: currentColor !important;
  padding: calc(0.875rem - 1px) !important;
}

.backdrop {
  display: none;
  position: fixed;
  inset: 0;
  background-color: rgb(50 50 50 / 50%);

  &.backdropOpened {
    display: block;
  }
}
