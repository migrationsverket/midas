import{j as r}from"./jsx-runtime-BYYWji4R.js";import{c as j}from"./clsx-B-dksMZM.js";import{a as M,b as v,d as q,f as W}from"./OverlayArrow-CEJfcY2d.js";import{e as B,f as A,g as L,h as H,i as b,j as U,k as z,c as k,l as K,$}from"./Dialog-BAAiJcpT.js";import{b as y,$ as F,f as V,n as G,a as C,k as X}from"./utils-RHx87K0F.js";import{c as P}from"./useFocusRing-zhkOjX4v.js";import{r as o,R as m}from"./index-ClcD9ViR.js";import{$ as R}from"./SSRProvider-BhYbDCf7.js";import{u as J}from"./useLocalizedStringFormatter-9M_dEwOo.js";import{B as Q}from"./Button-DpH7xksJ.js";import{X as Y}from"./x-Dz2R9y6b.js";import{H as Z}from"./Heading-CV1Pcj_U.js";let s=typeof document<"u"&&window.visualViewport;function ee(){let t=R(),[e,a]=o.useState(()=>t?{width:0,height:0}:x());return o.useEffect(()=>{let n=()=>{a(l=>{let i=x();return i.width===l.width&&i.height===l.height?l:i})};return s?s.addEventListener("resize",n):window.addEventListener("resize",n),()=>{s?s.removeEventListener("resize",n):window.removeEventListener("resize",n)}},[]),e}function x(){return{width:s&&(s==null?void 0:s.width)||window.innerWidth,height:s&&(s==null?void 0:s.height)||window.innerHeight}}function te(t,e,a){let{overlayProps:n,underlayProps:l}=B({...t,isOpen:e.isOpen,onClose:e.close},a);return A({isDisabled:!e.isOpen}),L(),o.useEffect(()=>{if(e.isOpen&&a.current)return H([a.current])},[e.isOpen,a]),{modalProps:y(n),underlayProps:l}}const ae=o.createContext(null),g=o.createContext(null),ne=o.forwardRef(function(e,a){if(o.useContext(g))return m.createElement(w,{...e,modalRef:a},e.children);let{isDismissable:l,isKeyboardDismissDisabled:i,isOpen:u,defaultOpen:d,onOpenChange:f,children:c,isEntering:h,isExiting:S,UNSTABLE_portalContainer:D,shouldCloseOnInteractOutside:N,...I}=e;return m.createElement(T,{isDismissable:l,isKeyboardDismissDisabled:i,isOpen:u,defaultOpen:d,onOpenChange:f,isEntering:h,isExiting:S,UNSTABLE_portalContainer:D,shouldCloseOnInteractOutside:N},m.createElement(w,{...I,modalRef:a},c))});function le(t,e){[t,e]=F(t,e,ae);let a=o.useContext(b),n=M(t),l=t.isOpen!=null||t.defaultOpen!=null||!a?n:a,i=V(e),u=o.useRef(null),d=v(i,l.isOpen),f=v(u,l.isOpen),c=d||f||t.isExiting||!1,h=R();return!l.isOpen&&!c||h?null:m.createElement(ie,{...t,state:l,isExiting:c,overlayRef:i,modalRef:u})}const T=o.forwardRef(le);function ie({UNSTABLE_portalContainer:t,...e}){let a=e.modalRef,{state:n}=e,{modalProps:l,underlayProps:i}=te(e,n,a),u=q(e.overlayRef)||e.isEntering||!1,d=C({...e,defaultClassName:"react-aria-ModalOverlay",values:{isEntering:u,isExiting:e.isExiting,state:n}}),f=ee(),c={...d.style,"--visual-viewport-height":f.height+"px"};return m.createElement(z,{isExiting:e.isExiting,portalContainer:t},m.createElement("div",{...y(P(e),i),...d,style:c,ref:e.overlayRef,"data-entering":u||void 0,"data-exiting":e.isExiting||void 0},m.createElement(X,{values:[[g,{modalProps:l,modalRef:a,isExiting:e.isExiting,isDismissable:e.isDismissable}],[b,n]]},d.children)))}function w(t){let{modalProps:e,modalRef:a,isExiting:n,isDismissable:l}=o.useContext(g),i=o.useContext(b),u=o.useMemo(()=>G(t.modalRef,a),[t.modalRef,a]),d=V(u),f=q(d),c=C({...t,defaultClassName:"react-aria-Modal",values:{isEntering:f,isExiting:n,state:i}});return m.createElement("div",{...y(P(t),e),...c,ref:d,"data-entering":f||void 0,"data-exiting":n||void 0},l&&m.createElement(U,{onDismiss:i.close}),c.children)}const oe="_popover_1xqs8_4",re="_arrow_1xqs8_18",E={popover:oe,arrow:re};function O({children:t,className:e,offset:a=4,...n}){return r.jsxs(k,{...n,offset:a,className:j(E.popover,e),children:[r.jsx(W,{className:E.arrow,children:r.jsx("svg",{width:8,height:8,viewBox:"0 0 8 8",children:r.jsx("path",{d:"M0 0 L4 4 L8 0"})})}),t]})}try{O.displayName="Popover",O.__docgenInfo={description:"",displayName:"Popover",props:{className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: PopoverRenderProps & { defaultClassName: string; }) => string)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: PopoverRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},offset:{defaultValue:{value:"4"},description:`The additional offset applied along the main axis between the element and its
anchor element.`,name:"offset",required:!1,type:{name:"number"}},isOpen:{defaultValue:null,description:"Whether the overlay is open by default (controlled).",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}},trigger:{defaultValue:null,description:"The name of the component that triggered the popover. This is reflected on the element\nas the `data-trigger` attribute, and can be used to provide specific\nstyles for the popover depending on which element triggered it.",name:"trigger",required:!1,type:{name:"string"}},shouldCloseOnInteractOutside:{defaultValue:null,description:`When user interacts with the argument element outside of the popover ref,
return true if onClose should be called. This gives you a chance to filter
out interaction with elements that should not dismiss the popover.
By default, onClose will always be called on interaction outside the popover ref.`,name:"shouldCloseOnInteractOutside",required:!1,type:{name:"(element: Element) => boolean"}},isKeyboardDismissDisabled:{defaultValue:{value:"false"},description:`Whether pressing the escape key to close the popover should be disabled.

Most popovers should not use this option. When set to true, an alternative
way to close the popover with a keyboard must be provided.`,name:"isKeyboardDismissDisabled",required:!1,type:{name:"boolean"}},shouldFlip:{defaultValue:{value:"true"},description:`Whether the element should flip its orientation (e.g. top to bottom or left to right) when
there is insufficient room for it to render completely.`,name:"shouldFlip",required:!1,type:{name:"boolean"}},placement:{defaultValue:{value:"'bottom'"},description:"The placement of the element with respect to its anchor element.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"bottom left"'},{value:'"bottom right"'},{value:'"bottom start"'},{value:'"bottom end"'},{value:'"top left"'},{value:'"top right"'},{value:'"top start"'},{value:'"top end"'},{value:'"left top"'},{value:'"left bottom"'},{value:'"start"'},{value:'"start top"'},{value:'"start bottom"'},{value:'"right top"'},{value:'"right bottom"'},{value:'"end"'},{value:'"end top"'},{value:'"end bottom"'}]}},containerPadding:{defaultValue:{value:"12"},description:`The placement padding that should be applied between the element and its
surrounding container.`,name:"containerPadding",required:!1,type:{name:"number"}},crossOffset:{defaultValue:{value:"0"},description:`The additional offset applied along the cross axis between the element and its
anchor element.`,name:"crossOffset",required:!1,type:{name:"number"}},triggerRef:{defaultValue:null,description:`The ref for the element which the popover positions itself with respect to.

When used within a trigger component such as DialogTrigger, MenuTrigger, Select, etc.,
this is set automatically. It is only required when used standalone.`,name:"triggerRef",required:!1,type:{name:"RefObject<Element>"}},boundaryElement:{defaultValue:{value:"document.body"},description:"Element that that serves as the positioning boundary.",name:"boundaryElement",required:!1,type:{name:"Element"}},scrollRef:{defaultValue:{value:"overlayRef"},description:"A ref for the scrollable region within the overlay.",name:"scrollRef",required:!1,type:{name:"RefObject<Element>"}},shouldUpdatePosition:{defaultValue:{value:"true"},description:"Whether the overlay should update its position automatically.",name:"shouldUpdatePosition",required:!1,type:{name:"boolean"}},maxHeight:{defaultValue:null,description:`The maxHeight specified for the overlay element.
By default, it will take all space up to the current viewport height.`,name:"maxHeight",required:!1,type:{name:"number"}},arrowBoundaryOffset:{defaultValue:{value:"0"},description:"The minimum distance the arrow's edge should be from the edge of the overlay element.",name:"arrowBoundaryOffset",required:!1,type:{name:"number"}},isNonModal:{defaultValue:null,description:`Whether the popover is non-modal, i.e. elements outside the popover may be
interacted with by assistive technologies.

Most popovers should not use this option as it may negatively impact the screen
reader experience. Only use with components such as combobox, which are designed
to handle this situation carefully.`,name:"isNonModal",required:!1,type:{name:"boolean"}},isEntering:{defaultValue:null,description:"Whether the popover is currently performing an entry animation.",name:"isEntering",required:!1,type:{name:"boolean"}},isExiting:{defaultValue:null,description:"Whether the popover is currently performing an exit animation.",name:"isExiting",required:!1,type:{name:"boolean"}},UNSTABLE_portalContainer:{defaultValue:{value:"document.body"},description:`The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.
@deprecated - Use a parent UNSAFE_PortalProvider to set your portal container instead.`,name:"UNSTABLE_portalContainer",required:!1,type:{name:"Element"}}}}}catch{}const se="_modal_x9enn_4",de="_overlay_x9enn_26",ue="_modalHeader_x9enn_47",ce="_modalTitle_x9enn_57",me="_modalBody_x9enn_63",p={modal:se,overlay:de,modalHeader:ue,modalTitle:ce,modalBody:me},fe={close:"Close"},pe={close:"Stäng"},he={en:fe,sv:pe},_=({children:t,title:e,...a})=>{const n=J(he);return r.jsx(T,{...a,className:p.overlay,children:r.jsx(ne,{...a,className:p.modal,children:r.jsxs(K,{...a,children:[r.jsxs("div",{className:p.modalHeader,children:[r.jsx("div",{className:p.modalTitle,children:e&&r.jsx(Z,{level:3,elementType:"h2",children:e})}),r.jsx(Q,{slot:"close",variant:"tertiary",icon:Y,iconPlacement:"right",children:n.format("close")})]}),r.jsx("div",{className:p.modalBody,tabIndex:-1,children:t})]})})})};try{$.displayName="DialogTrigger",$.__docgenInfo={description:"A DialogTrigger opens a dialog when a trigger element is pressed.",displayName:"DialogTrigger",props:{isOpen:{defaultValue:null,description:"Whether the overlay is open by default (controlled).",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}}}}}catch{}try{_.displayName="Modal",_.__docgenInfo={description:"",displayName:"Modal",props:{isDismissable:{defaultValue:{value:"false"},description:"Whether to close the modal when the user interacts outside it.",name:"isDismissable",required:!1,type:{name:"boolean"}},isKeyboardDismissDisabled:{defaultValue:{value:"false"},description:"Whether pressing the escape key to close the modal should be disabled.",name:"isKeyboardDismissDisabled",required:!1,type:{name:"boolean"}},shouldCloseOnInteractOutside:{defaultValue:null,description:`When user interacts with the argument element outside of the overlay ref,
return true if onClose should be called.  This gives you a chance to filter
out interaction with elements that should not dismiss the overlay.
By default, onClose will always be called on interaction outside the overlay ref.`,name:"shouldCloseOnInteractOutside",required:!1,type:{name:"(element: Element) => boolean"}},title:{defaultValue:null,description:"An optional title for the dialog. If omitted, please provide an aria-label for accessibility.",name:"title",required:!1,type:{name:"ReactNode"}},role:{defaultValue:{value:"'dialog'"},description:"The accessibility role for the dialog.",name:"role",required:!1,type:{name:"enum",value:[{value:'"alertdialog"'},{value:'"dialog"'}]}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}}}}}catch{}export{_ as M,O as P};
