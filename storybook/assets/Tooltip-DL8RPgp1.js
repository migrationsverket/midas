import{j as x}from"./jsx-runtime-DtgEGaVE.js";import{$ as N,b as L,c as M,d as B,e as j,f as H}from"./OverlayArrow-t3ozUHtu.js";import{e as A,p as k,a as _,d as O,j as F,n as U,y as z,I as K,C as Y,L as G,$ as J,l as Q,c as X}from"./useFocusable-CksQMUge.js";import{R as d,r as o}from"./index-BbAIUH2N.js";import{M as Z}from"./index-i7ZvCR4f.js";const w=d.createContext(null);function ee(e){let{children:n}=e,t=o.useContext(w),[r,i]=o.useState(0),s=o.useMemo(()=>({parent:t,modalCount:r,addModal(){i(l=>l+1),t&&t.addModal()},removeModal(){i(l=>l-1),t&&t.removeModal()}}),[t,r]);return d.createElement(w.Provider,{value:s},n)}function te(){let e=o.useContext(w);return{modalProviderProps:{"aria-hidden":e&&e.modalCount>0?!0:void 0}}}function ne(e){let{modalProviderProps:n}=te();return d.createElement("div",{"data-overlay-container":!0,...e,...n})}function ae(e){return d.createElement(ee,null,d.createElement(ne,e))}function le(e){let n=A(),{portalContainer:t=n?null:document.body,...r}=e;if(d.useEffect(()=>{if(t!=null&&t.closest("[data-overlay-container]"))throw new Error("An OverlayContainer must not be inside another container. Please change the portalContainer prop.")},[t]),!t)return null;let i=d.createElement(ae,r);return Z.createPortal(i,t)}function re(e,n){let t=k(e,{labelable:!0}),{hoverProps:r}=_({onHoverStart:()=>n==null?void 0:n.open(!0),onHoverEnd:()=>n==null?void 0:n.close()});return{tooltipProps:O(t,r,{role:"tooltip"})}}function oe(e,n,t){let{isDisabled:r,trigger:i}=e,s=F(),l=o.useRef(!1),a=o.useRef(!1),f=()=>{(l.current||a.current)&&n.open(a.current)},u=g=>{!l.current&&!a.current&&n.close(g)};o.useEffect(()=>{let g=P=>{t&&t.current&&P.key==="Escape"&&(P.stopPropagation(),n.close(!0))};if(n.isOpen)return document.addEventListener("keydown",g,!0),()=>{document.removeEventListener("keydown",g,!0)}},[t,n]);let b=()=>{i!=="focus"&&(z()==="pointer"?l.current=!0:l.current=!1,f())},$=()=>{i!=="focus"&&(a.current=!1,l.current=!1,u())},y=()=>{a.current=!1,l.current=!1,u(!0)},T=()=>{K()&&(a.current=!0,f())},c=()=>{a.current=!1,l.current=!1,u(!0)},{hoverProps:I}=_({isDisabled:r,onHoverStart:b,onHoverEnd:$}),{focusableProps:W}=U({isDisabled:r,onFocus:T,onBlur:c},t);return{triggerProps:{"aria-describedby":n.isOpen?s:void 0,...O(W,I,{onPointerDown:y,onKeyDown:y})},tooltipProps:{id:s}}}const ie=1500,C=500;let m={},se=0,v=!1,p=null,h=null;function R(e={}){let{delay:n=ie,closeDelay:t=C}=e,{isOpen:r,open:i,close:s}=N(e),l=o.useMemo(()=>`${++se}`,[]),a=o.useRef(null),f=o.useRef(s),u=()=>{m[l]=y},b=()=>{for(let c in m)c!==l&&(m[c](!0),delete m[c])},$=()=>{a.current&&clearTimeout(a.current),a.current=null,b(),u(),v=!0,i(),p&&(clearTimeout(p),p=null),h&&(clearTimeout(h),h=null)},y=c=>{c||t<=0?(a.current&&clearTimeout(a.current),a.current=null,f.current()):a.current||(a.current=setTimeout(()=>{a.current=null,f.current()},t)),p&&(clearTimeout(p),p=null),v&&(h&&clearTimeout(h),h=setTimeout(()=>{delete m[l],h=null,v=!1},Math.max(C,t)))},T=()=>{b(),u(),!r&&!p&&!v?p=setTimeout(()=>{p=null,v=!0,$()},n):r||$()};return o.useEffect(()=>{f.current=s},[s]),o.useEffect(()=>()=>{a.current&&clearTimeout(a.current),m[l]&&delete m[l]},[l]),{isOpen:r,open:c=>{!c&&n>0&&!a.current?T():$()},close:y}}const E=o.createContext(null),D=o.createContext(null);function de(e){let n=R(e),t=o.useRef(null),{triggerProps:r,tooltipProps:i}=oe(e,n,t);return d.createElement(Y,{values:[[E,n],[D,{...i,triggerRef:t}]]},d.createElement(G,{...r,ref:t},e.children))}const ue=o.forwardRef(function({UNSTABLE_portalContainer:n,...t},r){[t,r]=J(t,r,D);let i=o.useContext(E),s=R(t),l=t.isOpen!=null||t.defaultOpen!=null||!i?s:i,a=L(r,l.isOpen)||t.isExiting||!1;return!l.isOpen&&!a?null:d.createElement(le,{portalContainer:n},d.createElement(ce,{...t,tooltipRef:r,isExiting:a}))});function ce(e){let n=o.useContext(E),t=o.useRef(null),[r,i]=o.useState(0);Q(()=>{t.current&&n.isOpen&&i(t.current.getBoundingClientRect().width)},[n.isOpen,t]);let{overlayProps:s,arrowProps:l,placement:a}=M({placement:e.placement||"top",targetRef:e.triggerRef,overlayRef:e.tooltipRef,offset:e.offset,crossOffset:e.crossOffset,isOpen:n.isOpen,arrowSize:r,arrowBoundaryOffset:e.arrowBoundaryOffset,shouldFlip:e.shouldFlip,onClose:()=>n.close(!0)}),f=B(e.tooltipRef,!!a)||e.isEntering||!1,u=X({...e,defaultClassName:"react-aria-Tooltip",values:{placement:a,isEntering:f,isExiting:e.isExiting,state:n}});e=O(e,s);let{tooltipProps:b}=re(e,n);return d.createElement("div",{...b,ref:e.tooltipRef,...u,style:{...s.style,...u.style},"data-placement":a??void 0,"data-entering":f||void 0,"data-exiting":e.isExiting||void 0},d.createElement(j.Provider,{value:{...l,placement:a,ref:t}},u.children))}const fe='"../theme/tokens.css"',pe='"Inter", sans-serif',me="#1f1f1f",he="_tooltip_m1a8t_4",be="_arrow_m1a8t_17",S={tokens:fe,display:pe,gray150:me,tooltip:he,arrow:be};function V({children:e,placement:n,...t}){return x.jsxs(ue,{className:S.tooltip,placement:n,...t,children:[x.jsx(H,{className:S.arrow,children:x.jsx("svg",{width:8,height:8,viewBox:"0 0 8 8",children:x.jsx("path",{d:"M0 0 L4 4 L8 0"})})}),e]})}function q({children:e,delay:n=0,...t}){return x.jsx(de,{delay:n,...t,children:e})}try{V.displayName="Tooltip",V.__docgenInfo={description:"",displayName:"Tooltip",props:{placement:{defaultValue:null,description:"The placement of the tooltip with respect to the trigger.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom"'}]}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: TooltipRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: TooltipRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},isOpen:{defaultValue:null,description:"Whether the element is rendered.",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"((isOpen: boolean) => void)"}},offset:{defaultValue:{value:"0"},description:`The additional offset applied along the main axis between the element and its
anchor element.`,name:"offset",required:!1,type:{name:"number"}},arrowBoundaryOffset:{defaultValue:{value:"0"},description:"The minimum distance the arrow's edge should be from the edge of the overlay element.",name:"arrowBoundaryOffset",required:!1,type:{name:"number"}},triggerRef:{defaultValue:null,description:`The ref for the element which the tooltip positions itself with respect to.

When used within a TooltipTrigger this is set automatically. It is only required when used standalone.`,name:"triggerRef",required:!1,type:{name:"RefObject<Element | null>"}},isEntering:{defaultValue:null,description:"Whether the tooltip is currently performing an entry animation.",name:"isEntering",required:!1,type:{name:"boolean"}},isExiting:{defaultValue:null,description:"Whether the tooltip is currently performing an exit animation.",name:"isExiting",required:!1,type:{name:"boolean"}},UNSTABLE_portalContainer:{defaultValue:{value:"document.body"},description:"The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.",name:"UNSTABLE_portalContainer",required:!1,type:{name:"Element"}},containerPadding:{defaultValue:{value:"12"},description:`The placement padding that should be applied between the element and its
surrounding container.`,name:"containerPadding",required:!1,type:{name:"number"}},crossOffset:{defaultValue:{value:"0"},description:`The additional offset applied along the cross axis between the element and its
anchor element.`,name:"crossOffset",required:!1,type:{name:"number"}},shouldFlip:{defaultValue:{value:"true"},description:`Whether the element should flip its orientation (e.g. top to bottom or left to right) when
there is insufficient room for it to render completely.`,name:"shouldFlip",required:!1,type:{name:"boolean"}}}}}catch{}try{q.displayName="TooltipTrigger",q.__docgenInfo={description:"",displayName:"TooltipTrigger",props:{isDisabled:{defaultValue:null,description:"Whether the tooltip should be disabled, independent from the trigger.",name:"isDisabled",required:!1,type:{name:"boolean"}},delay:{defaultValue:{value:"0"},description:"The delay time for the tooltip to show up. [See guidelines](https://spectrum.adobe.com/page/tooltip/#Immediate-or-delayed-appearance).",name:"delay",required:!1,type:{name:"number"}},closeDelay:{defaultValue:{value:"500"},description:"The delay time for the tooltip to close. [See guidelines](https://spectrum.adobe.com/page/tooltip/#Warmup-and-cooldown).",name:"closeDelay",required:!1,type:{name:"number"}},trigger:{defaultValue:null,description:"By default, opens for both focus and hover. Can be made to open only for focus.",name:"trigger",required:!1,type:{name:"enum",value:[{value:'"focus"'}]}},isOpen:{defaultValue:null,description:"Whether the overlay is open by default (controlled).",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"((isOpen: boolean) => void)"}}}}}catch{}export{V as T,q as a};
