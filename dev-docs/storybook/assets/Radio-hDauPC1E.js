import{c as B,r as x,e as S,j as V}from"./iframe-5BetUtcV.js";import{$ as L}from"./Group-roytp3fX.js";import{b as q,e as W,$ as C,f as G,n as j,j as O,a as M,h as k,i as U,k as z}from"./utils-CoA_VPnw.js";import{$ as K,F as D}from"./FieldError-CQAVqLbJ.js";import{a as J}from"./Form-DZQTtCg-.js";import{b as Q}from"./Button-CWF7mv71.js";import{$ as X}from"./Text-BHUVVTHZ.js";import{f as F,b as Y,c as w,e as Z,a as ee,$ as ae}from"./useFocusRing-VggDcjf3.js";import{b as te,c as le,a as ie}from"./useFormValidation-B7TkPx6B.js";import{$ as ne}from"./FocusScope-D4LGXEog.js";import{$ as re}from"./useField-DPjq8RHS.js";import{$ as de}from"./VisuallyHidden-Cgp1Cvag.js";import{$ as oe}from"./useControlledState-C0PP9f13.js";import{c as N}from"./clsx-B-dksMZM.js";import{a as se,L as ue}from"./Label-DLIFo8oq.js";import{T as ce}from"./Text-ClwN0zKV.js";const T=new WeakMap;function fe(a,e,l){let{value:n,children:s,"aria-label":i,"aria-labelledby":r}=a;const t=a.isDisabled||e.isDisabled;let c=e.selectedValue===n,f=o=>{o.stopPropagation(),e.setSelectedValue(n)},{pressProps:u,isPressed:h}=F({isDisabled:t}),{pressProps:$,isPressed:y}=F({isDisabled:t,onPress(){var o;e.setSelectedValue(n),(o=l.current)===null||o===void 0||o.focus()}}),{focusableProps:g}=Y(q(a,{onFocus:()=>e.setLastFocusedValue(n)}),l),m=q(u,g),E=w(a,{labelable:!0}),b=-1;e.selectedValue!=null?e.selectedValue===n&&(b=0):(e.lastFocusedValue===n||e.lastFocusedValue==null)&&(b=0),t&&(b=void 0);let{name:P,descriptionId:R,errorMessageId:p,validationBehavior:d}=T.get(e);return te(l,e.selectedValue,e.setSelectedValue),le({validationBehavior:d},e,l),{labelProps:q($,{onClick:o=>o.preventDefault()}),inputProps:q(E,{...m,type:"radio",name:P,tabIndex:b,disabled:t,required:e.isRequired&&d==="native",checked:c,value:n,onChange:f,"aria-describedby":[a["aria-describedby"],e.isInvalid?p:null,R].filter(Boolean).join(" ")||void 0}),isDisabled:t,isSelected:c,isPressed:h||y}}function pe(a,e){let{name:l,isReadOnly:n,isRequired:s,isDisabled:i,orientation:r="vertical",validationBehavior:t="aria"}=a,{direction:c}=B(),{isInvalid:f,validationErrors:u,validationDetails:h}=e.displayValidation,{labelProps:$,fieldProps:y,descriptionProps:g,errorMessageProps:m}=re({...a,labelElementType:"span",isInvalid:e.isInvalid,errorMessage:a.errorMessage||u}),E=w(a,{labelable:!0}),{focusWithinProps:b}=Z({onBlurWithin(p){var d;(d=a.onBlur)===null||d===void 0||d.call(a,p),e.selectedValue||e.setLastFocusedValue(null)},onFocusWithin:a.onFocus,onFocusWithinChange:a.onFocusChange}),P=p=>{let d;switch(p.key){case"ArrowRight":c==="rtl"&&r!=="vertical"?d="prev":d="next";break;case"ArrowLeft":c==="rtl"&&r!=="vertical"?d="next":d="prev";break;case"ArrowDown":d="next";break;case"ArrowUp":d="prev";break;default:return}p.preventDefault();let o=ne(p.currentTarget,{from:p.target}),v;d==="next"?(v=o.nextNode(),v||(o.currentNode=p.currentTarget,v=o.firstChild())):(v=o.previousNode(),v||(o.currentNode=p.currentTarget,v=o.lastChild())),v&&(v.focus(),e.setSelectedValue(v.value))},R=W(l);return T.set(e,{name:R,descriptionId:g.id,errorMessageId:m.id,validationBehavior:t}),{radioGroupProps:q(E,{role:"radiogroup",onKeyDown:P,"aria-invalid":e.isInvalid||void 0,"aria-errormessage":a["aria-errormessage"],"aria-readonly":n||void 0,"aria-required":s||void 0,"aria-disabled":i||void 0,"aria-orientation":r,...y,...b}),labelProps:$,descriptionProps:g,errorMessageProps:m,isInvalid:f,validationErrors:u,validationDetails:h}}let me=Math.round(Math.random()*1e10),be=0;function ve(a){let e=x.useMemo(()=>a.name||`radio-group-${me}-${++be}`,[a.name]);var l;let[n,s]=oe(a.value,(l=a.defaultValue)!==null&&l!==void 0?l:null,a.onChange),[i,r]=x.useState(null),t=ie({...a,value:n}),c=u=>{!a.isReadOnly&&!a.isDisabled&&(s(u),t.commitValidation())},f=t.displayValidation.isInvalid;return{...t,name:e,selectedValue:n,setSelectedValue:c,lastFocusedValue:i,setLastFocusedValue:r,isDisabled:a.isDisabled||!1,isReadOnly:a.isReadOnly||!1,isRequired:a.isRequired||!1,validationState:a.validationState||(f?"invalid":null),isInvalid:f}}const he=x.createContext(null),$e=x.createContext(null),A=x.createContext(null),ye=x.forwardRef(function(e,l){[e,l]=C(e,l,he);let{validationBehavior:n}=k(J)||{};var s,i;let r=(i=(s=e.validationBehavior)!==null&&s!==void 0?s:n)!==null&&i!==void 0?i:"native",t=ve({...e,validationBehavior:r}),[c,f]=U(!e["aria-label"]&&!e["aria-labelledby"]),{radioGroupProps:u,labelProps:h,descriptionProps:$,errorMessageProps:y,...g}=pe({...e,label:f,validationBehavior:r},t),m=M({...e,values:{orientation:e.orientation||"vertical",isDisabled:t.isDisabled,isReadOnly:t.isReadOnly,isRequired:t.isRequired,isInvalid:t.isInvalid,state:t},defaultClassName:"react-aria-RadioGroup"});return S.createElement("div",{...u,...m,ref:l,slot:e.slot||void 0,"data-orientation":e.orientation||"vertical","data-invalid":t.isInvalid||void 0,"data-disabled":t.isDisabled||void 0,"data-readonly":t.isReadOnly||void 0,"data-required":t.isRequired||void 0},S.createElement(z,{values:[[A,t],[Q,{...h,ref:c,elementType:"span"}],[X,{slots:{description:$,errorMessage:y}}],[K,g]]},m.children))}),ge=x.forwardRef(function(e,l){let{inputRef:n=null,...s}=e;[e,l]=C(s,l,$e);let i=S.useContext(A),r=G(x.useMemo(()=>j(n,e.inputRef!==void 0?e.inputRef:null),[n,e.inputRef])),{labelProps:t,inputProps:c,isSelected:f,isDisabled:u,isPressed:h}=fe({...O(e),children:typeof e.children=="function"?!0:e.children},i,r),{isFocused:$,isFocusVisible:y,focusProps:g}=ee(),m=u||i.isReadOnly,{hoverProps:E,isHovered:b}=ae({...e,isDisabled:m}),P=M({...e,defaultClassName:"react-aria-Radio",values:{isSelected:f,isPressed:h,isHovered:b,isFocused:$,isFocusVisible:y,isDisabled:u,isReadOnly:i.isReadOnly,isInvalid:i.isInvalid,isRequired:i.isRequired}}),R=w(e);return delete R.id,S.createElement("label",{...q(R,t,E,P),ref:l,"data-selected":f||void 0,"data-pressed":h||void 0,"data-hovered":b||void 0,"data-focused":$||void 0,"data-focus-visible":y||void 0,"data-disabled":u||void 0,"data-readonly":i.isReadOnly||void 0,"data-invalid":i.isInvalid||void 0,"data-required":i.isRequired||void 0},S.createElement(de,{elementType:"span"},S.createElement("input",{...q(c,g),ref:r})),P.children)}),Ve="_radioGroup_10m3v_1",xe="_wrap_10m3v_12",qe="_radio_10m3v_1",I={radioGroup:Ve,wrap:xe,radio:qe},_=({label:a,description:e,errorMessage:l,children:n,className:s,errorPosition:i="top",popover:r,...t})=>V.jsxs(ye,{...t,className:N(I.radioGroup,s),children:[V.jsx(se,{popover:r,children:a&&V.jsx(ue,{children:a})}),e&&V.jsx(ce,{slot:"description",children:e}),i==="top"&&V.jsx(D,{"data-testid":"fieldError",children:l}),V.jsx(L,{className:I.wrap,children:n}),i==="bottom"&&V.jsx(D,{"data-testid":"fieldError",children:l})]}),H=({className:a,...e})=>V.jsx(ge,{className:N(I.radio,a),...e});try{_.displayName="RadioGroup",_.__docgenInfo={description:"RadioGroup is used to group several radio items together",displayName:"RadioGroup",props:{label:{defaultValue:null,description:"Label for the RadioGroup",name:"label",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"Additional description rendered below the label",name:"description",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"String to display as error message or function to handle the result and produce the error message",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},errorPosition:{defaultValue:{value:"top"},description:"",name:"errorPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}},popover:{defaultValue:null,description:"An assistive text that helps the user understand the field better. Will be hidden in a popover with an info icon button.",name:"popover",required:!1,type:{name:"InfoPopoverProps"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: RadioGroupRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: RadioGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => void)"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => void)"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"((isFocused: boolean) => void)"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"string | null"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string | null"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"string | null"}},"aria-errormessage":{defaultValue:null,description:"Identifies the element that provides an error message for the object.",name:"aria-errormessage",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"((value: string) => void)"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:"enum",value:[{value:'"native"'},{value:'"aria"'}]}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"((value: string | null) => true | ValidationError | null)"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},orientation:{defaultValue:{value:"'vertical'"},description:"The axis the Radio Button(s) should align with.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}try{H.displayName="Radio",H.__docgenInfo={description:"",displayName:"Radio",props:{inputRef:{defaultValue:null,description:"A ref for the HTML input element.",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement | null>"}},isDisabled:{defaultValue:null,description:`Whether the radio button is disabled or not.
Shows that a selection exists, but is not available in that circumstance.`,name:"isDisabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => void)"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => void)"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"((isFocused: boolean) => void)"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent) => void)"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"((e: KeyboardEvent) => void)"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},value:{defaultValue:null,description:`The value of the radio button, used when submitting an HTML form.
See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio#Value).`,name:"value",required:!0,type:{name:"string"}},onHoverStart:{defaultValue:null,description:"Handler that is called when a hover interaction starts.",name:"onHoverStart",required:!1,type:{name:"((e: HoverEvent) => void)"}},onHoverEnd:{defaultValue:null,description:"Handler that is called when a hover interaction ends.",name:"onHoverEnd",required:!1,type:{name:"((e: HoverEvent) => void)"}},onHoverChange:{defaultValue:null,description:"Handler that is called when the hover state changes.",name:"onHoverChange",required:!1,type:{name:"((isHovering: boolean) => void)"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: RadioRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: RadioGroupRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: RadioGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string | null"}}}}}catch{}export{_ as R,H as a,I as s};
