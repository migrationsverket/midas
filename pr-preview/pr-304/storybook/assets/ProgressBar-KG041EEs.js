import{b as p,$ as x,i as v,a as P}from"./utils-BhWkjeqE.js";import{a as V}from"./Label-BBCc9K7K.js";import{r as m,R as b}from"./index-BbAIUH2N.js";import{$ as g}from"./filterDOMProps-BSfnXAP7.js";import{$ as I}from"./useLabel-CH4xJhfw.js";import{$ as y}from"./context-DKkYq9qZ.js";import{$ as w}from"./NumberFormatter-DT0cDaax.js";function u(r,e=-1/0,a=1/0){return Math.min(Math.max(r,e),a)}function B(r={}){let{locale:e}=y();return m.useMemo(()=>new w(e,r),[e,r])}function E(r){let{value:e=0,minValue:a=0,maxValue:t=100,valueLabel:l,isIndeterminate:f,formatOptions:o={style:"percent"}}=r,s=g(r,{labelable:!0}),{labelProps:i,fieldProps:n}=I({...r,labelElementType:"span"});e=u(e,a,t);let $=(e-a)/(t-a),c=B(o);if(!f&&!l){let d=o.style==="percent"?$:e;l=c.format(d)}return{progressBarProps:p(s,{...n,"aria-valuenow":f?void 0:e,"aria-valuemin":a,"aria-valuemax":t,"aria-valuetext":f?void 0:l,role:"progressbar"}),labelProps:i}}const R=m.createContext(null),N=m.forwardRef(function(e,a){[e,a]=x(e,a,R);let{value:t=0,minValue:l=0,maxValue:f=100,isIndeterminate:o=!1}=e;t=u(t,l,f);let[s,i]=v(),{progressBarProps:n,labelProps:$}=E({...e,label:i}),c=o?void 0:(t-l)/(f-l)*100,d=P({...e,defaultClassName:"react-aria-ProgressBar",values:{percentage:c,valueText:n["aria-valuetext"],isIndeterminate:o}});return b.createElement("div",{...n,...d,ref:a,slot:e.slot||void 0},b.createElement(V.Provider,{value:{...$,ref:s,elementType:"span"}},d.children))});export{R as $,N as a,u as b};
