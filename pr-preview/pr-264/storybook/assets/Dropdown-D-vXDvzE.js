import{j as y}from"./jsx-runtime-DtgEGaVE.js";import{$ as Se,a as Me,b as ee,c as we,e as Ke,d as Ve}from"./Collection-BJ6W1INE.js";import{g as _,d as W,w as ke,E as U,v as Ce,a as te,J as Ee,N as qe,O as _e,x as Te,k as De,D as T,$ as ne,n as ae,K as He,c as z,B as Ie,A as Fe,b as Ne}from"./useFocusable-eIx-4jzq.js";import{$ as Ae,a as Ue,b as Re,c as We,d as ze}from"./Separator-DdP6pGar.js";import{r as i,R as p}from"./index-BbAIUH2N.js";import{$ as Le,a as Oe,b as je}from"./Dialog-BRQ4G03c.js";import{a as Be}from"./Text-dcTKqkfp.js";import{b as Ge}from"./useOverlayTriggerState-Bplh0K18.js";import{c as Je,$ as le,a as Qe,b as oe}from"./SelectionManager-D7rUZ8v5.js";import{a as Xe}from"./PressResponder-gYjP6mWM.js";import{$ as Ye}from"./useMenuTriggerState-DrfP-F7z.js";import{a as Ze}from"./useMenuTrigger-CAuXZYtG.js";import{$ as et}from"./useControlledState-DGyHFLi9.js";import{a as tt}from"./FocusScope-BYskV0RP.js";import{B as nt}from"./Button-OOwtRgZe.js";import{c as at}from"./createLucideIcon-8wDOqnHv.js";const re=new WeakMap;function lt(n,t,e){let{shouldFocusWrap:a=!0,onKeyDown:l,onKeyUp:d,...c}=n;!n["aria-label"]&&!n["aria-labelledby"]&&console.warn("An aria-label or aria-labelledby prop is required for accessibility.");let r=_(n,{labelable:!0}),{listProps:o}=Ae({...c,ref:e,selectionManager:t.selectionManager,collection:t.collection,disabledKeys:t.disabledKeys,shouldFocusWrap:a,linkBehavior:"override"});return re.set(t,{onClose:n.onClose,onAction:n.onAction,shouldUseVirtualFocus:n.shouldUseVirtualFocus}),{menuProps:W(r,{onKeyDown:l,onKeyUp:d},{role:"menu",...o,onKeyDown:m=>{var f;(m.key!=="Escape"||n.shouldUseVirtualFocus)&&((f=o.onKeyDown)===null||f===void 0||f.call(o,m))}})}}function ot(n,t,e){let{id:a,key:l,closeOnSelect:d,isVirtualized:c,"aria-haspopup":r,onPressStart:o,onPressUp:m,onPress:f,onPressChange:g,onPressEnd:v,onHoverStart:b,onHoverChange:x,onHoverEnd:w,onKeyDown:P,onKeyUp:V,onFocus:k,onFocusChange:D,onBlur:ce,selectionManager:h=t.selectionManager}=n,$=!!r,O=$&&n["aria-expanded"]==="true";var H;let S=(H=n.isDisabled)!==null&&H!==void 0?H:h.isDisabled(l);var I;let j=(I=n.isSelected)!==null&&I!==void 0?I:h.isSelected(l),C=re.get(t),u=t.collection.getItem(l),M=n.onClose||C.onClose,ue=ke(),F=s=>{var A;if(!$){if(!(u==null||(A=u.props)===null||A===void 0)&&A.onAction?u.props.onAction():n.onAction&&n.onAction(l),C.onAction){let Pe=C.onAction;Pe(l)}s.target instanceof HTMLAnchorElement&&u&&ue.open(s.target,s,u.props.href,u.props.routerOptions)}},N="menuitem";$||(h.selectionMode==="single"?N="menuitemradio":h.selectionMode==="multiple"&&(N="menuitemcheckbox"));let B=U(),G=U(),J=U(),E={id:a,"aria-disabled":S||void 0,role:N,"aria-label":n["aria-label"],"aria-labelledby":B,"aria-describedby":[G,J].filter(Boolean).join(" ")||void 0,"aria-controls":n["aria-controls"],"aria-haspopup":r,"aria-expanded":n["aria-expanded"]};h.selectionMode!=="none"&&!$&&(E["aria-checked"]=j),c&&(E["aria-posinset"]=u==null?void 0:u.index,E["aria-setsize"]=Ue(t.collection));let fe=s=>{s.pointerType==="keyboard"&&F(s),o==null||o(s)},Q=()=>{!$&&M&&(d??(h.selectionMode!=="multiple"||h.isLink(l)))&&M()},pe=s=>{s.pointerType==="mouse"&&(F(s),Q()),m==null||m(s)},me=s=>{s.pointerType!=="keyboard"&&s.pointerType!=="mouse"&&(F(s),Q()),f==null||f(s)},{itemProps:K,isFocused:be}=Je({id:a,selectionManager:h,key:l,ref:e,shouldSelectOnPressUp:!0,allowsDifferentPressOrigin:!0,linkBehavior:"none",shouldUseVirtualFocus:C.shouldUseVirtualFocus}),{pressProps:he,isPressed:ye}=Ce({onPressStart:fe,onPress:me,onPressUp:pe,onPressChange:g,onPressEnd:v,isDisabled:S}),{hoverProps:$e}=te({isDisabled:S,onHoverStart(s){!Ee()&&!(O&&r==="dialog")&&(h.setFocused(!0),h.setFocusedKey(l)),b==null||b(s)},onHoverChange:x,onHoverEnd:w}),{keyboardProps:ge}=qe({onKeyDown:s=>{if(s.repeat){s.continuePropagation();return}switch(s.key){case" ":!S&&h.selectionMode==="none"&&!$&&d!==!1&&M&&M();break;case"Enter":!S&&d!==!1&&!$&&M&&M();break;default:$||s.continuePropagation(),P==null||P(s);break}},onKeyUp:V}),{focusProps:ve}=_e({onBlur:ce,onFocus:k,onFocusChange:D}),X=_(u==null?void 0:u.props);delete X.id;let xe=Te(u==null?void 0:u.props);return{menuItemProps:{...E,...W(X,xe,$?{onFocus:K.onFocus,"data-key":K["data-key"]}:K,he,$e,ge,ve),tabIndex:K.tabIndex!=null&&O?-1:K.tabIndex},labelProps:{id:B},descriptionProps:{id:G},keyboardShortcutProps:{id:J},isFocused:be,isSelected:j,isPressed:ye,isDisabled:S}}function rt(n){let{heading:t,"aria-label":e}=n,a=De();return{itemProps:{role:"presentation"},headingProps:t?{id:a,role:"presentation"}:{},groupProps:{role:"group","aria-label":e,"aria-labelledby":t?a:void 0}}}class it{*[Symbol.iterator](){yield*this.iterable}get size(){return this.keyMap.size}getKeys(){return this.keyMap.keys()}getKeyBefore(t){let e=this.keyMap.get(t);var a;return e&&(a=e.prevKey)!==null&&a!==void 0?a:null}getKeyAfter(t){let e=this.keyMap.get(t);var a;return e&&(a=e.nextKey)!==null&&a!==void 0?a:null}getFirstKey(){return this.firstKey}getLastKey(){return this.lastKey}getItem(t){var e;return(e=this.keyMap.get(t))!==null&&e!==void 0?e:null}at(t){const e=[...this.getKeys()];return this.getItem(e[t])}constructor(t,{expandedKeys:e}={}){this.keyMap=new Map,this.firstKey=null,this.lastKey=null,this.iterable=t,e=e||new Set;let a=r=>{if(this.keyMap.set(r.key,r),r.childNodes&&(r.type==="section"||e.has(r.key)))for(let o of r.childNodes)a(o)};for(let r of t)a(r);let l=null,d=0;for(let[r,o]of this.keyMap)l?(l.nextKey=r,o.prevKey=l.key):(this.firstKey=r,o.prevKey=void 0),o.type==="item"&&(o.index=d++),l=o,l.nextKey=void 0;var c;this.lastKey=(c=l==null?void 0:l.key)!==null&&c!==void 0?c:null}}function st(n){let{onExpandedChange:t}=n,[e,a]=et(n.expandedKeys?new Set(n.expandedKeys):void 0,n.defaultExpandedKeys?new Set(n.defaultExpandedKeys):new Set,t),l=le(n),d=i.useMemo(()=>n.disabledKeys?new Set(n.disabledKeys):new Set,[n.disabledKeys]),c=Qe(n,i.useCallback(o=>new it(o,{expandedKeys:e}),[e]),null);return i.useEffect(()=>{l.focusedKey!=null&&!c.getItem(l.focusedKey)&&l.setFocusedKey(null)},[c,l.focusedKey]),{collection:c,expandedKeys:e,disabledKeys:d,toggleKey:o=>{a(dt(e,o))},setExpandedKeys:a,selectionManager:new oe(c,l)}}function dt(n,t){let e=new Set(n);return e.has(t)?e.delete(t):e.add(t),e}const ct=i.createContext({}),ie=i.createContext(null),L=i.createContext(null),se=i.createContext(null),q=i.createContext(null);function ut(n){let t=Ye(n),e=i.useRef(null),{menuTriggerProps:a,menuProps:l}=Ze({...n,type:"menu"},t,e),[d,c]=i.useState(null),r=i.useCallback(()=>{e.current&&c(e.current.offsetWidth+"px")},[e]);Ge({ref:e,onResize:r});let o=i.useRef(null);return p.createElement(T,{values:[[ie,{...l,ref:o}],[Le,t],[se,t],[Oe,{trigger:"MenuTrigger",triggerRef:e,scrollRef:o,placement:"bottom start",style:{"--trigger-width":d}}]]},p.createElement(Xe,{...a,ref:e,isPressed:t.isOpen},n.children))}const ft=i.createContext(null),pt=i.forwardRef(function(t,e){return[t,e]=ne(t,e,ie),p.createElement(Se,{content:p.createElement(Me,t)},a=>a.size>0&&p.createElement(mt,{props:t,collection:a,menuRef:e}))});function mt({props:n,collection:t,menuRef:e}){let{filterFn:a,collectionProps:l,collectionRef:d}=i.useContext(Re)||{};e=ae(i.useMemo(()=>He(e,d!==void 0?d:null),[d,e]));let c=i.useMemo(()=>a?t.filter(a):t,[t,a]),r=st({...n,collection:c,children:void 0}),o=i.useContext(se),{isVirtualized:m,CollectionRoot:f}=i.useContext(ee),{menuProps:g}=lt({...n,...l,isVirtualized:m,onClose:n.onClose||(o==null?void 0:o.close)},r,e),v=z({defaultClassName:"react-aria-Menu",className:n.className,style:n.style,values:{}});return p.createElement(tt,null,p.createElement("div",{..._(n),...g,...v,ref:e,slot:n.slot||void 0,onScroll:n.onScroll},p.createElement(T,{values:[[L,r],[We,{elementType:"div"}],[we,{name:"MenuSection",render:ht}],[ft,{parentMenuRef:e}],[R,null],[q,r.selectionManager]]},p.createElement(f,{collection:r.collection,persistedKeys:Ke(r.selectionManager.focusedKey),scrollRef:e}))))}class bt extends oe{get focusedKey(){return this.parent.focusedKey}get isFocused(){return this.parent.isFocused}setFocusedKey(t,e){return this.parent.setFocusedKey(t,e)}setFocused(t){this.parent.setFocused(t)}get childFocusStrategy(){return this.parent.childFocusStrategy}constructor(t,e){super(t.collection,e),this.parent=t}}function ht(n,t,e,a="react-aria-MenuSection"){var l,d;let c=i.useContext(L),{CollectionBranch:r}=i.useContext(ee),[o,m]=Ie();var f;let{headingProps:g,groupProps:v}=rt({heading:m,"aria-label":(f=e.props["aria-label"])!==null&&f!==void 0?f:void 0}),b=z({defaultClassName:a,className:(l=e.props)===null||l===void 0?void 0:l.className,style:(d=e.props)===null||d===void 0?void 0:d.style,values:{}}),x=i.useContext(q),w=le(n),P=n.selectionMode!=null?new bt(x,w):x;return p.createElement("section",{..._(n),...v,...b,ref:t},p.createElement(T,{values:[[ze,{...g,ref:o}],[q,P]]},p.createElement(r,{collection:c.collection,parent:e})))}const R=i.createContext(null),yt=Ve("item",function(t,e,a){var l;[t,e]=ne(t,e,R);let d=(l=Fe(R))===null||l===void 0?void 0:l.id,c=i.useContext(L),r=ae(e),o=i.useContext(q),{menuItemProps:m,labelProps:f,descriptionProps:g,keyboardShortcutProps:v,...b}=ot({...t,id:d,key:a.key,selectionManager:o},c,r),{isFocusVisible:x,focusProps:w}=Ne(),{hoverProps:P,isHovered:V}=te({isDisabled:b.isDisabled}),k=z({...t,id:void 0,children:a.rendered,defaultClassName:"react-aria-MenuItem",values:{...b,isHovered:V,isFocusVisible:x,selectionMode:o.selectionMode,selectionBehavior:o.selectionBehavior,hasSubmenu:!!t["aria-haspopup"],isOpen:t["aria-expanded"]==="true"}}),D=t.href?"a":"div";return p.createElement(D,{...W(m,w,P),...k,ref:r,"data-disabled":b.isDisabled||void 0,"data-hovered":V||void 0,"data-focused":b.isFocused||void 0,"data-focus-visible":x||void 0,"data-pressed":b.isPressed||void 0,"data-selected":b.isSelected||void 0,"data-selection-mode":o.selectionMode==="none"?void 0:o.selectionMode,"data-has-submenu":!!t["aria-haspopup"]||void 0,"data-open":t["aria-expanded"]==="true"||void 0},p.createElement(T,{values:[[Be,{slots:{label:f,description:g}}],[ct,v]]},k.children))});/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const $t=at("EllipsisVertical",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"12",cy:"5",r:"1",key:"gxeob9"}],["circle",{cx:"12",cy:"19",r:"1",key:"lyex9k"}]]),gt='"../theme/tokens.css"',vt='"Inter", sans-serif',xt="0 0 0 2px #ffffff, 0 0 0 4px #000000",Pt="#f2f2f2",St="_dropDownMenu_1f4ap_4",Mt="_dropdownMenu_1f4ap_15",de={tokens:gt,display:vt,focus:xt,gray10:Pt,dropDownMenu:St,dropdownMenu:Mt};function Y({label:n,title:t,children:e,...a}){return y.jsxs(ut,{...a,children:[y.jsxs(nt,{"aria-label":n||a["aria-label"],variant:"icon",children:[t,y.jsx($t,{size:20,"aria-hidden":!0})]}),y.jsx(je,{children:y.jsx(pt,{...a,className:de.dropDownMenu,children:e})})]})}function Z(n){const t=n.textValue||(typeof n.children=="string"?n.children:void 0);return y.jsx(yt,{...n,textValue:t,className:({isFocused:e,isOpen:a})=>`${de.dropdownMenu} ${e?"focused":""} ${a?"open":""}`,children:({hasSubmenu:e})=>y.jsxs(y.Fragment,{children:[n.children,e&&y.jsx("svg",{className:"chevron",viewBox:"0 0 24 24",children:y.jsx("path",{d:"m9 18 6-6-6-6"})})]})})}try{Y.displayName="Dropdown",Y.__docgenInfo={description:"",displayName:"Dropdown",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"Where the focus should be set.",name:"autoFocus",required:!1,type:{name:"boolean | FocusStrategy"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},disallowEmptySelection:{defaultValue:null,description:"Whether the collection allows empty selection.",name:"disallowEmptySelection",required:!1,type:{name:"boolean"}},onSelectionChange:{defaultValue:null,description:"Handler that is called when the selection changes.",name:"onSelectionChange",required:!1,type:{name:"(keys: Selection) => void"}},shouldFocusWrap:{defaultValue:null,description:"Whether keyboard navigation is circular.",name:"shouldFocusWrap",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Item objects in the collection.",name:"items",required:!1,type:{name:"Iterable<T>"}},disabledKeys:{defaultValue:null,description:"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",name:"disabledKeys",required:!1,type:{name:"Iterable<Key>"}},onAction:{defaultValue:null,description:"Handler that is called when an item is selected.",name:"onAction",required:!1,type:{name:"(key: Key) => void"}},onClose:{defaultValue:null,description:"Handler that is called when the menu should close after selecting an item.",name:"onClose",required:!1,type:{name:"() => void"}},selectionMode:{defaultValue:null,description:"The type of selection that is allowed in the collection.",name:"selectionMode",required:!1,type:{name:"enum",value:[{value:'"single"'},{value:'"none"'},{value:'"multiple"'}]}},selectedKeys:{defaultValue:null,description:"The currently selected keys in the collection (controlled).",name:"selectedKeys",required:!1,type:{name:'Iterable<Key> | "all"'}},defaultSelectedKeys:{defaultValue:null,description:"The initial selected keys in the collection (uncontrolled).",name:"defaultSelectedKeys",required:!1,type:{name:'Iterable<Key> | "all"'}},children:{defaultValue:null,description:"The contents of the collection.",name:"children",required:!1,type:{name:"ReactNode | ((item: T) => ReactNode)"}},dependencies:{defaultValue:null,description:"Values that should invalidate the item cache when using dynamic collections.",name:"dependencies",required:!1,type:{name:"any[]"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element.",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element.",name:"style",required:!1,type:{name:"CSSProperties"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},onScroll:{defaultValue:null,description:"Handler that is called when a user scrolls. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event).",name:"onScroll",required:!1,type:{name:"(e: UIEvent<HTMLDivElement, UIEvent>) => void"}},isOpen:{defaultValue:null,description:"Whether the overlay is open by default (controlled).",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}},trigger:{defaultValue:{value:"'press'"},description:"How the menu is triggered.",name:"trigger",required:!1,type:{name:"enum",value:[{value:'"press"'},{value:'"longPress"'}]}}}}}catch{}try{Z.displayName="DropdownItem",Z.__docgenInfo={description:"",displayName:"DropdownItem",props:{id:{defaultValue:null,description:"The unique id of the item.",name:"id",required:!1,type:{name:"Key"}},value:{defaultValue:null,description:"The object value that this item represents. When using dynamic collections, this is set automatically.",name:"value",required:!1,type:{name:"object"}},textValue:{defaultValue:null,description:"A string representation of the item's contents, used for features like typeahead.",name:"textValue",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"An accessibility label for this item.",name:"aria-label",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Whether the item is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},onAction:{defaultValue:null,description:"Handler that is called when the item is selected.",name:"onAction",required:!1,type:{name:"() => void"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: MenuItemRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: MenuItemRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: MenuItemRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},href:{defaultValue:null,description:"A URL to link to. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href).",name:"href",required:!1,type:{name:"string"}},hrefLang:{defaultValue:null,description:"Hints at the human language of the linked URL. See[MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#hreflang).",name:"hrefLang",required:!1,type:{name:"string"}},target:{defaultValue:null,description:"The target window for the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).",name:"target",required:!1,type:{name:"HTMLAttributeAnchorTarget"}},rel:{defaultValue:null,description:"The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).",name:"rel",required:!1,type:{name:"string"}},download:{defaultValue:null,description:"Causes the browser to download the linked URL. A string may be provided to suggest a file name. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download).",name:"download",required:!1,type:{name:"string | boolean"}},ping:{defaultValue:null,description:"A space-separated list of URLs to ping when the link is followed. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping).",name:"ping",required:!1,type:{name:"string"}},referrerPolicy:{defaultValue:null,description:"How much of the referrer to send when following the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy).",name:"referrerPolicy",required:!1,type:{name:"enum",value:[{value:'""'},{value:'"no-referrer"'},{value:'"no-referrer-when-downgrade"'},{value:'"origin"'},{value:'"origin-when-cross-origin"'},{value:'"same-origin"'},{value:'"strict-origin"'},{value:'"strict-origin-when-cross-origin"'},{value:'"unsafe-url"'}]}},routerOptions:{defaultValue:null,description:"Options for the configured client side router.",name:"routerOptions",required:!1,type:{name:"never"}},onHoverStart:{defaultValue:null,description:"Handler that is called when a hover interaction starts.",name:"onHoverStart",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverEnd:{defaultValue:null,description:"Handler that is called when a hover interaction ends.",name:"onHoverEnd",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverChange:{defaultValue:null,description:"Handler that is called when the hover state changes.",name:"onHoverChange",required:!1,type:{name:"(isHovering: boolean) => void"}}}}}catch{}export{Y as D,Z as a};
