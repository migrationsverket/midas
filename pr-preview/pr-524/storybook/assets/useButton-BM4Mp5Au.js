import{$ as i}from"./utils-Dv9Ux5aE.js";import{$ as D}from"./filterDOMProps-BSfnXAP7.js";import{$ as F}from"./usePress-DljlCKCj.js";import{$ as k}from"./useFocusable-b_0ijIRa.js";function S(e,t){let{elementType:s="button",isDisabled:r,onPress:l,onPressStart:c,onPressEnd:p,onPressUp:f,onPressChange:u,preventFocusOnPress:P,allowFocusWhenDisabled:b,onClick:o,href:$,target:h,rel:m,type:d="button"}=e,a;s==="button"?a={type:d,disabled:r}:a={role:"button",href:s==="a"&&!r?$:void 0,target:s==="a"?h:void 0,type:s==="input"?d:void 0,disabled:s==="input"?r:void 0,"aria-disabled":!r||s==="input"?void 0:r,rel:s==="a"?m:void 0};let{pressProps:x,isPressed:C}=F({onPressStart:c,onPressEnd:p,onPressChange:u,onPress:l,onPressUp:f,isDisabled:r,preventFocusOnPress:P,ref:t}),{focusableProps:n}=k(e,t);b&&(n.tabIndex=r?-1:n.tabIndex);let g=i(n,x,D(e,{labelable:!0}));return{isPressed:C,buttonProps:i(a,g,{"aria-haspopup":e["aria-haspopup"],"aria-expanded":e["aria-expanded"],"aria-controls":e["aria-controls"],"aria-pressed":e["aria-pressed"],"aria-current":e["aria-current"],onClick:y=>{o&&(o(y),console.warn("onClick is deprecated, please use onPress"))}})}}export{S as $};
