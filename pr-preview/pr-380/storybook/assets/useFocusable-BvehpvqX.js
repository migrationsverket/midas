import{a as $,$ as p}from"./focusSafely-BIGdxh6G.js";import{e as P}from"./useFocusRing-HUlwicEq.js";import{k as x,f as d}from"./utils-B5vVULSi.js";import{R as c,r as s}from"./index-BbAIUH2N.js";function l(e){if(!e)return;let t=!0;return r=>{let o={...r,preventDefault(){r.preventDefault()},isDefaultPrevented(){return r.isDefaultPrevented()},stopPropagation(){t?console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior."):t=!0},continuePropagation(){t=!1},isPropagationStopped(){return t}};e(o),t&&r.stopPropagation()}}function v(e){return{keyboardProps:e.isDisabled?{}:{onKeyDown:l(e.onKeyDown),onKeyUp:l(e.onKeyUp)}}}let b=c.createContext(null);function m(e){let t=s.useContext(b)||{};p(t,e);let{ref:r,...o}=t;return o}const F=c.forwardRef(function(t,r){let{children:o,...a}=t,n=x(r),f={...a,ref:n};return c.createElement(b.Provider,{value:f},o)});function k(e,t){let{focusProps:r}=P(e),{keyboardProps:o}=v(e),a=d(r,o),n=m(t),f=e.isDisabled?{}:n,u=s.useRef(e.autoFocus);s.useEffect(()=>{u.current&&t.current&&$(t.current),u.current=!1},[t]);let i=e.excludeFromTabOrder?-1:0;return e.isDisabled&&(i=void 0),{focusableProps:d({...a,tabIndex:i},f)}}export{k as $,b as a,F as b,v as c};
