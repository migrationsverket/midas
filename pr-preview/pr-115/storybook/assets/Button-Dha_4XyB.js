import{j as v}from"./jsx-runtime-Nms4Y4qS.js";import{m as N,l as I,c as x,n as V,$ as q,e as B,d as k,f as D,r as w}from"./useFocusable-VocBF6K7.js";import{r as $,R as T}from"./index-BwDkhjyp.js";import{a as F}from"./Hidden-C_TSN0PF.js";import{c as O}from"./clsx-B-dksMZM.js";function M(e,t){let{elementType:a="button",isDisabled:n,onPress:i,onPressStart:r,onPressEnd:s,onPressUp:d,onPressChange:f,preventFocusOnPress:P,allowFocusWhenDisabled:h,onClick:b,href:y,target:m,rel:p,type:l="button"}=e,u;a==="button"?u={type:l,disabled:n}:u={role:"button",tabIndex:n?void 0:0,href:a==="a"&&n?void 0:y,target:a==="a"?m:void 0,type:a==="input"?l:void 0,disabled:a==="input"?n:void 0,"aria-disabled":!n||a==="input"?void 0:n,rel:a==="a"?p:void 0};let{pressProps:g,isPressed:A}=N({onPressStart:r,onPressEnd:s,onPressChange:f,onPress:i,onPressUp:d,isDisabled:n,preventFocusOnPress:P,ref:t}),{focusableProps:_}=I(e,t);h&&(_.tabIndex=n?-1:_.tabIndex);let E=x(_,g,V(e,{labelable:!0}));return{isPressed:A,buttonProps:x(u,E,{"aria-haspopup":e["aria-haspopup"],"aria-expanded":e["aria-expanded"],"aria-controls":e["aria-controls"],"aria-pressed":e["aria-pressed"],onClick:S=>{b&&(b(S),console.warn("onClick is deprecated, please use onPress"))}})}}const C=7e3;let o=null;function L(e,t="assertive",a=C){o?o.announce(e,t,a):(o=new j,(typeof IS_REACT_ACT_ENVIRONMENT=="boolean"?IS_REACT_ACT_ENVIRONMENT:typeof jest<"u")?o.announce(e,t,a):setTimeout(()=>{o!=null&&o.isAttached()&&(o==null||o.announce(e,t,a))},100))}function Re(e){o&&o.clear(e)}class j{isAttached(){var t;return(t=this.node)===null||t===void 0?void 0:t.isConnected}createLog(t){let a=document.createElement("div");return a.setAttribute("role","log"),a.setAttribute("aria-live",t),a.setAttribute("aria-relevant","additions"),a}destroy(){this.node&&(document.body.removeChild(this.node),this.node=null)}announce(t,a="assertive",n=C){var i,r;if(!this.node)return;let s=document.createElement("div");typeof t=="object"?(s.setAttribute("role","img"),s.setAttribute("aria-labelledby",t["aria-labelledby"])):s.textContent=t,a==="assertive"?(i=this.assertiveLog)===null||i===void 0||i.appendChild(s):(r=this.politeLog)===null||r===void 0||r.appendChild(s),t!==""&&setTimeout(()=>{s.remove()},n)}clear(t){this.node&&((!t||t==="assertive")&&this.assertiveLog&&(this.assertiveLog.innerHTML=""),(!t||t==="polite")&&this.politeLog&&(this.politeLog.innerHTML=""))}constructor(){this.node=null,this.assertiveLog=null,this.politeLog=null,typeof document<"u"&&(this.node=document.createElement("div"),this.node.dataset.liveAnnouncer="true",Object.assign(this.node.style,{border:0,clip:"rect(0 0 0 0)",clipPath:"inset(50%)",height:"1px",margin:"-1px",overflow:"hidden",padding:0,position:"absolute",width:"1px",whiteSpace:"nowrap"}),this.assertiveLog=this.createLog("assertive"),this.node.appendChild(this.assertiveLog),this.politeLog=this.createLog("polite"),this.node.appendChild(this.politeLog),document.body.prepend(this.node))}}const z=$.createContext(null),U=new Set(["form","formAction","formEncType","formMethod","formNoValidate","formTarget","name","value"]),H=$.createContext({});function W(e,t){[e,t]=q(e,t,H),e=K(e);let a=e,{isPending:n}=a,{buttonProps:i,isPressed:r}=M(e,t),{focusProps:s,isFocused:d,isFocusVisible:f}=B(e),{hoverProps:P,isHovered:h}=k({...e,isDisabled:e.isDisabled||n}),b={isHovered:h,isPressed:(a.isPressed||r)&&!n,isFocused:d,isFocusVisible:f,isDisabled:e.isDisabled||!1,isPending:n??!1},y=D({...e,values:b,defaultClassName:"react-aria-Button"}),m=w(i.id),p=w(),l=i["aria-labelledby"];n&&(l?l=`${l} ${p}`:i["aria-label"]&&(l=`${m} ${p}`));let u=$.useRef(n);return $.useEffect(()=>{let g={"aria-labelledby":l||m};(!u.current&&d&&n||u.current&&d&&!n)&&L(g,"assertive"),u.current=n},[n,d,l,m]),T.createElement("button",{...V(e,{propNames:U}),...x(i,s,P),...y,id:m,ref:t,"aria-labelledby":l,slot:e.slot||void 0,"aria-disabled":n?"true":i["aria-disabled"],"data-disabled":e.isDisabled||void 0,"data-pressed":b.isPressed||void 0,"data-hovered":h||void 0,"data-focused":d||void 0,"data-pending":n||void 0,"data-focus-visible":f||void 0},T.createElement(z.Provider,{value:{id:p}},y.children))}function K(e){return e.isPending&&(e.onPress=void 0,e.onPressStart=void 0,e.onPressEnd=void 0,e.onPressChange=void 0,e.onPressUp=void 0,e.onKeyDown=void 0,e.onKeyUp=void 0,e.onClick=void 0,e.href=void 0),e}const G=F(W),Y='"../../../theme/src/lib/tokens.css"',J="#143c50",Q="#25607f",X="#4289ad",Z='"Inter", sans-serif',ee="1rem",te="500",ne="#ffffff",ae="#bfbfbf",ie="#f2f2f2",se="#e6e6e6",oe="#000000",re="undefined",de="(max-width: 767px)",le="#e62323",ce="#b31b1b",ue="#801313",fe="_button_1aco3_4",me="_primary_1aco3_35",be="_secondary_1aco3_41",pe="_tertiary_1aco3_70",he="_iconBtn_1aco3_97",ye="_danger_1aco3_119",ge="_iconLeft_1aco3_146",ve="_iconRight_1aco3_150",$e="_fullwidth_1aco3_154",Pe="_small_1aco3_158",c={tokens:Y,blue150:J,blue130:Q,blue90:X,display:Z,desktopSize:ee,mediumWeight:te,white:ne,gray50:ae,gray10:ie,gray20:se,black:oe,medium:re,smBreakpoint:de,signalRed100:le,signalRed130:ce,signalRed150:ue,button:fe,primary:me,secondary:be,tertiary:pe,iconBtn:he,danger:ye,iconLeft:ge,iconRight:ve,fullwidth:$e,small:Pe},R=({variant:e="primary",fullwidth:t,className:a,iconPlacement:n,size:i,icon:r,iconSize:s,...d})=>{const f=i==="small"?14:s||16;return v.jsx(G,{className:O(c.button,e==="primary"&&c.primary,e==="secondary"&&c.secondary,e==="tertiary"&&c.tertiary,e==="danger"&&c.danger,e==="icon"&&c.iconBtn,t&&c.fullwidth,i==="small"&&c.small,n==="right"?c.iconRight:c.iconLeft,a),...d,children:v.jsxs(v.Fragment,{children:[r&&v.jsx(r,{size:f}),d.children]})})};try{R.displayName="Button",R.__docgenInfo={description:"Buttons are used when the user should performed an action, for example send a form.",displayName:"Button",props:{variant:{defaultValue:{value:"primary"},description:"Primary button is used as a positive action in a flow. Always use one primary button and never a seconday button on it's own. When using just an icon you must pass an aria-label",name:"variant",required:!1,type:{name:'"icon" | "primary" | "secondary" | "tertiary" | "danger"'}},fullwidth:{defaultValue:null,description:"",name:"fullwidth",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:'"small"'}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"LucideIcon"}},iconSize:{defaultValue:null,description:"",name:"iconSize",required:!1,type:{name:"number"}},iconPlacement:{defaultValue:null,description:"",name:"iconPlacement",required:!1,type:{name:'"left" | "right"'}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"(ReactNode | ((values: ButtonRenderProps & { defaultChildren: ReactNode; }) => ReactNode)) & (ReactNode | ((values: ButtonRenderProps & { ...; }) => ReactNode))"}},form:{defaultValue:null,description:"The `<form>` element to associate the button with.\nThe value of this attribute must be the id of a `<form>` in the same document.",name:"form",required:!1,type:{name:"string"}},formAction:{defaultValue:null,description:`The URL that processes the information submitted by the button.
Overrides the action attribute of the button's form owner.`,name:"formAction",required:!1,type:{name:"string"}},formEncType:{defaultValue:null,description:"Indicates how to encode the form data that is submitted.",name:"formEncType",required:!1,type:{name:"string"}},formMethod:{defaultValue:null,description:"Indicates the HTTP method used to submit the form.",name:"formMethod",required:!1,type:{name:"string"}},formNoValidate:{defaultValue:null,description:"Indicates that the form is not to be validated when it is submitted.",name:"formNoValidate",required:!1,type:{name:"boolean"}},formTarget:{defaultValue:null,description:"Overrides the target attribute of the button's form owner.",name:"formTarget",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"Submitted as a pair with the button's value as part of the form data.",name:"name",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The value associated with the button's name when it's submitted with the form data.",name:"value",required:!1,type:{name:"string"}},isPending:{defaultValue:null,description:`Whether the button is in a pending state. This disables press and hover events
while retaining focusability, and announces the pending state to screen readers.`,name:"isPending",required:!1,type:{name:"boolean"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: ButtonRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: ButtonRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}}}}}catch{}export{H as $,R as B,c as a,G as b,L as c,M as d,Re as e};
