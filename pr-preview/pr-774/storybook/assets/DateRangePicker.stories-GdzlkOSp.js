import{j as e}from"./iframe-y3zUiO1J.js";import{b as S,D as P,a as T,s as _}from"./DatePickerPopover-ZMB74tOn.js";import{c as C}from"./clsx-B-dksMZM.js";import{a as N,L as k}from"./Label-D50A2xp0.js";import{s as I,D as c,a as h}from"./DateInput-DUJwYj6F.js";import{R as W}from"./RangeCalendar-CAdSnk24.js";import{T as j}from"./Text-D3c_H73L.js";import{F as f}from"./FieldError-2gwiE8FS.js";import"./preload-helper-Dp1pzeXC.js";import"./Button-CzVrwDkD.js";import"./utils-DgfIEZ2l.js";import"./Hidden-LIVvUHEl.js";import"./useFocusRing-CCdMQ_TW.js";import"./index-CT42ImiZ.js";import"./index-Dli5INss.js";import"./useLabels-BPMr3Cme.js";import"./useButton-WDu1xsqv.js";import"./CalendarHeader-B-BjCiEn.js";import"./RSPContexts-CN-cgumh.js";import"./Text-B2aZuF7F.js";import"./useDateFormatter-BYaLjS33.js";import"./useControlledState-BMSmXNYe.js";import"./useLocalizedStringFormatter-ok5SO70Y.js";import"./LocalizedStringFormatter-BB0Nk989.js";import"./useUpdateEffect-DvalZOKq.js";import"./useEvent-CpudPYOj.js";import"./getScrollParent-CvodOSaS.js";import"./scrollIntoView-Dsrcj58z.js";import"./useDescription-BnySdmCV.js";import"./VisuallyHidden-CbO0bNHC.js";import"./Button-BDrqJzdG.js";import"./Button.module-CF2bVDCq.js";import"./createLucideIcon-DqdaTGZ4.js";import"./Heading-4TV7P-nQ.js";import"./Dialog-jykJmB8a.js";import"./OverlayArrow-DfG-W09j.js";import"./useResizeObserver-CcvnX-FU.js";import"./Collection-DhfTE3E9.js";import"./index-oR09zEQD.js";import"./Separator-DPfAiPIW.js";import"./SelectionManager-D6gO8XHw.js";import"./FocusScope-Ybh16f8F.js";import"./ListKeyboardDelegate-DVZN-xzJ.js";import"./PressResponder-DIkBwjt6.js";import"./Form-C9OW_fOx.js";import"./useFormValidation-PO_CdwIB.js";import"./Group-VcPXw0PH.js";import"./useField-BbATYL60.js";import"./Dialog-CCXtrWxX.js";import"./useLocalizedStringFormatter-BAtcx0ZI.js";import"./x-BJvE-ZNY.js";import"./info-B0u-oiiz.js";import"./Input-CTNB8dNx.js";import"./useFilter-Dnw2j1Uy.js";const s=()=>e.jsx("span",{"aria-hidden":"true",className:I.divider,children:"-"});try{s.displayName="DateInputDivider",s.__docgenInfo={description:"",displayName:"DateInputDivider",props:{}}}catch{}const d=({className:a,description:t,errorMessage:l,errorPosition:u="top",label:m,popover:R,...p})=>e.jsxs(S,{className:C(_.datePicker,a),...p,children:[e.jsx(N,{popover:R,children:m&&e.jsx(k,{children:m})}),t&&e.jsx(j,{slot:"description",children:t}),u==="top"&&e.jsx(f,{children:l}),e.jsxs(P,{...p,children:[e.jsx(c,{slot:"start",children:o=>e.jsx(h,{segment:o})}),e.jsx(s,{}),e.jsx(c,{slot:"end",children:o=>e.jsx(h,{segment:o})})]}),u==="bottom"&&e.jsx(f,{children:l}),e.jsx(T,{children:e.jsx(W,{})})]});try{d.displayName="DateRangePicker",d.__docgenInfo={description:"",displayName:"DateRangePicker",props:{description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},errorPosition:{defaultValue:{value:"top"},description:"",name:"errorPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},size:{defaultValue:{value:"'large'"},description:"Component size (large: height 48px, medium: height 40px)",name:"size",required:!1,type:{name:"enum",value:[{value:'"large"'},{value:'"medium"'}]}},popover:{defaultValue:null,description:"An assistive text that helps the user understand the field better. Will be hidden in a popover with an info icon button.",name:"popover",required:!1,type:{name:"InfoPopoverProps"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"RangeValue<DateValue> | null"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => void)"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => void)"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"((value: RangeValue<DateValue> | null) => void)"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent) => void)"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"((e: KeyboardEvent) => void)"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"RangeValue<DateValue> | null"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"((value: RangeValue<DateValue>) => true | ValidationError | null)"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"((isFocused: boolean) => void)"}},minValue:{defaultValue:null,description:"The minimum allowed date that a user may select.",name:"minValue",required:!1,type:{name:"DateValue | null"}},maxValue:{defaultValue:null,description:"The maximum allowed date that a user may select.",name:"maxValue",required:!1,type:{name:"DateValue | null"}},isDateUnavailable:{defaultValue:null,description:"Callback that is called for each date of the calendar. If it returns true, then the date is unavailable.",name:"isDateUnavailable",required:!1,type:{name:"((date: DateValue) => boolean)"}},pageBehavior:{defaultValue:{value:"visible"},description:"Controls the behavior of paging. Pagination either works by advancing the visible page by visibleDuration (default) or one unit of visibleDuration.",name:"pageBehavior",required:!1,type:{name:"enum",value:[{value:'"single"'},{value:'"visible"'}]}},firstDayOfWeek:{defaultValue:null,description:"The day that starts the week.",name:"firstDayOfWeek",required:!1,type:{name:"enum",value:[{value:'"sun"'},{value:'"mon"'},{value:'"tue"'},{value:'"wed"'},{value:'"thu"'},{value:'"fri"'},{value:'"sat"'}]}},allowsNonContiguousRanges:{defaultValue:null,description:"When combined with `isDateUnavailable`, determines whether non-contiguous ranges,\ni.e. ranges containing unavailable dates, may be selected.",name:"allowsNonContiguousRanges",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"((isOpen: boolean) => void)"}},isOpen:{defaultValue:null,description:"Whether the overlay is open by default (controlled).",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},placeholderValue:{defaultValue:null,description:"A placeholder date that influences the format of the placeholder shown when no value is selected. Defaults to today's date at midnight.",name:"placeholderValue",required:!1,type:{name:"DateValue | null"}},hourCycle:{defaultValue:null,description:"Whether to display the time in 12 or 24 hour format. By default, this is determined by the user's locale.",name:"hourCycle",required:!1,type:{name:"enum",value:[{value:"12"},{value:"24"}]}},granularity:{defaultValue:null,description:'Determines the smallest unit that is displayed in the date picker. By default, this is `"day"` for dates, and `"minute"` for times.',name:"granularity",required:!1,type:{name:"enum",value:[{value:'"day"'},{value:'"hour"'},{value:'"minute"'},{value:'"second"'}]}},hideTimeZone:{defaultValue:{value:"false"},description:"Whether to hide the time zone abbreviation.",name:"hideTimeZone",required:!1,type:{name:"boolean"}},shouldForceLeadingZeros:{defaultValue:null,description:`Whether to always show leading zeros in the month, day, and hour fields.
By default, this is determined by the user's locale.`,name:"shouldForceLeadingZeros",required:!1,type:{name:"boolean"}},startName:{defaultValue:null,description:"The name of the start date input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"startName",required:!1,type:{name:"string"}},endName:{defaultValue:null,description:"The name of the end date input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"endName",required:!1,type:{name:"string"}},shouldCloseOnSelect:{defaultValue:{value:"true"},description:"Determines whether the date picker popover should close automatically when a date is selected.",name:"shouldCloseOnSelect",required:!1,type:{name:"boolean | (() => boolean)"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:"enum",value:[{value:'"aria"'},{value:'"native"'}]}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: DateRangePickerRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: DateRangePickerRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: DateRangePickerRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string | null"}}}}}catch{}const{expect:E}=__STORYBOOK_MODULE_TEST__,Oe={component:d,title:"Components/DatePicker/DateRangePicker",tags:["autodocs"],parameters:{a11y:{config:{rules:[{id:"color-contrast",selector:'[data-placeholder="true"]',enabled:!1}]},options:{rules:{"color-contrast":{enabled:!1}}}}},args:{label:"Välj datum",description:"Beskrivning",errorMessage:"Felmeddelande",errorPosition:"top"}},n={play:async({step:a,canvas:t,globals:{size:l}})=>{await a("it should change size according to size prop",async()=>{await E(t.getByRole("group")).toHaveStyle({height:l==="large"?"48px":"40px"})})}},i={args:{isDisabled:!0}},r={args:{isInvalid:!0}};var v,y,g;n.parameters={...n.parameters,docs:{...(v=n.parameters)==null?void 0:v.docs,source:{originalSource:`{
  play: async ({
    step,
    canvas,
    globals: {
      size
    }
  }) => {
    await step('it should change size according to size prop', async () => {
      await expect(canvas.getByRole('group')).toHaveStyle({
        height: size === 'large' ? '48px' : '40px'
      });
    });
  }
}`,...(g=(y=n.parameters)==null?void 0:y.docs)==null?void 0:g.source}}};var b,V,q;i.parameters={...i.parameters,docs:{...(b=i.parameters)==null?void 0:b.docs,source:{originalSource:`{
  args: {
    isDisabled: true
  }
}`,...(q=(V=i.parameters)==null?void 0:V.docs)==null?void 0:q.source}}};var D,x,w;r.parameters={...r.parameters,docs:{...(D=r.parameters)==null?void 0:D.docs,source:{originalSource:`{
  args: {
    isInvalid: true
  }
}`,...(w=(x=r.parameters)==null?void 0:x.docs)==null?void 0:w.source}}};const ze=["Primary","Disabled","Invalid"];export{i as Disabled,r as Invalid,n as Primary,ze as __namedExportsOrder,Oe as default};
