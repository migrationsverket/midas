import{j as n}from"./jsx-runtime-BYYWji4R.js";import{s as oe}from"./TextField.module-C33Y04O9.js";import{c as x}from"./clsx-B-dksMZM.js";import{r as se}from"./index-ClcD9ViR.js";import{$ as ue}from"./useControlledState-H1tiOFpU.js";import{l as de}from"./utils-BLyg3OOq.js";import{b as ce}from"./useLocalizedStringFormatter-TrhiTCnH.js";import{$ as pe}from"./useTextField-Bz4YJk8U.js";import{S as me}from"./search-CU-MzbtL.js";import{B as C}from"./Button-DqvqHFUu.js";import{X as he}from"./x-BaIpobvV.js";import{F as $}from"./FieldError-Bc4GcTNT.js";var V={};V={"Clear search":"مسح البحث"};var q={};q={"Clear search":"Изчистване на търсене"};var H={};H={"Clear search":"Vymazat hledání"};var M={};M={"Clear search":"Ryd søgning"};var D={};D={"Clear search":"Suche zurücksetzen"};var T={};T={"Clear search":"Απαλοιφή αναζήτησης"};var w={};w={"Clear search":"Clear search"};var P={};P={"Clear search":"Borrar búsqueda"};var I={};I={"Clear search":"Tühjenda otsing"};var L={};L={"Clear search":"Tyhjennä haku"};var N={};N={"Clear search":"Effacer la recherche"};var _={};_={"Clear search":"נקה חיפוש"};var F={};F={"Clear search":"Obriši pretragu"};var k={};k={"Clear search":"Keresés törlése"};var A={};A={"Clear search":"Cancella ricerca"};var z={};z={"Clear search":"検索をクリア"};var B={};B={"Clear search":"검색 지우기"};var U={};U={"Clear search":"Išvalyti iešką"};var W={};W={"Clear search":"Notīrīt meklēšanu"};var R={};R={"Clear search":"Tøm søk"};var j={};j={"Clear search":"Zoekactie wissen"};var K={};K={"Clear search":"Wyczyść zawartość wyszukiwania"};var O={};O={"Clear search":"Limpar pesquisa"};var G={};G={"Clear search":"Limpar pesquisa"};var Z={};Z={"Clear search":"Ştergeţi căutarea"};var J={};J={"Clear search":"Очистить поиск"};var X={};X={"Clear search":"Vymazať vyhľadávanie"};var Q={};Q={"Clear search":"Počisti iskanje"};var Y={};Y={"Clear search":"Obriši pretragu"};var ee={};ee={"Clear search":"Rensa sökning"};var te={};te={"Clear search":"Aramayı temizle"};var ae={};ae={"Clear search":"Очистити пошук"};var ne={};ne={"Clear search":"清除搜索"};var re={};re={"Clear search":"清除搜尋條件"};var le={};le={"ar-AE":V,"bg-BG":q,"cs-CZ":H,"da-DK":M,"de-DE":D,"el-GR":T,"en-US":w,"es-ES":P,"et-EE":I,"fi-FI":L,"fr-FR":N,"he-IL":_,"hr-HR":F,"hu-HU":k,"it-IT":A,"ja-JP":z,"ko-KR":B,"lt-LT":U,"lv-LV":W,"nb-NO":R,"nl-NL":j,"pl-PL":K,"pt-BR":O,"pt-PT":G,"ro-RO":Z,"ru-RU":J,"sk-SK":X,"sl-SI":Q,"sr-SP":Y,"sv-SE":ee,"tr-TR":te,"uk-UA":ae,"zh-CN":ne,"zh-TW":re};function fe(e){return e&&e.__esModule?e.default:e}function ve(e,a,t){let i=ce(fe(le),"@react-aria/searchfield"),{isDisabled:u,isReadOnly:o,onSubmit:d,onClear:r,type:p="search"}=e,f=l=>{const g=l.key;g==="Enter"&&(u||o)&&l.preventDefault(),!(u||o)&&(g==="Enter"&&d&&(l.preventDefault(),d(a.value)),g==="Escape"&&(a.value===""&&(!t.current||t.current.value==="")?l.continuePropagation():(l.preventDefault(),a.setValue(""),r&&r())))},v=()=>{a.setValue(""),r&&r()},b=()=>{var l;(l=t.current)===null||l===void 0||l.focus()},{labelProps:m,inputProps:y,descriptionProps:c,errorMessageProps:h,...ie}=pe({...e,value:a.value,onChange:a.setValue,onKeyDown:o?e.onKeyDown:de(f,e.onKeyDown),type:p},t);return{labelProps:m,inputProps:{...y,defaultValue:void 0},clearButtonProps:{"aria-label":i.format("Clear search"),excludeFromTabOrder:!0,preventFocusOnPress:!0,isDisabled:u||o,onPress:v,onPressStart:b},descriptionProps:c,errorMessageProps:h,...ie}}function be(e){let[a,t]=ue(S(e.value),S(e.defaultValue)||"",e.onChange);return{value:a,setValue:t}}function S(e){if(e!=null)return e.toString()}const ye="_container_1kcuq_4",ge="_inputContainer_1kcuq_15",xe="_medium_1kcuq_21",Ce="_icon_1kcuq_26",$e="_clear_1kcuq_35",Se="_input_1kcuq_15",s={container:ye,inputContainer:ge,medium:xe,icon:Ce,clear:$e,input:Se};function Ee(e){return!!(e!=null&&e.length)}const E=({errorPosition:e="top",size:a="large",...t})=>{const{value:i,setValue:u}=be(t),o=se.useRef(null),{inputProps:d,isInvalid:r,validationErrors:p,clearButtonProps:f}=ve({...t,label:t.placeholder,validationBehavior:"native"},{value:i,setValue:u},o),v=({target:c})=>u(c.value),b=()=>u(""),m=()=>{var h;if(t.validate&&Ee(t.validate(i))||r||!i){(h=o.current)==null||h.focus();return}t.onSubmit&&t.onSubmit(i)},y=({key:c})=>{c==="Enter"&&m()};return n.jsxs("div",{children:[e==="top"&&n.jsx($,{isInvalid:r,children:t.errorMessage??p.join(" ")}),n.jsxs("div",{className:s.container,"data-disabled":d.disabled,children:[n.jsxs("div",{className:x(s.inputContainer,{[s.medium]:a==="medium"}),children:[n.jsx(me,{size:20,className:s.icon}),n.jsx("input",{...d,...d.disabled&&{"data-disabled":!0},className:x(oe.input,s.input,d.className,{[s.medium]:a==="medium"}),ref:o,onChange:v,value:i,"aria-invalid":r,onKeyDown:y,"aria-label":t.placeholder,"aria-labelledby":""}),i.length>0&&n.jsx(C,{variant:"icon",size:"medium",className:x(s.clear,{[s.medium]:a==="medium"}),onPress:b,...f,children:n.jsx(he,{size:20,"aria-hidden":!0})})]}),n.jsx(C,{size:a,isDisabled:t.isDisabled,excludeFromTabOrder:!0,onPress:m,type:"button",children:t.buttonText?t.buttonText:"Sök"})]}),e==="bottom"&&n.jsx($,{isInvalid:r,children:t.errorMessage??p.join(" ")})]})};try{E.displayName="SearchField",E.__docgenInfo={description:"",displayName:"SearchField",props:{placeholder:{defaultValue:null,description:"Placeholder text",name:"placeholder",required:!0,type:{name:"string"}},buttonText:{defaultValue:{value:"'Sök'"},description:"Text displayed on the 'search' button",name:"buttonText",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"A custom error message if using the isInvalid prop.",name:"errorMessage",required:!1,type:{name:"string"}},errorPosition:{defaultValue:{value:"top"},description:"",name:"errorPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}},size:{defaultValue:{value:"large"},description:"Component size (large: height 48px, medium: height 40px)",name:"size",required:!1,type:{name:"enum",value:[{value:'"large"'},{value:'"medium"'}]}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: SearchFieldRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"(value: string) => void"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:"enum",value:[{value:'"aria"'},{value:'"native"'}]}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: string) => true | ValidationError"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<HTMLInputElement, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<HTMLInputElement, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},"aria-controls":{defaultValue:null,description:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",name:"aria-controls",required:!1,type:{name:"string"}},excludeFromTabOrder:{defaultValue:null,description:`Whether to exclude the element from the sequential tab order. If true,
the element will not be focusable via the keyboard by tabbing. This should
be avoided except in rare scenarios where an alternative means of accessing
the element or its functionality via the keyboard is available.`,name:"excludeFromTabOrder",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},"aria-errormessage":{defaultValue:null,description:"Identifies the element that provides an error message for the object.",name:"aria-errormessage",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: SearchFieldRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: SearchFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},pattern:{defaultValue:null,description:"Regex pattern that the value of the input must match to be valid. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefpattern).",name:"pattern",required:!1,type:{name:"string"}},spellCheck:{defaultValue:null,description:"An enumerated attribute that defines whether the element may be checked for spelling errors. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck).",name:"spellCheck",required:!1,type:{name:"string"}},autoCorrect:{defaultValue:null,description:"An attribute that takes as its value a space-separated string that describes what, if any, type of autocomplete functionality the input should provide. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#autocomplete).",name:"autoCorrect",required:!1,type:{name:"string"}},inputMode:{defaultValue:null,description:"Hints at the type of data that might be entered by the user while editing the element or its contents. See [MDN](https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute).",name:"inputMode",required:!1,type:{name:"enum",value:[{value:'"search"'},{value:'"text"'},{value:'"none"'},{value:'"tel"'},{value:'"url"'},{value:'"email"'},{value:'"numeric"'},{value:'"decimal"'}]}},"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-autocomplete":{defaultValue:null,description:`Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.`,name:"aria-autocomplete",required:!1,type:{name:"enum",value:[{value:'"list"'},{value:'"none"'},{value:'"inline"'},{value:'"both"'}]}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree"'}},onCopy:{defaultValue:null,description:"Handler that is called when the user copies text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncopy).",name:"onCopy",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onCut:{defaultValue:null,description:"Handler that is called when the user cuts text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncut).",name:"onCut",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onPaste:{defaultValue:null,description:"Handler that is called when the user pastes text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/onpaste).",name:"onPaste",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onCompositionEnd:{defaultValue:null,description:"Handler that is called when a text composition system completes or cancels the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionend_event).",name:"onCompositionEnd",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onCompositionStart:{defaultValue:null,description:"Handler that is called when a text composition system starts a new text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event).",name:"onCompositionStart",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onCompositionUpdate:{defaultValue:null,description:"Handler that is called when a new character is received in the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionupdate_event).",name:"onCompositionUpdate",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onBeforeInput:{defaultValue:null,description:"Handler that is called when the input value is about to be modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforeinput_event).",name:"onBeforeInput",required:!1,type:{name:"FormEventHandler<HTMLInputElement>"}},onInput:{defaultValue:null,description:"Handler that is called when the input value is modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event).",name:"onInput",required:!1,type:{name:"FormEventHandler<HTMLInputElement>"}},onSubmit:{defaultValue:null,description:"Handler that is called when the SearchField is submitted.",name:"onSubmit",required:!1,type:{name:"(value: string) => void"}},onSelect:{defaultValue:null,description:"Handler that is called when text in the input is selected. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/select_event).",name:"onSelect",required:!1,type:{name:"ReactEventHandler<HTMLInputElement>"}},type:{defaultValue:null,description:"The type of input to render. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdeftype).",name:"type",required:!1,type:{name:'"search" | "text" | (string & {}) | "tel" | "url" | "email" | "password"'}},enterKeyHint:{defaultValue:null,description:"An enumerated attribute that defines what action label or icon to preset for the enter key on virtual keyboards. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/enterkeyhint).",name:"enterKeyHint",required:!1,type:{name:"enum",value:[{value:'"search"'},{value:'"enter"'},{value:'"done"'},{value:'"go"'},{value:'"next"'},{value:'"previous"'},{value:'"send"'}]}},onClear:{defaultValue:null,description:"Handler that is called when the clear button is pressed.",name:"onClear",required:!1,type:{name:"() => void"}},autoComplete:{defaultValue:null,description:"Describes the type of autocomplete functionality the input should provide if any. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefautocomplete).",name:"autoComplete",required:!1,type:{name:"string"}},maxLength:{defaultValue:null,description:"The maximum number of characters supported by the input. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefmaxlength).",name:"maxLength",required:!1,type:{name:"number"}},minLength:{defaultValue:null,description:"The minimum number of characters required by the input. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefminlength).",name:"minLength",required:!1,type:{name:"number"}}}}}catch{}export{E as S};
