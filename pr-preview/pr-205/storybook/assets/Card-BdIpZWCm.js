import{j as t}from"./jsx-runtime-CfatFE5O.js";import{L as p}from"./Link-DibNbVRm.js";import{c as f}from"./clsx-B-dksMZM.js";import{l as r}from"./useFocusable-D_XT9yGL.js";const g='"../theme/tokens.css"',y='"Inter", sans-serif',h="#ffffff",_="#e6e6e6",b="#f2f2f2",k="#1f1f1f",x="#d5e5ed",v="#000000",j="500",C="250ms",E="_card_vbecj_4",N="_content_vbecj_33",T="_heading_vbecj_39",L="_image_vbecj_47",R="_background_vbecj_56",q="_text_vbecj_60",n={tokens:g,display:y,white:h,gray20:_,gray10:b,gray150:k,blue20:x,black:v,mediumWeight:j,fastTransition:C,card:E,content:N,heading:T,image:L,background:R,text:q},s=({image:e,background:i,title:c,content:d,link:l,headingTag:m="h1",customImageComponent:a,customLinkComponent:u,...o})=>t.jsxs("div",{className:f(n.card,i&&n.background,o.className),...o,children:[t.jsxs("div",{className:n.content,children:[a||(e==null?void 0:e.source)&&t.jsx("img",{src:e.source,alt:e.description,className:n.image}),t.jsx(m,{className:n.heading,children:c}),t.jsx("p",{className:n.text,children:d})]}),t.jsx(p,{...l,standalone:!0,stretched:!0,as:u})]});try{s.displayName="Card",s.__docgenInfo={description:"This component renders a card with optional image, title, content.",displayName:"Card",props:{image:{defaultValue:null,description:"Optional image displayed at the top of card",name:"image",required:!1,type:{name:"{ source: string; description: string; }"}},background:{defaultValue:{value:"false"},description:"Sets background to predetermined color",name:"background",required:!1,type:{name:"boolean"}},title:{defaultValue:null,description:"Header as h1 for the component rendered below image if there is one",name:"title",required:!0,type:{name:"string"}},content:{defaultValue:null,description:"Content as p element for the component",name:"content",required:!0,type:{name:"string"}},link:{defaultValue:null,description:"Props for when card element is clicked",name:"link",required:!0,type:{name:"LinkProps<(<C extends React.ElementType = (props: LinkProps & RefAttributes<HTMLAnchorElement>) => ReactElement<any, string | JSXElementConstructor<any>>>({ children, standalone, stretched, icon: IconComponent, className, as, ...rest }: LinkProps<...>) => Element)>"}},headingTag:{defaultValue:{value:"'h1'"},description:"Adjust the tag to be used for the header",name:"headingTag",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},customImageComponent:{defaultValue:null,description:"Custom image component to be used instead of the default img tag",name:"customImageComponent",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},customLinkComponent:{defaultValue:null,description:"Custom link component to be used instead of the default a tag. For example your client side router link.",name:"customLinkComponent",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}try{r.displayName="RouterProvider",r.__docgenInfo={description:"A RouterProvider accepts a `navigate` function from a framework or client side router,\nand provides it to all nested React Aria links to enable client side navigation.",displayName:"RouterProvider",props:{}}}catch{}export{s as C};
