import{j as i}from"./jsx-runtime-CBDCb4rg.js";import{c as p}from"./clsx-B-dksMZM.js";import{$ as c}from"./Heading-CTHypeMA.js";const _="_h1_1eh26_4",u="_h2_1eh26_5",m="_h3_1eh26_6",d="_h4_1eh26_7",v="_h5_1eh26_8",f="_h6_1eh26_9",e={h1:_,h2:u,h3:m,h4:d,h5:v,h6:f},h=({children:a,className:l,isExpressive:r=!1,level:t=3,elementType:s,...n})=>{const o=s&&parseInt(s.split("h")[1]);return i.jsx(c,{level:o||t,className:p([e.h1,e.h2,e.h3,e.h4,e.h5,e.h6][t-1],l),...r&&{"data-expressive":!0},...n,children:a})};try{h.displayName="Heading",h.__docgenInfo={description:"",displayName:"Heading",props:{elementType:{defaultValue:null,description:"Override the semantic element of the component but keep the look of the level property",name:"elementType",required:!1,type:{name:"enum",value:[{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'}]}},isExpressive:{defaultValue:{value:"false"},description:"Use the external/expressive look",name:"isExpressive",required:!1,type:{name:"boolean"}},level:{defaultValue:{value:"3"},description:"",name:"level",required:!1,type:{name:"number"}}}}}catch{}export{h as H};
