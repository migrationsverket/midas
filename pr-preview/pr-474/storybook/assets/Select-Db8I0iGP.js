import{j as e}from"./jsx-runtime-DtgEGaVE.js";import{b as te}from"./Button-C6oo4-9j.js";import{a as le,e as ae}from"./useFocusRing-CklmaPa3.js";import{c as _}from"./clsx-B-dksMZM.js";import{b as S,h as se,m as ne,g as ie}from"./utils-fGMpyvF6.js";import{R as V,r as b}from"./index-BbAIUH2N.js";import{a as oe,$ as re,T as de}from"./Tag-DgqV4z6a.js";import{a as ce}from"./TextField-dpiMNlKd.js";import{$ as ue,a as fe,b as me}from"./ListBox-CrTeI0gh.js";import{c as pe}from"./createLucideIcon-8wDOqnHv.js";import{a as he}from"./FocusScope-CWlvLRaT.js";import{a as be}from"./useOverlayTriggerState-Cqt2HN1Y.js";import{$ as ye,a as T,c as xe,d as ge}from"./useMenuTriggerState-BjsnJlSn.js";import{$ as ve}from"./useModal-BdzBpG_k.js";import{$ as $e}from"./ListKeyboardDelegate-BT2IGCyv.js";import{g as _e}from"./SelectionManager-DBzMVJ3_.js";import{$ as Se}from"./filterDOMProps-BSfnXAP7.js";import{$ as Ve}from"./useCollator-BwOLflG5.js";import{$ as ke}from"./useField-Dtc4qbuX.js";import{$ as je}from"./useListState-BXyU8taG.js";import{$ as Ie,a as qe,b as Be}from"./useFormValidation-tLTeCxiF.js";import{u as Ce}from"./useObserveElement-BrriYDGX.js";import{a as we}from"./VisuallyHidden-9izUKr4W.js";import{C as Fe}from"./chevron-down-U1dNK9nR.js";import{X as Ne}from"./x-Cu6J0Y2u.js";import{L as Ke}from"./Label-DjHNQKaV.js";import{T as De}from"./Text-DTW4hkTA.js";import{F as M}from"./FieldError-DCgcqB00.js";function P(t){let{children:l,focusClass:r,focusRingClass:n}=t,{isFocused:s,isFocusVisible:a,focusProps:d}=le(t),u=V.Children.only(l);return V.cloneElement(u,S(u.props,{...d,className:_({[r||""]:s,[n||""]:a})}))}function E(t){return null}E.getCollectionNode=function*(l,r){let{childItems:n,title:s,children:a}=l,d=l.title||l.children,u=l.textValue||(typeof d=="string"?d:"")||l["aria-label"]||"";!u&&!(r!=null&&r.suppressTextValueWarning)&&console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop."),yield{type:"item",props:l,rendered:d,textValue:u,"aria-label":l["aria-label"],hasChildNodes:Te(l),*childNodes(){if(n)for(let c of n)yield{type:"item",value:c};else if(s){let c=[];V.Children.forEach(a,f=>{c.push({type:"item",element:f})}),yield*c}}}};function Te(t){return t.hasChildItems!=null?t.hasChildItems:!!(t.childItems||t.title&&V.Children.count(t.children)>0)}let R=E;function O(t){return null}O.getCollectionNode=function*(l){let{children:r,title:n,items:s}=l;yield{type:"section",props:l,hasChildNodes:!0,rendered:n,"aria-label":l["aria-label"],*childNodes(){if(typeof r=="function"){if(!s)throw new Error("props.children was a function but props.items is missing");for(let a of s)yield{type:"item",value:a,renderer:r}}else{let a=[];V.Children.forEach(r,d=>{a.push({type:"item",element:d})}),yield*a}}}};let Me=O;/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Pe=pe("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]),Re='"../theme/tokens.css"',Ee="_selectAllButton_18tx5_11",Oe="_selectLabel_18tx5_17",Ae="_selectLabelDisabled_18tx5_25",Le="_button_18tx5_29",He="_buttonOpen_18tx5_71",We="_icon_18tx5_72",ze="_buttonDisabled_18tx5_77",Ue="_multiSelect_18tx5_86",Ge="_fieldError_18tx5_92",Xe="_selectContainer_18tx5_97",Je="_tagGroup_18tx5_111",Qe="_popover_18tx5_119",Ye="_listBox_18tx5_146",Ze="_listBoxItem_18tx5_153",et="_listBoxItemSelected_18tx5_180",tt="_listBoxItemDisabled_18tx5_188",lt="_listBoxItemFocused_18tx5_198",at="_listBoxItemFocusVisible_18tx5_202",st="_listBoxItemCheckmark_18tx5_207",nt="_selectValueTag_18tx5_218",it="_selectValueTagDisabled_18tx5_235",ot="_truncate_18tx5_242",rt="_clearButton_18tx5_248",dt="_checkboxContainer_18tx5_299",ct="_checkbox_18tx5_299",o={tokens:Re,"--font-family":'"Inter", sans-serif',"--text-disabled":"light-dark(#bfbfbf, #525252)","--border-strong":"light-dark(#171717, #f2f2f2)","--text-primary":"light-dark(#171717, #f2f2f2)","--focus":"0 0 0 2px white, 0 0 0 4px black","--layer-02":"light-dark(#ffffff, #383838)","--border-invalid":"light-dark(#e62323, #eb4e4e)","--layer-hover-02":"light-dark(#e6e6e6, #474747)","--layer-selected-02":"light-dark(#d9d9d9, #525252)","--layer-selected-hover-02":"light-dark(#cccccc, #5d5d5d)","--text-on-color":"light-dark(#ffffff, #ffffff)","--button-background-primary":"light-dark(#143c50, #2e7ca5)","--button-background-primary-hover":"light-dark(#25607f, #25607f)","--field-disabled":"light-dark(#f2f2f2, #262626)","--border-disabled":"light-dark(#bfbfbf, #525252)","--field-01":"light-dark(#f2f2f2, #262626)","--field-hover-01":"light-dark(#e6e6e6, #333333)","--button-background-disabled":"light-dark(#f2f2f2, #262626)","--text-invalid":"light-dark(#e62323, #eb4e4e)",selectAllButton:Ee,selectLabel:Oe,selectLabelDisabled:Ae,button:Le,buttonOpen:He,icon:We,buttonDisabled:ze,multiSelect:Ue,fieldError:Ge,selectContainer:Xe,tagGroup:Je,popover:Qe,listBox:Ye,listBoxItem:Ze,listBoxItemSelected:et,listBoxItemDisabled:tt,listBoxItemFocused:lt,listBoxItemFocusVisible:at,listBoxItemCheckmark:st,selectValueTag:nt,selectValueTagDisabled:it,truncate:ot,clearButton:rt,checkboxContainer:dt,checkbox:ct},A=({item:t,state:l})=>{const r=b.useRef(null),{optionProps:n,isDisabled:s,isSelected:a,isFocused:d,isFocusVisible:u}=fe({key:t.key},l,r);return e.jsxs("li",{...n,ref:r,className:_(o.listBoxItem,{[o.listBoxItemDisabled]:s,[o.listBoxItemFocused]:d,[o.listBoxItemFocusVisible]:u,[o.listBoxItemSelected]:a}),children:[l.selectionMode==="multiple"&&e.jsx("div",{className:o.checkboxContainer,children:e.jsx("input",{className:o.checkbox,type:"checkbox",disabled:s,checked:a,readOnly:!0})}),typeof t.rendered=="string"?e.jsx("span",{className:"truncate block",children:t.rendered}):t.rendered,a&&l.selectionMode==="single"?e.jsx(Pe,{size:20,className:o.listBoxItemCheckmark}):null]})},ut=({section:t,state:l})=>{const{itemProps:r,headingProps:n,groupProps:s}=me({heading:t.rendered,"aria-label":t["aria-label"]});return e.jsxs("li",{...r,className:"",children:[t.rendered&&e.jsx("span",{...n,className:o.selectSectionHeading,children:t.rendered}),e.jsx("ul",{...s,children:Array.from(t.childNodes).map(a=>e.jsx(A,{item:a,state:l},a.key))})]})},q=t=>{const l=b.useRef(null),{listBoxRef:r=l,state:n}=t,{listBoxProps:s}=ue({...t,disallowEmptySelection:!0},n,r);return e.jsx("ul",{...s,className:o.listBox,ref:r,children:Array.from(n.collection).map(a=>a.type==="section"?e.jsx(ut,{section:a,state:n},a.key):e.jsx(A,{item:a,state:n},a.key))})};try{q.displayName="SelectListBox",q.__docgenInfo={description:"",displayName:"SelectListBox",props:{listBoxRef:{defaultValue:null,description:"",name:"listBoxRef",required:!1,type:{name:"RefObject<HTMLUListElement>"}},state:{defaultValue:null,description:"",name:"state",required:!0,type:{name:"MultiSelectState<T>"}},isVirtualized:{defaultValue:null,description:"Whether the listbox uses virtual scrolling.",name:"isVirtualized",required:!1,type:{name:"boolean"}},keyboardDelegate:{defaultValue:null,description:`An optional keyboard delegate implementation for type to select,
to override the default.`,name:"keyboardDelegate",required:!1,type:{name:"KeyboardDelegate"}},layoutDelegate:{defaultValue:null,description:`A delegate object that provides layout information for items in the collection.
By default this uses the DOM, but this can be overridden to implement things like
virtualized scrolling.`,name:"layoutDelegate",required:!1,type:{name:"LayoutDelegate"}},shouldUseVirtualFocus:{defaultValue:null,description:"Whether the listbox items should use virtual focus instead of being focused directly.",name:"shouldUseVirtualFocus",required:!1,type:{name:"boolean"}},shouldSelectOnPressUp:{defaultValue:null,description:"Whether selection should occur on press up instead of press down.",name:"shouldSelectOnPressUp",required:!1,type:{name:"boolean"}},shouldFocusOnHover:{defaultValue:null,description:"Whether options should be focused when the user hovers over them.",name:"shouldFocusOnHover",required:!1,type:{name:"boolean"}},linkBehavior:{defaultValue:{value:"'override'"},description:`The behavior of links in the collection.
- 'action': link behaves like onAction.
- 'selection': link follows selection interactions (e.g. if URL drives selection).
- 'override': links override all other interactions (link items are not selectable).`,name:"linkBehavior",required:!1,type:{name:"enum",value:[{value:'"selection"'},{value:'"action"'},{value:'"override"'}]}},autoFocus:{defaultValue:null,description:"Whether to auto focus the listbox or an option.",name:"autoFocus",required:!1,type:{name:"boolean | FocusStrategy"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},disabledKeys:{defaultValue:null,description:"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",name:"disabledKeys",required:!1,type:{name:"Iterable<Key>"}},selectionMode:{defaultValue:null,description:"The type of selection that is allowed in the collection.",name:"selectionMode",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"single"'},{value:'"multiple"'}]}},disallowEmptySelection:{defaultValue:null,description:"Whether the collection allows empty selection.",name:"disallowEmptySelection",required:!1,type:{name:"boolean"}},selectedKeys:{defaultValue:null,description:"The currently selected keys in the collection (controlled).",name:"selectedKeys",required:!1,type:{name:'"all" | Iterable<Key>'}},defaultSelectedKeys:{defaultValue:null,description:"The initial selected keys in the collection (uncontrolled).",name:"defaultSelectedKeys",required:!1,type:{name:'"all" | Iterable<Key>'}},onSelectionChange:{defaultValue:null,description:"Handler that is called when the selection changes.",name:"onSelectionChange",required:!1,type:{name:"(keys: Selection) => void"}},selectionBehavior:{defaultValue:null,description:"How multiple selection should behave in the collection.",name:"selectionBehavior",required:!1,type:{name:"enum",value:[{value:'"toggle"'},{value:'"replace"'}]}},onAction:{defaultValue:null,description:"Handler that is called when a user performs an action on an item. The exact user event depends on\nthe collection's `selectionBehavior` prop and the interaction modality.",name:"onAction",required:!1,type:{name:"(key: Key) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},label:{defaultValue:null,description:"An optional visual label for the listbox.",name:"label",required:!1,type:{name:"ReactNode"}},shouldFocusWrap:{defaultValue:null,description:"Whether focus should wrap around when the end/start is reached.",name:"shouldFocusWrap",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Item objects in the collection.",name:"items",required:!1,type:{name:"Iterable<T>"}}}}}catch{}const B=({isOpen:t,onClose:l,children:r,className:n,triggerRef:s})=>{const a=b.useRef(null),{overlayProps:d}=ye({isOpen:t,onClose:l,isDismissable:!0,shouldCloseOnBlur:!0},a),{overlayProps:u,updatePosition:c}=be({isOpen:t,offset:0,crossOffset:0,containerPadding:0,overlayRef:a,targetRef:s,placement:"bottom start"});b.useLayoutEffect(()=>{t&&requestAnimationFrame(()=>{c()})},[t,c]);const f={...u.style,"--select-width":s.current?`${s.current.offsetWidth}px`:void 0};return e.jsx(ve,{children:e.jsx("div",{...S(d,u),ref:a,className:n,style:f,children:e.jsxs(he,{restoreFocus:!0,children:[e.jsx(T,{onDismiss:l}),r,e.jsx(T,{onDismiss:l})]})})})};try{B.displayName="SelectPopover",B.__docgenInfo={description:"",displayName:"SelectPopover",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},isOpen:{defaultValue:null,description:"",name:"isOpen",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},triggerRef:{defaultValue:null,description:"",name:"triggerRef",required:!0,type:{name:"RefObject<HTMLButtonElement>"}}}}}catch{}function ft(t,l,r){const{disallowEmptySelection:n,isDisabled:s}=t,a=Ve({usage:"search",sensitivity:"base"}),d=b.useMemo(()=>new $e(l.collection,l.disabledKeys,null,a),[l.collection,l.disabledKeys,a]),{menuTriggerProps:u,menuProps:c}=xe({isDisabled:s,type:"listbox"},l,r),f=m=>{const{selectedKeys:y,selectionMode:I}=l,i=y.values().next().value;if(I==="single")switch(m.key){case"ArrowLeft":{m.preventDefault();const v=y.size>0?d.getKeyAbove(i):d.getFirstKey();v&&l.setSelectedKeys([v]);break}case"ArrowRight":{m.preventDefault();const v=y.size>0?d.getKeyBelow(i):d.getFirstKey();v&&l.setSelectedKeys([v]);break}}},{typeSelectProps:h}=_e({keyboardDelegate:d,selectionManager:l.selectionManager,onTypeSelect(m){l.setSelectedKeys([m])}}),{labelProps:k,fieldProps:$}=ke({...t,labelElementType:"span"});h.onKeyDown=h.onKeyDownCapture,delete h.onKeyDownCapture;const j=Se(t,{labelable:!0}),x=S(h,u,$),g=se();return{labelProps:{...k,onClick:()=>{var m;t.isDisabled||((m=r.current)==null||m.focus(),ae("keyboard"))}},triggerProps:S(j,{...x,onKeyDown:ne(x.onKeyDown,f,t.onKeyDown),onKeyUp:t.onKeyUp,"aria-labelledby":[x["aria-labelledby"],x["aria-label"]&&!x["aria-labelledby"]?x.id:null,g].filter(Boolean).join(" "),onFocus(m){l.isFocused||(t.onFocus&&t.onFocus(m),l.setFocused(!0))},onBlur(m){l.isOpen||(t.onBlur&&t.onBlur(m),l.setFocused(!1))}}),valueProps:{id:g},menuProps:{...c,disallowEmptySelection:n,autoFocus:l.focusStrategy||!0,shouldSelectOnPressUp:!0,shouldFocusOnHover:!0,onBlur:m=>{m.currentTarget.contains(m.relatedTarget)||(t.onBlur&&t.onBlur(m),l.setFocused(!1))},"aria-labelledby":[$["aria-labelledby"],x["aria-label"]&&!$["aria-labelledby"]?x.id:null].filter(Boolean).join(" ")}}}function mt(t){const{collection:l,disabledKeys:r,selectionManager:n,selectionManager:{setSelectedKeys:s,selectedKeys:a,selectionMode:d}}=je(t),u=[],c=a.size!==0?Array.from(a).map(f=>{const h=l.getItem(f);return h||u.push(f),h}).filter(Boolean):null;return u.length&&console.warn(`Select: Keys "${u.join(", ")}" passed to "selectedKeys" are not present in the collection.`),{collection:l,disabledKeys:r,selectionManager:n,selectionMode:d,selectedKeys:a,setSelectedKeys:s.bind(n),selectedItems:c}}function pt(t){const[l,r]=b.useState(!1),n=ge(t),s=t.selectionMode==="single",a=mt({...t,onSelectionChange:f=>{t.onSelectionChange&&t.onSelectionChange(f),s&&n.close()}}),d=Ie({...t,validationBehavior:"native",value:a.selectedKeys}),u=a.collection.size===0,c=!!a.selectedKeys.size;return b.useEffect(()=>{s&&c&&(d.resetValidation(),d.commitValidation())},[c,s,d]),{...a,...n,close(){n.close(),c&&(d.resetValidation(),d.commitValidation())},open(){u||n.open()},toggle(f){u||n.toggle(f)},isFocused:l,setFocused:r,...d}}function C({autoComplete:t,name:l,isDisabled:r,isRequired:n,selectRef:s},a,d){const{visuallyHiddenProps:u}=we();return qe(s,a.selectedKeys,a.setSelectedKeys),Be({validationBehavior:"native",focus:()=>{var c;return(c=d.current)==null?void 0:c.focus()}},a,s),{containerProps:{...u,"aria-hidden":!0,"data-react-aria-prevent-focus":!0,"data-a11y-ignore":"aria-hidden-focus"},inputProps:{style:{display:"none"}},selectProps:{tabIndex:-1,autoComplete:t,disabled:r,required:n,name:l,value:Array.from(a.selectedKeys).map(c=>c.toString()),onChange:c=>a.setSelectedKeys(c.target.value),multiple:!0}}}function w(t){const{state:l,triggerRef:r,label:n,name:s,isDisabled:a}=t,d=b.useRef(null),{containerProps:u,selectProps:c}=C({...t,selectRef:d},l,r);return l.collection.size<=300?e.jsx("div",{...u,"data-testid":"hidden-select-container",children:e.jsxs("label",{children:[n,e.jsxs("select",{...c,ref:d,children:[e.jsx("option",{}),[...l.collection.getKeys()].map(f=>{const h=l.collection.getItem(f);return h&&h.type==="item"?e.jsx("option",{value:h.key,children:h.textValue},h.key):null})]})]})}):s?e.jsx("input",{type:"hidden",autoComplete:c.autoComplete,name:s,disabled:a,value:Array.from(l.selectedKeys).map(f=>f.toString())??[""]}):null}try{C.displayName="useHiddenMultiSelect",C.__docgenInfo={description:"Provides the behavior and accessibility implementation for a hidden `<select>` element, which\ncan be used in combination with `useSelect` to support browser form autofill, mobile form\nnavigation, and native HTML form submission.",displayName:"useHiddenMultiSelect",props:{}}}catch{}try{w.displayName="HiddenMultiSelect",w.__docgenInfo={description:"Renders a hidden native `<select>` element, which can be used to support browser\nform autofill, mobile form navigation, and native form submission.",displayName:"HiddenMultiSelect",props:{state:{defaultValue:null,description:"State for the select.",name:"state",required:!0,type:{name:"MultiSelectState<T>"}},triggerRef:{defaultValue:null,description:"A ref to the trigger element.",name:"triggerRef",required:!0,type:{name:"RefObject<FocusableElement>"}},autoComplete:{defaultValue:null,description:"Describes the type of autocomplete functionality the input should provide if any. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefautocomplete).",name:"autoComplete",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"The text label for the select.",name:"label",required:!1,type:{name:"ReactNode"}},name:{defaultValue:null,description:"HTML form input name.",name:"name",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Sets the disabled state of the select and input.",name:"isDisabled",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Sets the required state of the select and input.",name:"isRequired",required:!1,type:{name:"boolean"}}}}}catch{}const ht=b.forwardRef(({selectionMode:t="single",errorPosition:l="top",...r},n)=>{const s={selectionMode:t,...r},{autoFocus:a,className:d,excludeFromTabOrder:u,isClearable:c=!0,isDisabled:f,isSelectableAll:h,label:k,description:$,placeholder:j,showTags:x,errorMessage:g}=s,m=b.useRef(null),y=ie(n),I=!c,i=pt({...s,disallowEmptySelection:I}),{labelProps:v,triggerProps:L,valueProps:H,menuProps:W}=ft({...s,disallowEmptySelection:I},i,y),{buttonProps:z}=te({...L,autoFocus:a,excludeFromTabOrder:u,isDisabled:f},y),U=i.isOpen||i.selectedItems,N=i.selectionManager.isSelectAll,K=!N&&!i.selectionManager.isEmpty,G=c&&i.selectedItems,X=h,J=()=>i.selectionManager.clearSelection(),Q=()=>i.selectionManager.toggleSelectAll(),Y=p=>i.selectionManager.toggleSelection(p),{width:Z}=Ce(y.current),ee=p=>e.jsxs("div",{className:_(o.selectValueTag,{[o.selectValueTagDisabled]:f}),children:[e.jsx("span",{className:o.truncate,style:{maxWidth:Z-64},children:p.length>1?`${p.length} valda`:p[0].textValue}),e.jsx("button",{disabled:f,"aria-label":"Rensa alla",className:o.clearButton,onClick:()=>{var D;J(),(D=y==null?void 0:y.current)==null||D.focus()},children:e.jsx(Ne,{width:20,height:20})})]});return b.useEffect(()=>{m.current&&(m.current.indeterminate=K)},[K]),e.jsxs(e.Fragment,{children:[e.jsx(w,{isDisabled:s.isDisabled,isRequired:s.isRequired,name:s.name,state:i,triggerRef:y,label:s.label+"-hidden"}),e.jsxs(ce,{...s,className:_([o.multiSelect],{[o.multiSelectOpen]:i.isOpen},d),children:[e.jsxs("div",{className:o.multiSelect,children:[k&&e.jsx(Ke,{variant:"label-02",...v,slot:"label",className:_(o.selectLabel,{[o.selectLabelActive]:U,[o.selectLabelDisabled]:f}),children:k}),$&&e.jsx(De,{slot:"description",children:$}),l==="top"&&e.jsxs(e.Fragment,{children:[e.jsx(M,{children:g}),i.displayValidation.validationErrors.length?e.jsx("div",{className:o.fieldError,children:g||i.displayValidation.validationErrors.map(p=>e.jsx(b.Fragment,{children:p},p))}):null]}),e.jsx(P,{focusRingClass:o.buttonFocused,autoFocus:a,children:e.jsxs("div",{className:o.selectContainer,children:[e.jsxs("button",{...z,...S,className:_(o.button,{[o.buttonOpen]:i.isOpen,[o.buttonActive]:i.selectedItems,[o.buttonDisabled]:f}),"data-invalid":i.displayValidation.validationErrors.length>0||i.displayValidation.isInvalid,type:"button",ref:y,children:[i.selectionMode==="multiple"&&!i.selectedItems?e.jsx("span",{children:j}):null,i.selectionMode==="single"?e.jsx("span",{children:i.selectedItems?i.selectedItems[0].textValue:j}):null,e.jsx("div",{className:o.icon,"aria-hidden":"true",children:e.jsx(Fe,{size:20})})]}),i.selectionMode==="multiple"&&i.selectedItems?e.jsx("span",{...H,children:ee(i.selectedItems)}):null]})}),l==="bottom"&&e.jsxs(e.Fragment,{children:[e.jsx(M,{children:g}),i.displayValidation.validationErrors.length?e.jsx("div",{className:o.fieldError,children:g||i.displayValidation.validationErrors.map(p=>e.jsx(b.Fragment,{children:p},p))}):null]}),i.isOpen&&e.jsxs(B,{isOpen:i.isOpen,onClose:i.close,className:o.popover,triggerRef:y,children:[X&&e.jsxs(e.Fragment,{children:[h&&e.jsx(P,{focusRingClass:o.listItemfocusRing,children:e.jsx("button",{type:"button",onClick:Q,className:o.selectAllButton,children:e.jsxs("div",{className:o.listBoxItem,tabIndex:-1,children:[e.jsx("div",{className:o.checkboxContainer,children:e.jsx("input",{className:o.checkbox,type:"checkbox",checked:N,ref:m,readOnly:!0,tabIndex:-1})}),e.jsx("span",{children:"Select All"})]})})}),e.jsx("div",{className:"selectDivider"})]}),e.jsx(q,{...W,state:i}),G&&!1]})]}),x&&i.selectedItems!==null&&e.jsx(oe,{"aria-label":"Selected Items",selectionBehavior:"toggle",onRemove:p=>Y(Array.from(p)[0]),className:o.tagGroup,...S,children:e.jsx(re,{items:i.selectedItems,children:p=>e.jsx(de,{textValue:p.textValue,id:p.key,dismissable:!0,isDisabled:f,children:p.textValue},p.key)})})]})]})}),F=b.forwardRef(({options:t,...l},r)=>e.jsx(ht,{...l,items:t,ref:r,children:n=>n.children?e.jsx(Me,{items:n.children,title:n.name,children:s=>e.jsx(R,{textValue:s.textValue,children:s.name})},n.name):e.jsx(R,{textValue:n.textValue,children:n.name})}));F.displayName="Select";try{F.displayName="Select",F.__docgenInfo={description:"",displayName:"Select",props:{autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Sets the CSS [`className`](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element.",name:"className",required:!1,type:{name:"string"}},defaultOpen:{defaultValue:null,description:"Sets the default open state of the field (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},defaultSelectedKeys:{defaultValue:null,description:"The initial selected keys in the collection (uncontrolled).",name:"defaultSelectedKeys",required:!1,type:{name:'"all" | Iterable<Key>'}},disabledKeys:{defaultValue:null,description:"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",name:"disabledKeys",required:!1,type:{name:"Iterable<Key>"}},excludeFromTabOrder:{defaultValue:null,description:"",name:"excludeFromTabOrder",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"Option[]"}},isClearable:{defaultValue:null,description:"Whether the field can be emptied.",name:"isClearable",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"Whether the field is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},isSelectableAll:{defaultValue:null,description:"Whether to show a button to select all items.",name:"isSelectableAll",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:null,description:"Sets the open state of the field (controlled).",name:"isOpen",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"The content to display as the label.",name:"label",required:!0,type:{name:"string"}},description:{defaultValue:null,description:"Optional description",name:"description",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Placeholder value",name:"placeholder",required:!1,type:{name:"string"}},showTags:{defaultValue:null,description:"Show selected items as tags below select",name:"showTags",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the select's open state changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}},onSelectionChange:{defaultValue:null,description:"Handler that is called when the selection changes.",name:"onSelectionChange",required:!1,type:{name:"(keys: Selection) => void"}},selectedKeys:{defaultValue:null,description:"The currently selected keys in the collection (controlled).",name:"selectedKeys",required:!1,type:{name:'"all" | Iterable<Key>'}},selectionMode:{defaultValue:{value:"single"},description:"The type of selection that is allowed in the collection.",name:"selectionMode",required:!1,type:{name:"enum",value:[{value:'"single"'},{value:'"multiple"'}]}},isInvalid:{defaultValue:null,description:"The selection is valid or not",name:"isInvalid",required:!1,type:{name:"boolean"}},errorMessage:{defaultValue:null,description:"Error message to be displayed in case of invalid state",name:"errorMessage",required:!1,type:{name:"string"}},isRequired:{defaultValue:null,description:"Whether the field is required.",name:"isRequired",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name of the field, for uncontrolled use",name:"name",required:!1,type:{name:"string"}},errorPosition:{defaultValue:{value:"top"},description:"",name:"errorPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}}}}}catch{}export{F as S};
