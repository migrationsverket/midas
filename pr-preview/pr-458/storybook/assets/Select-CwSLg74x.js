import{j as t}from"./jsx-runtime-DtgEGaVE.js";import{b as te}from"./Button-C6oo4-9j.js";import{a as le,e as ae}from"./useFocusRing-CklmaPa3.js";import{c as V}from"./clsx-B-dksMZM.js";import{b as k,h as se,m as ne,g as ie}from"./utils-fGMpyvF6.js";import{R as I,r as y}from"./index-BbAIUH2N.js";import{a as oe,$ as re,T as de}from"./Tag-DzG5zfiS.js";import{a as ce}from"./TextField-dpiMNlKd.js";import{$ as ue,a as fe,b as me}from"./ListBox-CrTeI0gh.js";import{c as pe}from"./createLucideIcon-8wDOqnHv.js";import{a as he}from"./FocusScope-CWlvLRaT.js";import{a as be}from"./useOverlayTriggerState-Cqt2HN1Y.js";import{$ as ye,a as M,c as ge,d as xe}from"./useMenuTriggerState-BjsnJlSn.js";import{$ as ve}from"./useModal-BdzBpG_k.js";import{$ as $e}from"./ListKeyboardDelegate-BT2IGCyv.js";import{g as Se}from"./SelectionManager-DBzMVJ3_.js";import{$ as _e}from"./filterDOMProps-BSfnXAP7.js";import{$ as Ve}from"./useCollator-BwOLflG5.js";import{$ as ke}from"./useField-Dtc4qbuX.js";import{$ as Ie}from"./useListState-BXyU8taG.js";import{$ as je,a as qe,b as Be}from"./useFormValidation-tLTeCxiF.js";import{$ as Ce}from"./useSingleSelectListState-BWMzh-3D.js";import{u as Ke}from"./useObserveElement-BrriYDGX.js";import{a as we}from"./VisuallyHidden-9izUKr4W.js";import{C as Fe}from"./chevron-down-U1dNK9nR.js";import{X as Ne}from"./x-Cu6J0Y2u.js";import{L as De}from"./Label-DjHNQKaV.js";import{T as Me}from"./Text-DTW4hkTA.js";import{F as T}from"./FieldError-DCgcqB00.js";function P(e){let{children:l,focusClass:r,focusRingClass:n}=e,{isFocused:s,isFocusVisible:a,focusProps:d}=le(e),c=I.Children.only(l);return I.cloneElement(c,k(c.props,{...d,className:V({[r||""]:s,[n||""]:a})}))}function E(e){return null}E.getCollectionNode=function*(l,r){let{childItems:n,title:s,children:a}=l,d=l.title||l.children,c=l.textValue||(typeof d=="string"?d:"")||l["aria-label"]||"";!c&&!(r!=null&&r.suppressTextValueWarning)&&console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop."),yield{type:"item",props:l,rendered:d,textValue:c,"aria-label":l["aria-label"],hasChildNodes:Te(l),*childNodes(){if(n)for(let f of n)yield{type:"item",value:f};else if(s){let f=[];I.Children.forEach(a,u=>{f.push({type:"item",element:u})}),yield*f}}}};function Te(e){return e.hasChildItems!=null?e.hasChildItems:!!(e.childItems||e.title&&I.Children.count(e.children)>0)}let R=E;function O(e){return null}O.getCollectionNode=function*(l){let{children:r,title:n,items:s}=l;yield{type:"section",props:l,hasChildNodes:!0,rendered:n,"aria-label":l["aria-label"],*childNodes(){if(typeof r=="function"){if(!s)throw new Error("props.children was a function but props.items is missing");for(let a of s)yield{type:"item",value:a,renderer:r}}else{let a=[];I.Children.forEach(r,d=>{a.push({type:"item",element:d})}),yield*a}}}};let Pe=O;/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Re=pe("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]),Ee='"../theme/tokens.css"',Oe="_selectAllButton_18tx5_11",Ae="_selectLabel_18tx5_17",Le="_selectLabelDisabled_18tx5_25",He="_button_18tx5_29",We="_buttonOpen_18tx5_71",ze="_icon_18tx5_72",Ue="_buttonDisabled_18tx5_77",Ge="_multiSelect_18tx5_86",Xe="_fieldError_18tx5_92",Je="_selectContainer_18tx5_97",Qe="_tagGroup_18tx5_111",Ye="_popover_18tx5_119",Ze="_listBox_18tx5_146",et="_listBoxItem_18tx5_153",tt="_listBoxItemSelected_18tx5_180",lt="_listBoxItemDisabled_18tx5_188",at="_listBoxItemFocused_18tx5_198",st="_listBoxItemFocusVisible_18tx5_202",nt="_listBoxItemCheckmark_18tx5_207",it="_selectValueTag_18tx5_218",ot="_selectValueTagDisabled_18tx5_235",rt="_truncate_18tx5_242",dt="_clearButton_18tx5_248",ct="_checkboxContainer_18tx5_299",ut="_checkbox_18tx5_299",o={tokens:Ee,"--font-family":'"Inter", sans-serif',"--text-disabled":"light-dark(#bfbfbf, #525252)","--border-strong":"light-dark(#171717, #f2f2f2)","--text-primary":"light-dark(#171717, #f2f2f2)","--focus":"0 0 0 2px white, 0 0 0 4px black","--layer-02":"light-dark(#ffffff, #383838)","--border-invalid":"light-dark(#e62323, #eb4e4e)","--layer-hover-02":"light-dark(#e6e6e6, #474747)","--layer-selected-02":"light-dark(#d9d9d9, #525252)","--layer-selected-hover-02":"light-dark(#cccccc, #5d5d5d)","--text-on-color":"light-dark(#ffffff, #ffffff)","--button-background-primary":"light-dark(#143c50, #2e7ca5)","--button-background-primary-hover":"light-dark(#25607f, #25607f)","--field-disabled":"light-dark(#f2f2f2, #262626)","--border-disabled":"light-dark(#bfbfbf, #525252)","--field-01":"light-dark(#f2f2f2, #262626)","--field-hover-01":"light-dark(#e6e6e6, #333333)","--button-background-disabled":"light-dark(#f2f2f2, #262626)","--text-invalid":"light-dark(#e62323, #eb4e4e)",selectAllButton:Oe,selectLabel:Ae,selectLabelDisabled:Le,button:He,buttonOpen:We,icon:ze,buttonDisabled:Ue,multiSelect:Ge,fieldError:Xe,selectContainer:Je,tagGroup:Qe,popover:Ye,listBox:Ze,listBoxItem:et,listBoxItemSelected:tt,listBoxItemDisabled:lt,listBoxItemFocused:at,listBoxItemFocusVisible:st,listBoxItemCheckmark:nt,selectValueTag:it,selectValueTagDisabled:ot,truncate:rt,clearButton:dt,checkboxContainer:ct,checkbox:ut},A=({item:e,state:l})=>{const r=y.useRef(null),{optionProps:n,isDisabled:s,isSelected:a,isFocused:d,isFocusVisible:c}=fe({key:e.key},l,r);return t.jsxs("li",{...n,ref:r,className:V(o.listBoxItem,{[o.listBoxItemDisabled]:s,[o.listBoxItemFocused]:d,[o.listBoxItemFocusVisible]:c,[o.listBoxItemSelected]:a}),children:[l.selectionMode==="multiple"&&t.jsx("div",{className:o.checkboxContainer,children:t.jsx("input",{className:o.checkbox,type:"checkbox",disabled:s,checked:a,readOnly:!0})}),typeof e.rendered=="string"?t.jsx("span",{className:"truncate block",children:e.rendered}):e.rendered,a&&l.selectionMode==="single"?t.jsx(Re,{size:20,className:o.listBoxItemCheckmark}):null]})},ft=({section:e,state:l})=>{const{itemProps:r,headingProps:n,groupProps:s}=me({heading:e.rendered,"aria-label":e["aria-label"]});return t.jsxs("li",{...r,className:"",children:[e.rendered&&t.jsx("span",{...n,className:o.selectSectionHeading,children:e.rendered}),t.jsx("ul",{...s,children:Array.from(e.childNodes).map(a=>t.jsx(A,{item:a,state:l},a.key))})]})},q=e=>{const l=y.useRef(null),{listBoxRef:r=l,state:n}=e,{listBoxProps:s}=ue({...e,disallowEmptySelection:!0},n,r);return t.jsx("ul",{...s,className:o.listBox,ref:r,children:Array.from(n.collection).map(a=>a.type==="section"?t.jsx(ft,{section:a,state:n},a.key):t.jsx(A,{item:a,state:n},a.key))})};try{q.displayName="SelectListBox",q.__docgenInfo={description:"",displayName:"SelectListBox",props:{listBoxRef:{defaultValue:null,description:"",name:"listBoxRef",required:!1,type:{name:"RefObject<HTMLUListElement>"}},state:{defaultValue:null,description:"",name:"state",required:!0,type:{name:"MultiSelectState<T>"}},isVirtualized:{defaultValue:null,description:"Whether the listbox uses virtual scrolling.",name:"isVirtualized",required:!1,type:{name:"boolean"}},keyboardDelegate:{defaultValue:null,description:`An optional keyboard delegate implementation for type to select,
to override the default.`,name:"keyboardDelegate",required:!1,type:{name:"KeyboardDelegate"}},layoutDelegate:{defaultValue:null,description:`A delegate object that provides layout information for items in the collection.
By default this uses the DOM, but this can be overridden to implement things like
virtualized scrolling.`,name:"layoutDelegate",required:!1,type:{name:"LayoutDelegate"}},shouldUseVirtualFocus:{defaultValue:null,description:"Whether the listbox items should use virtual focus instead of being focused directly.",name:"shouldUseVirtualFocus",required:!1,type:{name:"boolean"}},shouldSelectOnPressUp:{defaultValue:null,description:"Whether selection should occur on press up instead of press down.",name:"shouldSelectOnPressUp",required:!1,type:{name:"boolean"}},shouldFocusOnHover:{defaultValue:null,description:"Whether options should be focused when the user hovers over them.",name:"shouldFocusOnHover",required:!1,type:{name:"boolean"}},linkBehavior:{defaultValue:{value:"'override'"},description:`The behavior of links in the collection.
- 'action': link behaves like onAction.
- 'selection': link follows selection interactions (e.g. if URL drives selection).
- 'override': links override all other interactions (link items are not selectable).`,name:"linkBehavior",required:!1,type:{name:"enum",value:[{value:'"selection"'},{value:'"action"'},{value:'"override"'}]}},items:{defaultValue:null,description:"Item objects in the collection.",name:"items",required:!1,type:{name:"Iterable<T>"}},autoFocus:{defaultValue:null,description:"Whether to auto focus the listbox or an option.",name:"autoFocus",required:!1,type:{name:"boolean | FocusStrategy"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"An optional visual label for the listbox.",name:"label",required:!1,type:{name:"ReactNode"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},selectionMode:{defaultValue:null,description:"The type of selection that is allowed in the collection.",name:"selectionMode",required:!1,type:{name:"enum",value:[{value:'"single"'},{value:'"none"'},{value:'"multiple"'}]}},defaultSelectedKeys:{defaultValue:null,description:"The initial selected keys in the collection (uncontrolled).",name:"defaultSelectedKeys",required:!1,type:{name:'"all" | Iterable<Key>'}},disabledKeys:{defaultValue:null,description:"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",name:"disabledKeys",required:!1,type:{name:"Iterable<Key>"}},onSelectionChange:{defaultValue:null,description:"Handler that is called when the selection changes.",name:"onSelectionChange",required:!1,type:{name:"(keys: Selection) => void"}},selectedKeys:{defaultValue:null,description:"The currently selected keys in the collection (controlled).",name:"selectedKeys",required:!1,type:{name:'"all" | Iterable<Key>'}},disallowEmptySelection:{defaultValue:null,description:"Whether the collection allows empty selection.",name:"disallowEmptySelection",required:!1,type:{name:"boolean"}},selectionBehavior:{defaultValue:null,description:"How multiple selection should behave in the collection.",name:"selectionBehavior",required:!1,type:{name:"enum",value:[{value:'"toggle"'},{value:'"replace"'}]}},shouldFocusWrap:{defaultValue:null,description:"Whether focus should wrap around when the end/start is reached.",name:"shouldFocusWrap",required:!1,type:{name:"boolean"}},onAction:{defaultValue:null,description:"Handler that is called when a user performs an action on an item. The exact user event depends on\nthe collection's `selectionBehavior` prop and the interaction modality.",name:"onAction",required:!1,type:{name:"(key: Key) => void"}}}}}catch{}const B=({isOpen:e,onClose:l,children:r,className:n,triggerRef:s})=>{const a=y.useRef(null),{overlayProps:d}=ye({isOpen:e,onClose:l,isDismissable:!0,shouldCloseOnBlur:!0},a),{overlayProps:c,updatePosition:f}=be({isOpen:e,offset:0,crossOffset:0,containerPadding:0,overlayRef:a,targetRef:s,placement:"bottom start"});y.useLayoutEffect(()=>{e&&requestAnimationFrame(()=>{f()})},[e,f]);const u={...c.style,"--select-width":s.current?`${s.current.offsetWidth}px`:void 0};return t.jsx(ve,{children:t.jsx("div",{...k(d,c),ref:a,className:n,style:u,children:t.jsxs(he,{restoreFocus:!0,children:[t.jsx(M,{onDismiss:l}),r,t.jsx(M,{onDismiss:l})]})})})};try{B.displayName="SelectPopover",B.__docgenInfo={description:"",displayName:"SelectPopover",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},isOpen:{defaultValue:null,description:"",name:"isOpen",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},triggerRef:{defaultValue:null,description:"",name:"triggerRef",required:!0,type:{name:"RefObject<HTMLButtonElement>"}}}}}catch{}function mt(e,l,r){const{disallowEmptySelection:n,isDisabled:s}=e,a=Ve({usage:"search",sensitivity:"base"}),d=y.useMemo(()=>new $e(l.collection,l.disabledKeys,null,a),[l.collection,l.disabledKeys,a]),{menuTriggerProps:c,menuProps:f}=ge({isDisabled:s,type:"listbox"},l,r),u=m=>{const{selectedKeys:x,selectionMode:j}=l,i=x.values().next().value;if(j==="single")switch(m.key){case"ArrowLeft":{m.preventDefault();const _=x.size>0?d.getKeyAbove(i):d.getFirstKey();_&&l.setSelectedKeys([_]);break}case"ArrowRight":{m.preventDefault();const _=x.size>0?d.getKeyBelow(i):d.getFirstKey();_&&l.setSelectedKeys([_]);break}}},{typeSelectProps:h}=Se({keyboardDelegate:d,selectionManager:l.selectionManager,onTypeSelect(m){l.setSelectedKeys([m])}}),{labelProps:g,fieldProps:b}=ke({...e,labelElementType:"span"});h.onKeyDown=h.onKeyDownCapture,delete h.onKeyDownCapture;const v=_e(e,{labelable:!0}),$=k(h,c,b),S=se();return{labelProps:{...g,onClick:()=>{var m;e.isDisabled||((m=r.current)==null||m.focus(),ae("keyboard"))}},triggerProps:k(v,{...$,onKeyDown:ne($.onKeyDown,u,e.onKeyDown),onKeyUp:e.onKeyUp,"aria-labelledby":[$["aria-labelledby"],$["aria-label"]&&!$["aria-labelledby"]?$.id:null,S].filter(Boolean).join(" "),onFocus(m){l.isFocused||(e.onFocus&&e.onFocus(m),l.setFocused(!0))},onBlur(m){l.isOpen||(e.onBlur&&e.onBlur(m),l.setFocused(!1))}}),valueProps:{id:S},menuProps:{...f,disallowEmptySelection:n,autoFocus:l.focusStrategy||!0,shouldSelectOnPressUp:!0,shouldFocusOnHover:!0,onBlur:m=>{m.currentTarget.contains(m.relatedTarget)||(e.onBlur&&e.onBlur(m),l.setFocused(!1))},"aria-labelledby":[b["aria-labelledby"],$["aria-label"]&&!b["aria-labelledby"]?$.id:null].filter(Boolean).join(" ")}}}function pt(e){const{collection:l,disabledKeys:r,selectionManager:n,selectionManager:{setSelectedKeys:s,selectedKeys:a,selectionMode:d}}=Ie(e),c=[],f=a.size!==0?Array.from(a).map(u=>{const h=l.getItem(u);return h||c.push(u),h}).filter(Boolean):null;return c.length&&console.warn(`Select: Keys "${c.join(", ")}" passed to "selectedKeys" are not present in the collection.`),{collection:l,disabledKeys:r,selectionManager:n,selectionMode:d,selectedKeys:a,setSelectedKeys:s.bind(n),selectedItems:f}}function ht(e){var h,g;const[l,r]=y.useState(!1),n=xe(e),s=e.selectionMode==="single",a=pt({...e,onSelectionChange:b=>{const{onSelectionChange:v}=e;v!=null&&v(b==="all"?Array.from(a.collection.getKeys()):Array.from(b))}}),d=Ce({...e,defaultSelectedKey:(h=e.defaultSelectedKeys)==null?void 0:h.toString(),selectedKey:(g=e.selectedKeys)==null?void 0:g.toString(),onSelectionChange:b=>{const{onSelectionChange:v}=e;v!=null&&v(b==="all"?Array.from(d.collection.getKeys()):b),s&&n.close()}}),c=je({...e,validationBehavior:"native",value:s?d.selectedKey:a.selectedKeys}),f=!s&&a.collection.size===0||s&&d.collection.size===0,u=!!d.selectedKey||!!a.selectedKeys.size;return y.useEffect(()=>{s&&u&&(c.resetValidation(),c.commitValidation())},[u,s,c]),{...d,...a,selectionManager:s?d.selectionManager:a.selectionManager,...n,close(){n.close(),u&&(c.resetValidation(),c.commitValidation())},open(){f||n.open()},toggle(b){f||n.toggle(b)},isFocused:l,setFocused:r,...c}}function C({autoComplete:e,name:l,isDisabled:r,isRequired:n,selectRef:s},a,d){var f;const{visuallyHiddenProps:c}=we();return qe(s,a.selectedKeys,a.setSelectedKeys),Be({validationBehavior:"native",focus:()=>{var u;return(u=d.current)==null?void 0:u.focus()}},a,s),{containerProps:{...c,"aria-hidden":!0,"data-react-aria-prevent-focus":!0,"data-a11y-ignore":"aria-hidden-focus"},inputProps:{style:{display:"none"}},selectProps:{tabIndex:-1,autoComplete:e,disabled:r,required:n,name:l,value:a.selectionMode==="single"?(f=a.selectedKey)==null?void 0:f.toString():Array.from(a.selectedKeys).map(u=>u.toString()),onChange:u=>a.setSelectedKeys(u.target.value)}}}function K(e){var u;const{state:l,triggerRef:r,label:n,name:s,isDisabled:a}=e,d=y.useRef(null),{containerProps:c,selectProps:f}=C({...e,selectRef:d},l,r);return l.collection.size<=300?t.jsx("div",{...c,"data-testid":"hidden-select-container",children:t.jsxs("label",{children:[n,t.jsxs("select",{...f,ref:d,multiple:l.selectionMode==="multiple",children:[t.jsx("option",{}),[...l.collection.getKeys()].map(h=>{const g=l.collection.getItem(h);return g&&g.type==="item"?t.jsx("option",{value:g.key,children:g.textValue},g.key):null})]})]})}):s?t.jsx("input",{type:"hidden",autoComplete:f.autoComplete,name:s,disabled:a,value:l.selectionMode==="single"?((u=l.selectedKey)==null?void 0:u.toString())??"":Array.from(l.selectedKeys).map(h=>h.toString())??""}):null}try{C.displayName="useHiddenMultiSelect",C.__docgenInfo={description:"Provides the behavior and accessibility implementation for a hidden `<select>` element, which\ncan be used in combination with `useSelect` to support browser form autofill, mobile form\nnavigation, and native HTML form submission.",displayName:"useHiddenMultiSelect",props:{}}}catch{}try{K.displayName="HiddenMultiSelect",K.__docgenInfo={description:"Renders a hidden native `<select>` element, which can be used to support browser\nform autofill, mobile form navigation, and native form submission.",displayName:"HiddenMultiSelect",props:{state:{defaultValue:null,description:"State for the select.",name:"state",required:!0,type:{name:"MultiSelectState<T>"}},triggerRef:{defaultValue:null,description:"A ref to the trigger element.",name:"triggerRef",required:!0,type:{name:"RefObject<FocusableElement>"}},autoComplete:{defaultValue:null,description:"Describes the type of autocomplete functionality the input should provide if any. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefautocomplete).",name:"autoComplete",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"The text label for the select.",name:"label",required:!1,type:{name:"ReactNode"}},name:{defaultValue:null,description:"HTML form input name.",name:"name",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Sets the disabled state of the select and input.",name:"isDisabled",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Sets the required state of the select and input.",name:"isRequired",required:!1,type:{name:"boolean"}}}}}catch{}const bt=y.forwardRef(({selectionMode:e="single",errorPosition:l="top",...r},n)=>{const s={selectionMode:e,...r},{autoFocus:a,className:d,excludeFromTabOrder:c,isClearable:f=!0,isDisabled:u,isSelectableAll:h,label:g,description:b,placeholder:v,showTags:$,errorMessage:S}=s,m=y.useRef(null),x=ie(n),j=!f,i=ht({...s,disallowEmptySelection:j}),{labelProps:_,triggerProps:L,valueProps:H,menuProps:W}=mt({...s,disallowEmptySelection:j},i,x),{buttonProps:z}=te({...L,autoFocus:a,excludeFromTabOrder:c,isDisabled:u},x),U=i.isOpen||i.selectedItems||i.selectedItem,F=i.selectionManager.isSelectAll,N=!F&&!i.selectionManager.isEmpty,G=f&&(i.selectedItems||i.selectedItem),X=h,J=()=>i.selectionManager.clearSelection(),Q=()=>i.selectionManager.toggleSelectAll(),Y=p=>i.selectionManager.toggleSelection(p),{width:Z}=Ke(x.current),ee=p=>t.jsxs("div",{className:V(o.selectValueTag,{[o.selectValueTagDisabled]:u}),children:[t.jsx("span",{className:o.truncate,style:{maxWidth:Z-64},children:p.length>1?`${p.length} valda`:p[0].textValue}),t.jsx("button",{disabled:u,"aria-label":"Rensa alla",className:o.clearButton,onClick:()=>{var D;J(),(D=x==null?void 0:x.current)==null||D.focus()},children:t.jsx(Ne,{width:20,height:20})})]});return y.useEffect(()=>{m.current&&(m.current.indeterminate=N)},[N]),t.jsxs(t.Fragment,{children:[t.jsx(K,{isDisabled:s.isDisabled,isRequired:s.isRequired,name:s.name,state:i,triggerRef:x,label:s.label+"-hidden"}),t.jsxs(ce,{...s,className:V([o.multiSelect],{[o.multiSelectOpen]:i.isOpen},d),children:[t.jsxs("div",{className:o.multiSelect,children:[g&&t.jsx(De,{variant:"label-02",..._,slot:"label",className:V(o.selectLabel,{[o.selectLabelActive]:U,[o.selectLabelDisabled]:u}),children:g}),b&&t.jsx(Me,{slot:"description",children:b}),l==="top"&&t.jsxs(t.Fragment,{children:[t.jsx(T,{children:S}),i.displayValidation.validationErrors.length?t.jsx("div",{className:o.fieldError,children:S||i.displayValidation.validationErrors.map(p=>t.jsx(y.Fragment,{children:p},p))}):null]}),t.jsx(P,{focusRingClass:o.buttonFocused,autoFocus:a,children:t.jsxs("div",{className:o.selectContainer,children:[t.jsxs("button",{...z,...k,className:V(o.button,{[o.buttonOpen]:i.isOpen,[o.buttonActive]:i.selectedItems||i.selectedItem,[o.buttonDisabled]:u}),"data-invalid":i.displayValidation.validationErrors.length>0||i.displayValidation.isInvalid,type:"button",ref:x,children:[i.selectionMode==="multiple"&&!i.selectedItems?t.jsx("span",{children:v}):null,i.selectionMode==="single"?t.jsx("span",{children:i.selectedItem?i.selectedItem.textValue:v}):null,t.jsx("div",{className:o.icon,"aria-hidden":"true",children:t.jsx(Fe,{size:20})})]}),i.selectionMode==="multiple"&&i.selectedItems?t.jsx("span",{...H,children:ee(i.selectedItems)}):null]})}),l==="bottom"&&t.jsxs(t.Fragment,{children:[t.jsx(T,{children:S}),i.displayValidation.validationErrors.length?t.jsx("div",{className:o.fieldError,children:S||i.displayValidation.validationErrors.map(p=>t.jsx(y.Fragment,{children:p},p))}):null]}),i.isOpen&&t.jsxs(B,{isOpen:i.isOpen,onClose:i.close,className:o.popover,triggerRef:x,children:[X&&t.jsxs(t.Fragment,{children:[h&&t.jsx(P,{focusRingClass:o.listItemfocusRing,children:t.jsx("button",{type:"button",onClick:Q,className:o.selectAllButton,children:t.jsxs("div",{className:o.listBoxItem,tabIndex:-1,children:[t.jsx("div",{className:o.checkboxContainer,children:t.jsx("input",{className:o.checkbox,type:"checkbox",checked:F,ref:m,readOnly:!0,tabIndex:-1})}),t.jsx("span",{children:"Select All"})]})})}),t.jsx("div",{className:"selectDivider"})]}),t.jsx(q,{...W,state:i}),G&&!1]})]}),$&&i.selectedItems!==null&&t.jsx(oe,{"aria-label":"Selected Items",selectionBehavior:"toggle",onRemove:p=>Y([...p][0]),className:o.tagGroup,...k,children:t.jsx(re,{items:i.selectedItems,children:p=>t.jsx(de,{textValue:p.textValue,id:p.key,dismissable:!0,isDisabled:u,children:p.textValue},p.key)})})]})]})}),w=y.forwardRef(({options:e,...l},r)=>t.jsx(bt,{...l,items:e,ref:r,children:n=>n.children?t.jsx(Pe,{items:n.children,title:n.name,children:s=>t.jsx(R,{textValue:s.textValue,children:s.name})},n.name):t.jsx(R,{textValue:n.textValue,children:n.name})}));w.displayName="Select";try{w.displayName="Select",w.__docgenInfo={description:"",displayName:"Select",props:{autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Sets the CSS [`className`](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element.",name:"className",required:!1,type:{name:"string"}},defaultOpen:{defaultValue:null,description:"Sets the default open state of the field (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},defaultSelectedKeys:{defaultValue:null,description:"The initial selected keys in the collection (uncontrolled).",name:"defaultSelectedKeys",required:!1,type:{name:'"all" | Iterable<Key>'}},disabledKeys:{defaultValue:null,description:"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",name:"disabledKeys",required:!1,type:{name:"Iterable<Key>"}},excludeFromTabOrder:{defaultValue:null,description:"",name:"excludeFromTabOrder",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"Option[]"}},isClearable:{defaultValue:null,description:"Whether the field can be emptied.",name:"isClearable",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"Whether the field is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},isSelectableAll:{defaultValue:null,description:"Whether to show a button to select all items.",name:"isSelectableAll",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:null,description:"Sets the open state of the field (controlled).",name:"isOpen",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"The content to display as the label.",name:"label",required:!0,type:{name:"string"}},description:{defaultValue:null,description:"Optional description",name:"description",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Placeholder value",name:"placeholder",required:!1,type:{name:"string"}},showTags:{defaultValue:null,description:"Show selected items as tags below select",name:"showTags",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the select's open state changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}},onSelectionChange:{defaultValue:null,description:"Handler that is called when the selection changes.",name:"onSelectionChange",required:!1,type:{name:"(value: string | number | Set<Key> | Key[]) => void"}},selectedKeys:{defaultValue:null,description:"The currently selected keys in the collection (controlled).",name:"selectedKeys",required:!1,type:{name:'"all" | Iterable<Key>'}},selectionMode:{defaultValue:{value:"single"},description:"The type of selection that is allowed in the collection.",name:"selectionMode",required:!1,type:{name:"enum",value:[{value:'"single"'},{value:'"multiple"'}]}},isInvalid:{defaultValue:null,description:"The selection is valid or not",name:"isInvalid",required:!1,type:{name:"boolean"}},errorMessage:{defaultValue:null,description:"Error message to be displayed in case of invalid state",name:"errorMessage",required:!1,type:{name:"string"}},isRequired:{defaultValue:null,description:"Whether the field is required.",name:"isRequired",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name of the field, for uncontrolled use",name:"name",required:!1,type:{name:"string"}},errorPosition:{defaultValue:{value:"top"},description:"",name:"errorPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}}}}}catch{}export{w as S};
