import{f as $,g as p,d as P}from"./useFocusRing-CPQALXIu.js";import{$ as d,h as x}from"./utils-Dv9Ux5aE.js";import{r as c,R as s}from"./index-BbAIUH2N.js";function l(e){if(!e)return;let t=!0;return r=>{let o={...r,preventDefault(){r.preventDefault()},isDefaultPrevented(){return r.isDefaultPrevented()},stopPropagation(){t?console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior."):t=!0},continuePropagation(){t=!1},isPropagationStopped(){return t}};e(o),t&&r.stopPropagation()}}function v(e){return{keyboardProps:e.isDisabled?{}:{onKeyDown:l(e.onKeyDown),onKeyUp:l(e.onKeyUp)}}}let b=s.createContext(null);function h(e){let t=c.useContext(b)||{};P(t,e);let{ref:r,...o}=t;return o}const y=s.forwardRef(function(t,r){let{children:o,...a}=t,n=x(r),f={...a,ref:n};return s.createElement(b.Provider,{value:f},o)});function F(e,t){let{focusProps:r}=$(e),{keyboardProps:o}=v(e),a=d(r,o),n=h(t),f=e.isDisabled?{}:n,u=c.useRef(e.autoFocus);c.useEffect(()=>{u.current&&t.current&&p(t.current),u.current=!1},[t]);let i=e.excludeFromTabOrder?-1:0;return e.isDisabled&&(i=void 0),{focusableProps:d({...a,tabIndex:i},f)}}export{F as $,b as a,y as b,v as c};
