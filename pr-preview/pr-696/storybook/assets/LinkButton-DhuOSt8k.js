import{j as t}from"./jsx-runtime-BYYWji4R.js";import{$ as _,A as g}from"./arrow-right-CuWenxBu.js";import{c as h}from"./clsx-B-dksMZM.js";import{S as v}from"./square-arrow-out-up-right-bx5tG4Q4.js";import{c as q}from"./createLucideIcon-DQK9Z80p.js";import{s}from"./useFocusRing-CiRxO26c.js";/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const w=q("ArrowLeft",[["path",{d:"m12 19-7-7 7-7",key:"1l729n"}],["path",{d:"M19 12H5",key:"x3x0zl"}]]),b="_linkButton_qz9cn_4",k="_secondary_qz9cn_55",x="_icon_qz9cn_60",z="_tertiary_qz9cn_85",L="_danger_qz9cn_102",A="_iconBtn_qz9cn_119",B="_medium_qz9cn_141",j="_iconLeft_qz9cn_146",R="_fullwidth_qz9cn_150",e={linkButton:b,secondary:k,icon:x,tertiary:z,danger:L,iconBtn:A,medium:B,iconLeft:j,fullwidth:R},l=({children:i,variant:n,fullwidth:u,icon:r,iconPlacement:o,className:c,as:d,size:m="large",...p})=>{const f=d||_,y=({...a})=>r?t.jsx(r,{...a}):a.target==="_blank"?t.jsx(v,{...a}):o==="left"?t.jsx(w,{...a}):t.jsx(g,{...a});return t.jsxs(f,{className:h(e.linkButton,n==="primary"&&e.primary,n==="secondary"&&e.secondary,n==="tertiary"&&e.tertiary,n==="danger"&&e.danger,n==="icon"&&e.iconBtn,m==="medium"&&e.medium,u&&e.fullwidth,o==="left"&&e.iconLeft,c),...p,children:[i,t.jsx(y,{size:20,className:e.icon})]})};try{l.displayName="LinkButton",l.__docgenInfo={description:"A link to be used when a user expects a button but web technologies force us to use a a-tag",displayName:"LinkButton",props:{variant:{defaultValue:{value:"'primary'"},description:"Primary button is used as a positive action in a flow. Always use one primary button and never a seconday button on it's own. When using just an icon you must pass an aria-label",name:"variant",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"danger"'}]}},fullwidth:{defaultValue:{value:"false"},description:"Adds width: 100%; for the button to span entire width of parent",name:"fullwidth",required:!1,type:{name:"boolean"}},iconPlacement:{defaultValue:null,description:"Display the icon on the left or right side of the button text",name:"iconPlacement",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},icon:{defaultValue:null,description:`Add an icon from lucide-react
@see {@link https://lucide.dev/icons/ Lucide}`,name:"icon",required:!1,type:{name:"LucideIcon"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},as:{defaultValue:null,description:`Replace base component with any Client Side Routing link instead.
@see {@link https://designsystem.migrationsverket.se/dev/client-side-routing/ Client side routing}`,name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},size:{defaultValue:{value:"large"},description:"Component size (large: height 48px, medium: height 40px)",name:"size",required:!1,type:{name:"enum",value:[{value:'"large"'},{value:'"medium"'}]}}}}}catch{}try{s.displayName="RouterProvider",s.__docgenInfo={description:"A RouterProvider accepts a `navigate` function from a framework or client side router,\nand provides it to all nested React Aria links to enable client side navigation.",displayName:"RouterProvider",props:{navigate:{defaultValue:null,description:"",name:"navigate",required:!0,type:{name:"(path: string, routerOptions: undefined) => void"}},useHref:{defaultValue:null,description:"",name:"useHref",required:!1,type:{name:"(href: string) => string"}}}}}catch{}export{l as L};
