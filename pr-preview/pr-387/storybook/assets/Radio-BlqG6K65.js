import{j as w}from"./jsx-runtime-DtgEGaVE.js";import{$ as k}from"./Group-DZHj0GkJ.js";import{b as x,l as B,$ as C,h as A,i as W,a as M,k as L,g as G,n as O,j}from"./utils-Cd6MiihZ.js";import{b as U,c as z}from"./Form-Cr76Dr7U.js";import{a as K}from"./Label-Bf-bZThx.js";import{a as J}from"./Text-BkowhAon.js";import{$ as E}from"./filterDOMProps-BSfnXAP7.js";import{r as R,R as S}from"./index-BbAIUH2N.js";import{a as Q,b as X,$ as Y}from"./useFormValidation-BT6lxpQu.js";import{$ as Z}from"./useControlledState-DGyHFLi9.js";import{$ as ee}from"./FocusScope-B7ZOkgD-.js";import{f as F,c as ae,a as te,$ as ie}from"./useFocusRing--RQdELqC.js";import{$ as le}from"./useField-9Cy_F6CL.js";import{$ as ne}from"./context-BSqmORe6.js";import{$ as re}from"./useFocusable-5VAxOUE-.js";import{$ as de}from"./VisuallyHidden-DRXW-gYG.js";import{c as se}from"./clsx-B-dksMZM.js";import{I as oe}from"./TextField-fo9kFnVl.js";const N=new WeakMap;function ue(a,e,i){let{value:n,children:r,"aria-label":l,"aria-labelledby":d}=a;const t=a.isDisabled||e.isDisabled;let f=r!=null,c=l!=null||d!=null;!f&&!c&&console.warn("If you do not provide children, you must specify an aria-label for accessibility");let s=e.selectedValue===n,h=V=>{V.stopPropagation(),e.setSelectedValue(n)},{pressProps:v,isPressed:y}=F({isDisabled:t}),{pressProps:$,isPressed:m}=F({isDisabled:t,onPress(){var V;e.setSelectedValue(n),(V=i.current)===null||V===void 0||V.focus()}}),{focusableProps:I}=re(x(a,{onFocus:()=>e.setLastFocusedValue(n)}),i),P=x(v,I),q=E(a,{labelable:!0}),b=-1;e.selectedValue!=null?e.selectedValue===n&&(b=0):(e.lastFocusedValue===n||e.lastFocusedValue==null)&&(b=0),t&&(b=void 0);let{name:p,descriptionId:o,errorMessageId:g,validationBehavior:u}=N.get(e);return Q(i,e.selectedValue,e.setSelectedValue),X({validationBehavior:u},e,i),{labelProps:x($,{onClick:V=>V.preventDefault()}),inputProps:x(q,{...P,type:"radio",name:p,tabIndex:b,disabled:t,required:e.isRequired&&u==="native",checked:s,value:n,onChange:h,"aria-describedby":[a["aria-describedby"],e.isInvalid?g:null,o].filter(Boolean).join(" ")||void 0}),isDisabled:t,isSelected:s,isPressed:y||m}}function ce(a,e){let{name:i,isReadOnly:n,isRequired:r,isDisabled:l,orientation:d="vertical",validationBehavior:t="aria"}=a,{direction:f}=ne(),{isInvalid:c,validationErrors:s,validationDetails:h}=e.displayValidation,{labelProps:v,fieldProps:y,descriptionProps:$,errorMessageProps:m}=le({...a,labelElementType:"span",isInvalid:e.isInvalid,errorMessage:a.errorMessage||s}),I=E(a,{labelable:!0}),{focusWithinProps:P}=ae({onBlurWithin(p){var o;(o=a.onBlur)===null||o===void 0||o.call(a,p),e.selectedValue||e.setLastFocusedValue(null)},onFocusWithin:a.onFocus,onFocusWithinChange:a.onFocusChange}),q=p=>{let o;switch(p.key){case"ArrowRight":f==="rtl"&&d!=="vertical"?o="prev":o="next";break;case"ArrowLeft":f==="rtl"&&d!=="vertical"?o="next":o="prev";break;case"ArrowDown":o="next";break;case"ArrowUp":o="prev";break;default:return}p.preventDefault();let g=ee(p.currentTarget,{from:p.target}),u;o==="next"?(u=g.nextNode(),u||(g.currentNode=p.currentTarget,u=g.firstChild())):(u=g.previousNode(),u||(g.currentNode=p.currentTarget,u=g.lastChild())),u&&(u.focus(),e.setSelectedValue(u.value))},b=B(i);return N.set(e,{name:b,descriptionId:$.id,errorMessageId:m.id,validationBehavior:t}),{radioGroupProps:x(I,{role:"radiogroup",onKeyDown:q,"aria-invalid":e.isInvalid||void 0,"aria-errormessage":a["aria-errormessage"],"aria-readonly":n||void 0,"aria-required":r||void 0,"aria-disabled":l||void 0,"aria-orientation":d,...y,...P}),labelProps:v,descriptionProps:$,errorMessageProps:m,isInvalid:c,validationErrors:s,validationDetails:h}}let fe=Math.round(Math.random()*1e10),pe=0;function me(a){let e=R.useMemo(()=>a.name||`radio-group-${fe}-${++pe}`,[a.name]);var i;let[n,r]=Z(a.value,(i=a.defaultValue)!==null&&i!==void 0?i:null,a.onChange),[l,d]=R.useState(null),t=Y({...a,value:n}),f=s=>{!a.isReadOnly&&!a.isDisabled&&(r(s),t.commitValidation())},c=t.displayValidation.isInvalid;return{...t,name:e,selectedValue:n,setSelectedValue:f,lastFocusedValue:l,setLastFocusedValue:d,isDisabled:a.isDisabled||!1,isReadOnly:a.isReadOnly||!1,isRequired:a.isRequired||!1,validationState:a.validationState||(c?"invalid":null),isInvalid:c}}const be=R.createContext(null),he=R.createContext(null),T=R.createContext(null),ve=R.forwardRef(function(e,i){[e,i]=C(e,i,be);let{validationBehavior:n}=A(U)||{};var r,l;let d=(l=(r=e.validationBehavior)!==null&&r!==void 0?r:n)!==null&&l!==void 0?l:"native",t=me({...e,validationBehavior:d}),[f,c]=W(!e["aria-label"]&&!e["aria-labelledby"]),{radioGroupProps:s,labelProps:h,descriptionProps:v,errorMessageProps:y,...$}=ce({...e,label:c,validationBehavior:d},t),m=M({...e,values:{orientation:e.orientation||"vertical",isDisabled:t.isDisabled,isReadOnly:t.isReadOnly,isRequired:t.isRequired,isInvalid:t.isInvalid,state:t},defaultClassName:"react-aria-RadioGroup"});return S.createElement("div",{...s,...m,ref:i,slot:e.slot||void 0,"data-orientation":e.orientation||"vertical","data-invalid":t.isInvalid||void 0,"data-disabled":t.isDisabled||void 0,"data-readonly":t.isReadOnly||void 0,"data-required":t.isRequired||void 0},S.createElement(L,{values:[[T,t],[K,{...h,ref:f,elementType:"span"}],[J,{slots:{description:v,errorMessage:y}}],[z,$]]},m.children))}),ye=R.forwardRef(function(e,i){let{inputRef:n=null,...r}=e;[e,i]=C(r,i,he);let l=S.useContext(T),d=G(O(n,e.inputRef!==void 0?e.inputRef:null)),{labelProps:t,inputProps:f,isSelected:c,isDisabled:s,isPressed:h}=ue({...j(e),children:typeof e.children=="function"?!0:e.children},l,d),{isFocused:v,isFocusVisible:y,focusProps:$}=te(),m=s||l.isReadOnly,{hoverProps:I,isHovered:P}=ie({...e,isDisabled:m}),q=M({...e,defaultClassName:"react-aria-Radio",values:{isSelected:c,isPressed:h,isHovered:P,isFocused:v,isFocusVisible:y,isDisabled:s,isReadOnly:l.isReadOnly,isInvalid:l.isInvalid,isRequired:l.isRequired}}),b=E(e);return delete b.id,S.createElement("label",{...x(b,t,I,q),ref:i,"data-selected":c||void 0,"data-pressed":h||void 0,"data-hovered":P||void 0,"data-focused":v||void 0,"data-focus-visible":y||void 0,"data-disabled":s||void 0,"data-readonly":l.isReadOnly||void 0,"data-invalid":l.isInvalid||void 0,"data-required":l.isRequired||void 0},S.createElement(de,{elementType:"span"},S.createElement("input",{...x(f,$),ref:d})),q.children)}),$e='"../theme/tokens.css"',ge="_radioGroup_cbfdn_4",Ve="_wrap_cbfdn_16",xe="_radio_cbfdn_4",D={tokens:$e,"--font-family":'"Inter", sans-serif',"--text-disabled":"light-dark(#bfbfbf, #525252)","--size-03":"1rem","--text-primary":"light-dark(#171717, #f2f2f2)","--border-strong":"light-dark(#171717, #f2f2f2)","--focus":"0 0 0 2px white, 0 0 0 4px black","--fast-transition":"250ms","--border-disabled":"light-dark(#bfbfbf, #525252)","--icon-secondary":"light-dark(#143c50, #f2f2f2)","--border-medium":"light-dark(#737373, #8c8c8c)","--border-subtle":"light-dark(#bfbfbf, #383838)","--breakpoint-sm":"(max-width: 767px)","--field-hover-02":"light-dark(#e6e6e6, #474747)","--border-invalid":"light-dark(#e62323, #e62323)",radioGroup:ge,wrap:Ve,radio:xe},_=({label:a,description:e,errorMessage:i,children:n,className:r,...l})=>w.jsx(ve,{...l,className:se(D.radioGroup,r),children:w.jsx(oe,{label:a,description:e,errorMessage:i,children:w.jsx(k,{className:D.wrap,children:n})})}),H=a=>w.jsx(ye,{className:D.radio,...a});try{_.displayName="RadioGroup",_.__docgenInfo={description:"RadioGroup is used to group several radio items together",displayName:"RadioGroup",props:{label:{defaultValue:null,description:"Label for the RadioGroup",name:"label",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"Additional description rendered below the label",name:"description",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"String to display as error message or function to handle the result and produce the error message",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: RadioGroupRenderProps & { defaultClassName: string; }) => string)"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: RadioGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},"aria-errormessage":{defaultValue:null,description:"Identifies the element that provides an error message for the object.",name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"(value: string) => void"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"string"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:"enum",value:[{value:'"native"'},{value:'"aria"'}]}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: string) => true | ValidationError"}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},orientation:{defaultValue:{value:"'vertical'"},description:"The axis the Radio Button(s) should align with.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}try{H.displayName="Radio",H.__docgenInfo={description:"Radio item",displayName:"Radio",props:{inputRef:{defaultValue:null,description:"A ref for the HTML input element.",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},isDisabled:{defaultValue:null,description:`Whether the radio button is disabled or not.
Shows that a selection exists, but is not available in that circumstance.`,name:"isDisabled",required:!1,type:{name:"boolean"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},value:{defaultValue:null,description:`The value of the radio button, used when submitting an HTML form.
See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio#Value).`,name:"value",required:!0,type:{name:"string"}},onHoverStart:{defaultValue:null,description:"Handler that is called when a hover interaction starts.",name:"onHoverStart",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverEnd:{defaultValue:null,description:"Handler that is called when a hover interaction ends.",name:"onHoverEnd",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverChange:{defaultValue:null,description:"Handler that is called when the hover state changes.",name:"onHoverChange",required:!1,type:{name:"(isHovering: boolean) => void"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: RadioRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: RadioRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: RadioRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}}}}}catch{}export{_ as R,H as a,D as s};
