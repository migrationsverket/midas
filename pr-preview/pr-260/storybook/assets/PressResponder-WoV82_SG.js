import{a as c,b as d,c as b,d as i}from"./useFocusable-l7NaYEdB.js";import{R as n,r as t}from"./index-BbAIUH2N.js";const $=n.forwardRef(({children:a,...o},r)=>{let s=t.useRef(!1),e=t.useContext(c);r=d(r||(e==null?void 0:e.ref));let f=b(e||{},{...o,ref:r,register(){s.current=!0,e&&e.register()}});return i(e,r),t.useEffect(()=>{s.current||(console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component."),s.current=!0)},[]),n.createElement(c.Provider,{value:f},a)});function p({children:a}){let o=t.useMemo(()=>({register:()=>{}}),[]);return n.createElement(c.Provider,{value:o},a)}export{p as $,$ as a};
