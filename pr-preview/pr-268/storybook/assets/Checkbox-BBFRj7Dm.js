import{j as y}from"./jsx-runtime-CBDCb4rg.js";import{c as U}from"./clsx-B-dksMZM.js";import{a as G}from"./RSPContexts-BT50PPhj.js";import{o as S,n as K,d as g,p as D,f as J,$ as H,z as M,A as Q,c as F,C as X,h as Y,J as Z,B as O,b as ee,a as ae}from"./useFocusable-B8HhqQIl.js";import{e as ie,d as C,f as le,g as T,h as te,i as ne,a as W,b as de}from"./Form-3nrIbYVr.js";import{b as re,$ as se}from"./useField-Dt29Lb0W.js";import{$ as oe}from"./Text-Bxg5Zhzp.js";import{r as p,R as V}from"./index-B-o1Wr-g.js";import{$ as N}from"./useControlledState-BgxdDqm0.js";import{a as ue}from"./VisuallyHidden-DjSI67in.js";function ce(a,e,l){let{isDisabled:d=!1,isReadOnly:r=!1,value:s,name:o,children:t,"aria-label":c,"aria-labelledby":i,validationState:n="valid",isInvalid:u}=a,b=P=>{P.stopPropagation(),e.setSelected(P.target.checked)},v=t!=null,f=c!=null||i!=null;!v&&!f&&console.warn("If you do not provide children, you must specify an aria-label for accessibility");let{pressProps:m,isPressed:h}=S({isDisabled:d}),{pressProps:$,isPressed:x}=S({isDisabled:d||r,onPress(){e.toggle()}}),{focusableProps:R}=K(a,l),I=g(m,R),q=D(a,{labelable:!0});return ie(l,e.isSelected,e.setSelected),{labelProps:g($,{onClick:P=>P.preventDefault()}),inputProps:g(q,{"aria-invalid":u||n==="invalid"||void 0,"aria-errormessage":a["aria-errormessage"],"aria-controls":a["aria-controls"],"aria-readonly":r||void 0,onChange:b,disabled:d,...s==null?{}:{value:s},name:o,type:"checkbox",...I}),isSelected:e.isSelected,isPressed:h||x,isDisabled:d,isReadOnly:r,isInvalid:u||n==="invalid"}}function j(a,e,l){let d=C({...a,value:e.isSelected}),{isInvalid:r,validationErrors:s,validationDetails:o}=d.displayValidation,{labelProps:t,inputProps:c,isSelected:i,isPressed:n,isDisabled:u,isReadOnly:b}=ce({...a,isInvalid:r},e,l);le(a,d,l);let{isIndeterminate:v,isRequired:f,validationBehavior:m="aria"}=a;p.useEffect(()=>{l.current&&(l.current.indeterminate=!!v)});let{pressProps:h}=S({isDisabled:u||b,onPress(){let{[T]:$}=a,{commitValidation:x}=$||d;x()}});return{labelProps:g(t,h),inputProps:{...c,checked:i,"aria-required":f&&m==="aria"||void 0,required:f&&m==="native"},isSelected:i,isPressed:n,isDisabled:u,isReadOnly:b,isInvalid:r,validationErrors:s,validationDetails:o}}const A=new WeakMap;function fe(a,e){let{isDisabled:l,name:d,validationBehavior:r="aria"}=a,{isInvalid:s,validationErrors:o,validationDetails:t}=e.displayValidation,{labelProps:c,fieldProps:i,descriptionProps:n,errorMessageProps:u}=re({...a,labelElementType:"span",isInvalid:s,errorMessage:a.errorMessage||o});A.set(e,{name:d,descriptionId:n.id,errorMessageId:u.id,validationBehavior:r});let b=D(a,{labelable:!0}),{focusWithinProps:v}=J({onBlurWithin:a.onBlur,onFocusWithin:a.onFocus,onFocusWithinChange:a.onFocusChange});return{groupProps:g(b,{role:"group","aria-disabled":l||void 0,...i,...v}),labelProps:c,descriptionProps:n,errorMessageProps:u,isInvalid:s,validationErrors:o,validationDetails:t}}function L(a={}){let{isReadOnly:e}=a,[l,d]=N(a.isSelected,a.defaultSelected||!1,a.onChange);function r(o){e||d(o)}function s(){e||d(!l)}return{isSelected:l,setSelected:r,toggle:s}}function me(a,e,l){const d=L({isReadOnly:a.isReadOnly||e.isReadOnly,isSelected:e.isSelected(a.value),onChange(h){h?e.addValue(a.value):e.removeValue(a.value),a.onChange&&a.onChange(h)}});let{name:r,descriptionId:s,errorMessageId:o,validationBehavior:t}=A.get(e);var c;t=(c=a.validationBehavior)!==null&&c!==void 0?c:t;let{realtimeValidation:i}=C({...a,value:d.isSelected,name:void 0,validationBehavior:"aria"}),n=p.useRef(te),u=()=>{e.setInvalid(a.value,i.isInvalid?i:n.current)};p.useEffect(u);let b=e.realtimeValidation.isInvalid?e.realtimeValidation:i,v=t==="native"?e.displayValidation:b;var f;let m=j({...a,isReadOnly:a.isReadOnly||e.isReadOnly,isDisabled:a.isDisabled||e.isDisabled,name:a.name||r,isRequired:(f=a.isRequired)!==null&&f!==void 0?f:e.isRequired,validationBehavior:t,[T]:{realtimeValidation:b,displayValidation:v,resetValidation:e.resetValidation,commitValidation:e.commitValidation,updateValidation(h){n.current=h,u()}}},d,l);return{...m,inputProps:{...m.inputProps,"aria-describedby":[a["aria-describedby"],e.isInvalid?o:null,s].filter(Boolean).join(" ")||void 0}}}function be(a={}){let[e,l]=N(a.value,a.defaultValue||[],a.onChange),d=!!a.isRequired&&e.length===0,r=p.useRef(new Map),s=C({...a,value:e}),o=s.displayValidation.isInvalid;var t;return{...s,value:e,setValue(i){a.isReadOnly||a.isDisabled||l(i)},isDisabled:a.isDisabled||!1,isReadOnly:a.isReadOnly||!1,isSelected(i){return e.includes(i)},addValue(i){a.isReadOnly||a.isDisabled||e.includes(i)||l(e.concat(i))},removeValue(i){a.isReadOnly||a.isDisabled||e.includes(i)&&l(e.filter(n=>n!==i))},toggleValue(i){a.isReadOnly||a.isDisabled||(e.includes(i)?l(e.filter(n=>n!==i)):l(e.concat(i)))},setInvalid(i,n){let u=new Map(r.current);n.isInvalid?u.set(i,n):u.delete(i),r.current=u,s.updateValidation(ne(...u.values()))},validationState:(t=a.validationState)!==null&&t!==void 0?t:o?"invalid":null,isInvalid:o,isRequired:d}}const ve=p.createContext(null),z=p.createContext(null),Ee=p.forwardRef(function(e,l){[e,l]=H(e,l,ve);let{validationBehavior:d}=M(W)||{};var r,s;let o=(s=(r=e.validationBehavior)!==null&&r!==void 0?r:d)!==null&&s!==void 0?s:"native",t=be({...e,validationBehavior:o}),[c,i]=Q(),{groupProps:n,labelProps:u,descriptionProps:b,errorMessageProps:v,...f}=fe({...e,label:i,validationBehavior:o},t),m=F({...e,values:{isDisabled:t.isDisabled,isReadOnly:t.isReadOnly,isRequired:e.isRequired||!1,isInvalid:t.isInvalid,state:t},defaultClassName:"react-aria-CheckboxGroup"});return V.createElement("div",{...n,...m,ref:l,slot:e.slot||void 0,"data-readonly":t.isReadOnly||void 0,"data-required":e.isRequired||void 0,"data-invalid":t.isInvalid||void 0,"data-disabled":e.isDisabled||void 0},V.createElement(X,{values:[[z,t],[se,{...u,ref:c,elementType:"span"}],[oe,{slots:{description:b,errorMessage:v}}],[de,f]]},m.children))}),he=p.forwardRef(function(e,l){let{inputRef:d=null,...r}=e;[e,l]=H(r,l,G);let{validationBehavior:s}=M(W)||{};var o,t;let c=(t=(o=e.validationBehavior)!==null&&o!==void 0?o:s)!==null&&t!==void 0?t:"native",i=p.useContext(z),n=Y(Z(d,e.inputRef!==void 0?e.inputRef:null)),{labelProps:u,inputProps:b,isSelected:v,isDisabled:f,isReadOnly:m,isPressed:h,isInvalid:$}=i?me({...O(e),value:e.value,children:typeof e.children=="function"?!0:e.children},i,n):j({...O(e),children:typeof e.children=="function"?!0:e.children,validationBehavior:c},L(e),n),{isFocused:x,isFocusVisible:R,focusProps:I}=ee(),q=f||m,{hoverProps:P,isHovered:B}=ae({...e,isDisabled:q}),E=F({...e,defaultClassName:"react-aria-Checkbox",values:{isSelected:v,isIndeterminate:e.isIndeterminate||!1,isPressed:h,isHovered:B,isFocused:x,isFocusVisible:R,isDisabled:f,isReadOnly:m,isInvalid:$,isRequired:e.isRequired||!1}}),_=D(e);return delete _.id,V.createElement("label",{...g(_,u,P,E),ref:l,slot:e.slot||void 0,"data-selected":v||void 0,"data-indeterminate":e.isIndeterminate||void 0,"data-pressed":h||void 0,"data-hovered":B||void 0,"data-focused":x||void 0,"data-focus-visible":R||void 0,"data-disabled":f||void 0,"data-readonly":m||void 0,"data-invalid":$||void 0,"data-required":e.isRequired||void 0},V.createElement(ue,{elementType:"span"},V.createElement("input",{...g(b,I),ref:n})),E.children)}),pe="_wrap_94zdd_4",$e="_checkboxInner_94zdd_11",ye="_checkbox_94zdd_11",ge="_checkboxGroup_94zdd_134",k={wrap:pe,checkboxInner:$e,checkbox:ye,checkboxGroup:ge},w=({children:a,...e})=>y.jsx(he,{className:U(k.checkbox,e.className),...e,children:({isIndeterminate:l})=>y.jsxs(y.Fragment,{children:[y.jsx("div",{className:k.checkboxInner,children:y.jsx("svg",{width:16,height:16,viewBox:"0 0 18 18","aria-hidden":"true",children:l?y.jsx("rect",{x:4,y:8,width:10,height:2}):y.jsx("polyline",{points:"3,9 7,13 15,4"})})}),a]})});try{w.displayName="Checkbox",w.__docgenInfo={description:"",displayName:"Checkbox",props:{inputRef:{defaultValue:null,description:"A ref for the HTML input element.",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},isSelected:{defaultValue:null,description:"Whether the element should be selected (controlled).",name:"isSelected",required:!1,type:{name:"boolean"}},"aria-controls":{defaultValue:null,description:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",name:"aria-controls",required:!1,type:{name:"string"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: boolean) => true | ValidationError"}},value:{defaultValue:null,description:"The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue).",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Handler that is called when the element's selection state changes.",name:"onChange",required:!1,type:{name:"(isSelected: boolean) => void"}},excludeFromTabOrder:{defaultValue:null,description:`Whether to exclude the element from the sequential tab order. If true,
the element will not be focusable via the keyboard by tabbing. This should
be avoided except in rare scenarios where an alternative means of accessing
the element or its functionality via the keyboard is available.`,name:"excludeFromTabOrder",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},"aria-errormessage":{defaultValue:null,description:"Identifies the element that provides an error message for the object.",name:"aria-errormessage",required:!1,type:{name:"string"}},defaultSelected:{defaultValue:null,description:"Whether the element should be selected (uncontrolled).",name:"defaultSelected",required:!1,type:{name:"boolean"}},isIndeterminate:{defaultValue:null,description:`Indeterminism is presentational only.
The indeterminate visual representation remains regardless of user interaction.`,name:"isIndeterminate",required:!1,type:{name:"boolean"}},onHoverStart:{defaultValue:null,description:"Handler that is called when a hover interaction starts.",name:"onHoverStart",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverEnd:{defaultValue:null,description:"Handler that is called when a hover interaction ends.",name:"onHoverEnd",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverChange:{defaultValue:null,description:"Handler that is called when the hover state changes.",name:"onHoverChange",required:!1,type:{name:"(isHovering: boolean) => void"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:"enum",value:[{value:'"native"'},{value:'"aria"'}]}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: CheckboxRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: CheckboxRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: CheckboxRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}}}}}catch{}export{Ee as $,w as C,z as a,k as s};
