import{j as x}from"./jsx-runtime-CBDCb4rg.js";import{c as N}from"./clsx-B-dksMZM.js";import{$ as L,b as B,c as j,d as H,e as M,f as A}from"./OverlayArrow-CuCbQGRr.js";import{e as F,p as U,a as _,d as O,j as k,n as z,y as G,I as K,$ as Y,l as J,c as Q,C as X,L as Z}from"./useFocusable-B8HhqQIl.js";import{R as d,r as o}from"./index-B-o1Wr-g.js";import{G as ee}from"./index-D2jEcJry.js";const w=d.createContext(null);function te(e){let{children:a}=e,t=o.useContext(w),[l,i]=o.useState(0),s=o.useMemo(()=>({parent:t,modalCount:l,addModal(){i(n=>n+1),t&&t.addModal()},removeModal(){i(n=>n-1),t&&t.removeModal()}}),[t,l]);return d.createElement(w.Provider,{value:s},a)}function ae(){let e=o.useContext(w);return{modalProviderProps:{"aria-hidden":e&&e.modalCount>0?!0:void 0}}}function re(e){let{modalProviderProps:a}=ae();return d.createElement("div",{"data-overlay-container":!0,...e,...a})}function le(e){return d.createElement(te,null,d.createElement(re,e))}function ne(e){let a=F(),{portalContainer:t=a?null:document.body,...l}=e;if(d.useEffect(()=>{if(t!=null&&t.closest("[data-overlay-container]"))throw new Error("An OverlayContainer must not be inside another container. Please change the portalContainer prop.")},[t]),!t)return null;let i=d.createElement(le,l);return ee.createPortal(i,t)}function oe(e,a){let t=U(e,{labelable:!0}),{hoverProps:l}=_({onHoverStart:()=>a==null?void 0:a.open(!0),onHoverEnd:()=>a==null?void 0:a.close()});return{tooltipProps:O(t,l,{role:"tooltip"})}}function ie(e,a,t){let{isDisabled:l,trigger:i}=e,s=k(),n=o.useRef(!1),r=o.useRef(!1),f=()=>{(n.current||r.current)&&a.open(r.current)},u=g=>{!n.current&&!r.current&&a.close(g)};o.useEffect(()=>{let g=P=>{t&&t.current&&P.key==="Escape"&&(P.stopPropagation(),a.close(!0))};if(a.isOpen)return document.addEventListener("keydown",g,!0),()=>{document.removeEventListener("keydown",g,!0)}},[t,a]);let b=()=>{i!=="focus"&&(G()==="pointer"?n.current=!0:n.current=!1,f())},$=()=>{i!=="focus"&&(r.current=!1,n.current=!1,u())},y=()=>{r.current=!1,n.current=!1,u(!0)},T=()=>{K()&&(r.current=!0,f())},c=()=>{r.current=!1,n.current=!1,u(!0)},{hoverProps:W}=_({isDisabled:l,onHoverStart:b,onHoverEnd:$}),{focusableProps:I}=z({isDisabled:l,onFocus:T,onBlur:c},t);return{triggerProps:{"aria-describedby":a.isOpen?s:void 0,...O(I,W,{onPointerDown:y,onKeyDown:y})},tooltipProps:{id:s}}}const se=1500,C=500;let m={},de=0,v=!1,p=null,h=null;function R(e={}){let{delay:a=se,closeDelay:t=C}=e,{isOpen:l,open:i,close:s}=L(e),n=o.useMemo(()=>`${++de}`,[]),r=o.useRef(null),f=o.useRef(s),u=()=>{m[n]=y},b=()=>{for(let c in m)c!==n&&(m[c](!0),delete m[c])},$=()=>{r.current&&clearTimeout(r.current),r.current=null,b(),u(),v=!0,i(),p&&(clearTimeout(p),p=null),h&&(clearTimeout(h),h=null)},y=c=>{c||t<=0?(r.current&&clearTimeout(r.current),r.current=null,f.current()):r.current||(r.current=setTimeout(()=>{r.current=null,f.current()},t)),p&&(clearTimeout(p),p=null),v&&(h&&clearTimeout(h),h=setTimeout(()=>{delete m[n],h=null,v=!1},Math.max(C,t)))},T=()=>{b(),u(),!l&&!p&&!v?p=setTimeout(()=>{p=null,v=!0,$()},a):l||$()};return o.useEffect(()=>{f.current=s},[s]),o.useEffect(()=>()=>{r.current&&clearTimeout(r.current),m[n]&&delete m[n]},[n]),{isOpen:l,open:c=>{!c&&a>0&&!r.current?T():$()},close:y}}const E=o.createContext(null),D=o.createContext(null);function ue(e){let a=R(e),t=o.useRef(null),{triggerProps:l,tooltipProps:i}=ie(e,a,t);return d.createElement(X,{values:[[E,a],[D,{...i,triggerRef:t}]]},d.createElement(Z,{...l,ref:t},e.children))}const ce=o.forwardRef(function({UNSTABLE_portalContainer:a,...t},l){[t,l]=Y(t,l,D);let i=o.useContext(E),s=R(t),n=t.isOpen!=null||t.defaultOpen!=null||!i?s:i,r=B(l,n.isOpen)||t.isExiting||!1;return!n.isOpen&&!r?null:d.createElement(ne,{portalContainer:a},d.createElement(fe,{...t,tooltipRef:l,isExiting:r}))});function fe(e){let a=o.useContext(E),t=o.useRef(null),[l,i]=o.useState(0);J(()=>{t.current&&a.isOpen&&i(t.current.getBoundingClientRect().width)},[a.isOpen,t]);let{overlayProps:s,arrowProps:n,placement:r}=j({placement:e.placement||"top",targetRef:e.triggerRef,overlayRef:e.tooltipRef,offset:e.offset,crossOffset:e.crossOffset,isOpen:a.isOpen,arrowSize:l,arrowBoundaryOffset:e.arrowBoundaryOffset,shouldFlip:e.shouldFlip,onClose:()=>a.close(!0)}),f=H(e.tooltipRef,!!r)||e.isEntering||!1,u=Q({...e,defaultClassName:"react-aria-Tooltip",values:{placement:r,isEntering:f,isExiting:e.isExiting,state:a}});e=O(e,s);let{tooltipProps:b}=oe(e,a);return d.createElement("div",{...b,ref:e.tooltipRef,...u,style:{...s.style,...u.style},"data-placement":r??void 0,"data-entering":f||void 0,"data-exiting":e.isExiting||void 0},d.createElement(M.Provider,{value:{...n,placement:r,ref:t}},u.children))}const pe="_tooltip_m1a8t_4",me="_arrow_m1a8t_17",S={tooltip:pe,arrow:me};function V({children:e,placement:a,className:t,...l}){return x.jsxs(ce,{className:N(S.tooltip,t),placement:a,...l,children:[x.jsx(A,{className:S.arrow,children:x.jsx("svg",{width:8,height:8,viewBox:"0 0 8 8",children:x.jsx("path",{d:"M0 0 L4 4 L8 0"})})}),e]})}function q({children:e,delay:a=0,...t}){return x.jsx(ue,{delay:a,...t,children:e})}try{V.displayName="Tooltip",V.__docgenInfo={description:"",displayName:"Tooltip",props:{placement:{defaultValue:null,description:"The placement of the tooltip with respect to the trigger.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom"'}]}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: TooltipRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: TooltipRenderProps & { defaultClassName: string; }) => string)"}},arrowBoundaryOffset:{defaultValue:{value:"0"},description:"The minimum distance the arrow's edge should be from the edge of the overlay element.",name:"arrowBoundaryOffset",required:!1,type:{name:"number"}},triggerRef:{defaultValue:null,description:`The ref for the element which the tooltip positions itself with respect to.

When used within a TooltipTrigger this is set automatically. It is only required when used standalone.`,name:"triggerRef",required:!1,type:{name:"RefObject<Element>"}},isEntering:{defaultValue:null,description:"Whether the tooltip is currently performing an entry animation.",name:"isEntering",required:!1,type:{name:"boolean"}},isExiting:{defaultValue:null,description:"Whether the tooltip is currently performing an exit animation.",name:"isExiting",required:!1,type:{name:"boolean"}},UNSTABLE_portalContainer:{defaultValue:{value:"document.body"},description:"The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.",name:"UNSTABLE_portalContainer",required:!1,type:{name:"Element"}},containerPadding:{defaultValue:{value:"12"},description:`The placement padding that should be applied between the element and its
surrounding container.`,name:"containerPadding",required:!1,type:{name:"number"}},offset:{defaultValue:{value:"0"},description:`The additional offset applied along the main axis between the element and its
anchor element.`,name:"offset",required:!1,type:{name:"number"}},crossOffset:{defaultValue:{value:"0"},description:`The additional offset applied along the cross axis between the element and its
anchor element.`,name:"crossOffset",required:!1,type:{name:"number"}},shouldFlip:{defaultValue:{value:"true"},description:`Whether the element should flip its orientation (e.g. top to bottom or left to right) when
there is insufficient room for it to render completely.`,name:"shouldFlip",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:null,description:"Whether the element is rendered.",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}}}}}catch{}try{q.displayName="TooltipTrigger",q.__docgenInfo={description:"",displayName:"TooltipTrigger",props:{isDisabled:{defaultValue:null,description:"Whether the tooltip should be disabled, independent from the trigger.",name:"isDisabled",required:!1,type:{name:"boolean"}},delay:{defaultValue:{value:"0"},description:"The delay time for the tooltip to show up. [See guidelines](https://spectrum.adobe.com/page/tooltip/#Immediate-or-delayed-appearance).",name:"delay",required:!1,type:{name:"number"}},closeDelay:{defaultValue:{value:"500"},description:"The delay time for the tooltip to close. [See guidelines](https://spectrum.adobe.com/page/tooltip/#Warmup-and-cooldown).",name:"closeDelay",required:!1,type:{name:"number"}},trigger:{defaultValue:null,description:"By default, opens for both focus and hover. Can be made to open only for focus.",name:"trigger",required:!1,type:{name:'"focus"'}},isOpen:{defaultValue:null,description:"Whether the overlay is open by default (controlled).",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}}}}}catch{}export{V as T,q as a};
