import{j as r}from"./jsx-runtime-CfatFE5O.js";import{$,s as h,a as j,C as S}from"./Checkbox-BKuSCnd4.js";import{R as a}from"./index-ClcD9ViR.js";import{$ as G}from"./Group-r5NlWn_a.js";import{I as T}from"./TextField-DMtjTUXl.js";import"./clsx-B-dksMZM.js";import"./RSPContexts-Djf1EgA4.js";import"./useFocusable-D_XT9yGL.js";import"./index-ZuzByk-F.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./Form-Co9Hp48n.js";import"./Text-BU-eztOh.js";import"./Label-C8twjpZa.js";import"./useControlledState-D4tkfNix.js";import"./Hidden-BAsLqWFN.js";import"./VisuallyHidden-Q_EkBmK7.js";import"./TextField.module-B0Qpd840.js";import"./Button-BB3MClES.js";import"./Button-2KCD5_KE.js";const d=({label:s,description:t,errorMessage:V,showSelectAll:E,children:u,...q})=>{const[m,l]=a.useState(),I=()=>{const e=a.useContext(j),n=a.Children.toArray(u).filter(a.isValidElement).map(i=>i.props.value),M=()=>m!=="all"?(l("all"),e==null?void 0:e.setValue(["toggleAll",...n])):(l("none"),e==null?void 0:e.setValue([]));return a.useEffect(()=>{var g,f;const i=n.length,R=n.length+1,o=((g=e==null?void 0:e.value)==null?void 0:g.length)||0;o===0&&l("none"),o>0&&o<i&&l("some"),o!==R&&(e==null||e.removeValue("toggleAll")),o===i&&!((f=e==null?void 0:e.value)!=null&&f.includes("toggleAll"))&&(e==null||e.addValue("toggleAll"),l("all"))},[n.length,e==null?void 0:e.value]),r.jsx(S,{value:"toggleAll",isSelected:m==="all",isIndeterminate:m==="some",onChange:()=>M(),children:"Välj alla"})};return r.jsx($,{className:h.checkboxGroup,...q,children:r.jsx(T,{label:s,description:t,errorMessage:V,children:r.jsxs(G,{className:h.wrap,children:[E&&r.jsx(I,{}),u]})})})};try{d.displayName="CheckboxGroup",d.__docgenInfo={description:"",displayName:"CheckboxGroup",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},showSelectAll:{defaultValue:null,description:"",name:"showSelectAll",required:!1,type:{name:"boolean"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: CheckboxGroupRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: CheckboxGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:'"native" | "aria"'}}}}}catch{}const re={title:"Components/Checkbox/CheckboxGroup",component:d,parameters:{layout:"centered"},args:{isInvalid:!1,isDisabled:!1,isRequired:!1,isReadOnly:!1},argTypes:{isInvalid:{type:"boolean"},isDisabled:{type:"boolean"},isRequired:{type:"boolean"},isReadOnly:{type:"boolean"},errorMessage:{type:"string"}},tags:["autodocs"]},_=["Banan","Apple","Mango"],C={args:{},render:({...s})=>r.jsx(d,{...s,children:_.map(t=>r.jsx(S,{value:t,children:t},t))})},p={...C,args:{label:"Etikett",description:"Beskrivning",errorMessage:"här gick det snett"}},c={...C,args:{label:"Etikett",description:"Beskrivning",errorMessage:"här gick det snett",showSelectAll:!0}};var b,v,y;p.parameters={...p.parameters,docs:{...(b=p.parameters)==null?void 0:b.docs,source:{originalSource:`{
  ...CheckboxGroupTemplate,
  args: {
    label: 'Etikett',
    description: 'Beskrivning',
    errorMessage: 'här gick det snett'
  }
}`,...(y=(v=p.parameters)==null?void 0:v.docs)==null?void 0:y.source}}};var x,A,k;c.parameters={...c.parameters,docs:{...(x=c.parameters)==null?void 0:x.docs,source:{originalSource:`{
  ...CheckboxGroupTemplate,
  args: {
    label: 'Etikett',
    description: 'Beskrivning',
    errorMessage: 'här gick det snett',
    showSelectAll: true
  }
}`,...(k=(A=c.parameters)==null?void 0:A.docs)==null?void 0:k.source}}};const te=["Example","SelectAll"];export{p as Example,c as SelectAll,te as __namedExportsOrder,re as default};
