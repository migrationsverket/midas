import{j as a}from"./jsx-runtime-CfatFE5O.js";import{r as u,R as p}from"./index-ClcD9ViR.js";import{$ as S,a as w,b as I}from"./Form-Co9Hp48n.js";import{$ as _,a as j,T as l,b as A}from"./TextField.module-B0Qpd840.js";import{$ as H,a as B}from"./Label-C8twjpZa.js";import{$ as C,a as N}from"./Text-BU-eztOh.js";import{a as q,d as W,e as D,f as F,c as k,w as M,x as O,y as z,o as L,z as U}from"./useFocusable-D_XT9yGL.js";import{c as G}from"./clsx-B-dksMZM.js";import{B as J}from"./Button-BB3MClES.js";const E=u.createContext({});let K=e=>{let{onHoverStart:t,onHoverChange:n,onHoverEnd:r,...s}=e;return s};function Q(e,t){[e,t]=q(e,t,E);let{hoverProps:n,isHovered:r}=W(e),{isFocused:s,isFocusVisible:i,focusProps:f}=D({isTextInput:!0,autoFocus:e.autoFocus}),o=!!e["aria-invalid"]&&e["aria-invalid"]!=="false",c=F({...e,values:{isHovered:r,isFocused:s,isFocusVisible:i,isDisabled:e.disabled||!1,isInvalid:o},defaultClassName:"react-aria-TextArea"});return p.createElement("textarea",{...k(K(e),f,n),...c,ref:t,"data-focused":s||void 0,"data-disabled":e.disabled||void 0,"data-hovered":r||void 0,"data-focus-visible":i||void 0,"data-invalid":o||void 0})}const ue=u.forwardRef(Q),X=u.createContext(null);function Y(e,t){[e,t]=q(e,t,X);let{validationBehavior:n}=M(S)||{};var r,s;let i=(s=(r=e.validationBehavior)!==null&&r!==void 0?r:n)!==null&&s!==void 0?s:"native",f=u.useRef(null),[o,c]=O(),[b,m]=u.useState("input"),{labelProps:v,inputProps:$,descriptionProps:d,errorMessageProps:h,...x}=_({...z(e),inputElementType:b,label:c,validationBehavior:i},f),P=u.useCallback(y=>{f.current=y,y&&m(y instanceof HTMLTextAreaElement?"textarea":"input")},[]),R=F({...e,values:{isDisabled:e.isDisabled||!1,isInvalid:x.isInvalid,isReadOnly:e.isReadOnly||!1,isRequired:e.isRequired||!1},defaultClassName:"react-aria-TextField"}),T=L(e);return delete T.id,p.createElement("div",{...T,...R,ref:t,slot:e.slot||void 0,"data-disabled":e.isDisabled||void 0,"data-invalid":x.isInvalid||void 0,"data-readonly":e.isReadOnly||void 0,"data-required":e.isRequired||void 0},p.createElement(U,{values:[[H,{...v,ref:o}],[j,{...$,ref:P}],[E,{...$,ref:P}],[C,{slots:{description:d,errorMessage:h}}],[w,x]]},R.children))}const Z=u.forwardRef(Y),V=({label:e,description:t,errorMessage:n,validationType:r,validate:s,maxCharacters:i,showCounter:f,...o})=>{const[c,b]=p.useState(""),m=d=>{const h=d.target.value;b(h)},v=d=>r==="ssn"?ae.test(d)?null:"Felaktigt personnummer":r instanceof RegExp?new RegExp(r).test(d)?null:n==null?void 0:n.toString():i?i&&d.length>i?`Du har angett ${d.length-i} tecken för mycket. Fältet är begränsat till ${i} tecken.`:null:s?s(d):!0,$=()=>i?a.jsxs("span",{className:G(l.count,c.length>i&&l.countExceeded),children:[c.length," / ",i]}):f?a.jsx("span",{className:l.count,children:c.length}):null;return a.jsx(Z,{className:l.inputField,validate:v,...o,children:a.jsxs(g,{label:e,description:t,errorMessage:n,children:[a.jsx($,{}),a.jsxs("div",{className:l.wrap,children:[a.jsx(A,{type:o.type,className:l.input,onChange:m,onBlur:m}),a.jsx(ee,{type:o.type,input:c})]})]})})},ee=({type:e,input:t})=>{const[n,r]=p.useState(!1);return e==="password"?a.jsxs(a.Fragment,{children:[n&&a.jsx(N,{slot:"description",className:l.passwordText,children:t}),a.jsx(J,{variant:"tertiary",onPress:()=>r(!n),className:l.passwordButton,children:n?"Dölj":"Visa"})]}):null},g=({label:e,description:t,errorMessage:n,children:r})=>a.jsxs("div",{className:l.inputWrapper,children:[e&&a.jsx(B,{className:l.label,children:e}),t&&a.jsx(N,{slot:"description",className:l.text,children:t}),a.jsx(I,{className:l.fieldError,children:n}),r]}),ae=new RegExp("^(?:(?:19|20)?\\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\\d|3[01])(?:[-+ ]?\\d{4})?|\\d{4}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\\d|3[01])(?:[-+ ]?\\d{4}))$");try{V.displayName="TextField",V.__docgenInfo={description:"",displayName:"TextField",props:{children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:'RegExp | "ssn"'}},maxCharacters:{defaultValue:null,description:"",name:"maxCharacters",required:!1,type:{name:"number"}},showCounter:{defaultValue:null,description:"",name:"showCounter",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:'"native" | "aria"'}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: TextFieldRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: TextFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}}}}}catch{}try{g.displayName="InputWrapper",g.__docgenInfo={description:"",displayName:"InputWrapper",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}}}}}catch{}export{Z as $,g as I,V as T,ue as a};
