import{q as c,w as f,c as p,$ as n}from"./useFocusable-B5I9Mbqb.js";import{a as m}from"./useControlledState-D4qbXjzs.js";import{$ as x}from"./Hidden-Gy3GO5dR.js";import{R as $,r as s}from"./index-ClcD9ViR.js";function y(a){let{id:e,label:r,"aria-labelledby":l,"aria-label":o,labelElementType:d="label"}=a;e=c(e);let t=c(),b={};r?(l=l?`${t} ${l}`:t,b={id:t,htmlFor:d==="label"?e:void 0}):!l&&!o&&console.warn("If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility");let i=m({id:e,"aria-label":o,"aria-labelledby":l});return{labelProps:b,fieldProps:i}}function L(a){let{description:e,errorMessage:r,isInvalid:l,validationState:o}=a,{labelProps:d,fieldProps:t}=y(a),b=f([!!e,!!r,l,o]),i=f([!!e,!!r,l,o]);return t=p(t,{"aria-describedby":[b,i,a["aria-describedby"]].filter(Boolean).join(" ")||void 0}),{labelProps:d,fieldProps:t,descriptionProps:{id:b},errorMessageProps:{id:i}}}const u=s.createContext({});function P(a,e){[a,e]=n(a,e,u);let{elementType:r="label",...l}=a;return $.createElement(r,{className:"react-aria-Label",...l,ref:e})}const M=x(P),v=s.createContext({});function T(a,e){[a,e]=n(a,e,v);let{elementType:r="span",...l}=a;return $.createElement(r,{className:"react-aria-Text",...l,ref:e})}const w=s.forwardRef(T);export{w as $,L as a,u as b,v as c,M as d,y as e};
