import{j as l}from"./jsx-runtime-Nms4Y4qS.js";import{R as t}from"./index-BwDkhjyp.js";import{$ as v,s as i,a as b,C as y}from"./Checkbox-D0AS9Ze8.js";import{$ as x}from"./Group-BvC8iDbe.js";import{I as A}from"./TextField-BMAcxfOS.js";const d=({label:r,description:p,errorMessage:u,showSelectAll:c,children:s,...m})=>{const[o,n]=t.useState(!1),f=()=>{const e=t.useContext(b),a=t.Children.toArray(s).filter(t.isValidElement).map(g=>g.props.value);function h(){return n(!o),o?e.setValue([]):e.setValue(["toggleAll",...a])}return t.useEffect(()=>{e.value.length!==a.length+1&&e.removeValue("toggleAll"),e.value.length===a.length&&!e.value.includes("toggleAll")&&(e.addValue("toggleAll"),n(!0))},[a.length,e.value]),l.jsx(y,{value:"toggleAll",isSelected:o,onChange:()=>h(),children:"VÃ¤lj alla"})};return l.jsx(v,{className:i.checkboxGroup,...m,children:l.jsx(A,{label:r,description:p,errorMessage:u,children:l.jsxs(x,{className:i.wrap,children:[c&&l.jsx(f,{}),s]})})})};try{d.displayName="CheckboxGroup",d.__docgenInfo={description:"",displayName:"CheckboxGroup",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},showSelectAll:{defaultValue:null,description:"",name:"showSelectAll",required:!1,type:{name:"boolean"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:'"native" | "aria"'}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: CheckboxGroupRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: CheckboxGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}}}}}catch{}export{d as C};
