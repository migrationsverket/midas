import{j as a}from"./jsx-runtime-CfatFE5O.js";import{R as o}from"./index-ClcD9ViR.js";import{$ as y,s as c,a as A,C as x}from"./Checkbox-D1i-69J0.js";import{$ as S}from"./Group-BBIaBYIN.js";import{I as C}from"./TextField-CsMr9uWN.js";const p=({label:i,description:u,errorMessage:m,showSelectAll:f,children:d,...h})=>{const[n,l]=o.useState(),g=()=>{const e=o.useContext(A),r=o.Children.toArray(d).filter(o.isValidElement).map(s=>s.props.value),v=()=>n!=="all"?(l("all"),e.setValue(["toggleAll",...r])):(l("none"),e.setValue([]));return o.useEffect(()=>{const s=r.length,b=r.length+1,t=e.value.length;t===0&&l("none"),t>0&&t<s&&l("some"),t!==b&&e.removeValue("toggleAll"),t===s&&!e.value.includes("toggleAll")&&(e.addValue("toggleAll"),l("all"))},[r.length,e.value]),a.jsx(x,{value:"toggleAll",isSelected:n==="all",isIndeterminate:n==="some",onChange:()=>v(),children:"VÃ¤lj alla"})};return a.jsx(y,{className:c.checkboxGroup,...h,children:a.jsx(C,{label:i,description:u,errorMessage:m,children:a.jsxs(S,{className:c.wrap,children:[f&&a.jsx(g,{}),d]})})})};try{p.displayName="CheckboxGroup",p.__docgenInfo={description:"",displayName:"CheckboxGroup",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},showSelectAll:{defaultValue:null,description:"",name:"showSelectAll",required:!1,type:{name:"boolean"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:'"native" | "aria"'}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: CheckboxGroupRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: CheckboxGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}}}}}catch{}export{p as C};
