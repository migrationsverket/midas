import{j as V}from"./jsx-runtime-BYYWji4R.js";import{$ as A}from"./Group-EDTqPI1Y.js";import{b as x,k as B,$ as C,m as L,o as W,h as G,a as M,f as j,g as O,i as k}from"./utils-BLyg3OOq.js";import{$ as U}from"./FieldError-qYvGdo98.js";import{a as z}from"./Form-BGITfCPg.js";import{b as K}from"./Button-C9yg6fHw.js";import{a as J}from"./Text-BGwM_jUK.js";import{f as D,c as Q,b as I,e as X,a as Y,$ as Z}from"./useFocusRing-DVgdqMmF.js";import{r as R,R as S}from"./index-ClcD9ViR.js";import{b as ee,c as ae,a as te}from"./useFormValidation-Nb4M2nj5.js";import{$ as ie}from"./FocusScope-Ce8r-Upm.js";import{$ as le}from"./useField-DSxopD4s.js";import{$ as re}from"./context-d6PNTTSe.js";import{$ as ne}from"./VisuallyHidden-B-Fwaf7X.js";import{$ as de}from"./useControlledState-H1tiOFpU.js";import{c as oe}from"./clsx-B-dksMZM.js";import{a as se,L as ue}from"./Label-BbpGPG0m.js";import{T as ce}from"./Text-D7RmNfn4.js";import{F}from"./FieldError-C9cT7vfN.js";const N=new WeakMap;function fe(a,e,i){let{value:r,children:s,"aria-label":l,"aria-labelledby":n}=a;const t=a.isDisabled||e.isDisabled;let c=e.selectedValue===r,f=o=>{o.stopPropagation(),e.setSelectedValue(r)},{pressProps:u,isPressed:v}=D({isDisabled:t}),{pressProps:$,isPressed:y}=D({isDisabled:t,onPress(){var o;e.setSelectedValue(r),(o=i.current)===null||o===void 0||o.focus()}}),{focusableProps:g}=Q(x(a,{onFocus:()=>e.setLastFocusedValue(r)}),i),m=x(u,g),w=I(a,{labelable:!0}),b=-1;e.selectedValue!=null?e.selectedValue===r&&(b=0):(e.lastFocusedValue===r||e.lastFocusedValue==null)&&(b=0),t&&(b=void 0);let{name:q,descriptionId:P,errorMessageId:p,validationBehavior:d}=N.get(e);return ee(i,e.selectedValue,e.setSelectedValue),ae({validationBehavior:d},e,i),{labelProps:x($,{onClick:o=>o.preventDefault()}),inputProps:x(w,{...m,type:"radio",name:q,tabIndex:b,disabled:t,required:e.isRequired&&d==="native",checked:c,value:r,onChange:f,"aria-describedby":[a["aria-describedby"],e.isInvalid?p:null,P].filter(Boolean).join(" ")||void 0}),isDisabled:t,isSelected:c,isPressed:v||y}}function pe(a,e){let{name:i,isReadOnly:r,isRequired:s,isDisabled:l,orientation:n="vertical",validationBehavior:t="aria"}=a,{direction:c}=re(),{isInvalid:f,validationErrors:u,validationDetails:v}=e.displayValidation,{labelProps:$,fieldProps:y,descriptionProps:g,errorMessageProps:m}=le({...a,labelElementType:"span",isInvalid:e.isInvalid,errorMessage:a.errorMessage||u}),w=I(a,{labelable:!0}),{focusWithinProps:b}=X({onBlurWithin(p){var d;(d=a.onBlur)===null||d===void 0||d.call(a,p),e.selectedValue||e.setLastFocusedValue(null)},onFocusWithin:a.onFocus,onFocusWithinChange:a.onFocusChange}),q=p=>{let d;switch(p.key){case"ArrowRight":c==="rtl"&&n!=="vertical"?d="prev":d="next";break;case"ArrowLeft":c==="rtl"&&n!=="vertical"?d="next":d="prev";break;case"ArrowDown":d="next";break;case"ArrowUp":d="prev";break;default:return}p.preventDefault();let o=ie(p.currentTarget,{from:p.target}),h;d==="next"?(h=o.nextNode(),h||(o.currentNode=p.currentTarget,h=o.firstChild())):(h=o.previousNode(),h||(o.currentNode=p.currentTarget,h=o.lastChild())),h&&(h.focus(),e.setSelectedValue(h.value))},P=B(i);return N.set(e,{name:P,descriptionId:g.id,errorMessageId:m.id,validationBehavior:t}),{radioGroupProps:x(w,{role:"radiogroup",onKeyDown:q,"aria-invalid":e.isInvalid||void 0,"aria-errormessage":a["aria-errormessage"],"aria-readonly":r||void 0,"aria-required":s||void 0,"aria-disabled":l||void 0,"aria-orientation":n,...y,...b}),labelProps:$,descriptionProps:g,errorMessageProps:m,isInvalid:f,validationErrors:u,validationDetails:v}}let me=Math.round(Math.random()*1e10),be=0;function he(a){let e=R.useMemo(()=>a.name||`radio-group-${me}-${++be}`,[a.name]);var i;let[r,s]=de(a.value,(i=a.defaultValue)!==null&&i!==void 0?i:null,a.onChange),[l,n]=R.useState(null),t=te({...a,value:r}),c=u=>{!a.isReadOnly&&!a.isDisabled&&(s(u),t.commitValidation())},f=t.displayValidation.isInvalid;return{...t,name:e,selectedValue:r,setSelectedValue:c,lastFocusedValue:l,setLastFocusedValue:n,isDisabled:a.isDisabled||!1,isReadOnly:a.isReadOnly||!1,isRequired:a.isRequired||!1,validationState:a.validationState||(f?"invalid":null),isInvalid:f}}const ve=R.createContext(null),$e=R.createContext(null),T=R.createContext(null),ye=R.forwardRef(function(e,i){[e,i]=C(e,i,ve);let{validationBehavior:r}=j(z)||{};var s,l;let n=(l=(s=e.validationBehavior)!==null&&s!==void 0?s:r)!==null&&l!==void 0?l:"native",t=he({...e,validationBehavior:n}),[c,f]=O(!e["aria-label"]&&!e["aria-labelledby"]),{radioGroupProps:u,labelProps:v,descriptionProps:$,errorMessageProps:y,...g}=pe({...e,label:f,validationBehavior:n},t),m=M({...e,values:{orientation:e.orientation||"vertical",isDisabled:t.isDisabled,isReadOnly:t.isReadOnly,isRequired:t.isRequired,isInvalid:t.isInvalid,state:t},defaultClassName:"react-aria-RadioGroup"});return S.createElement("div",{...u,...m,ref:i,slot:e.slot||void 0,"data-orientation":e.orientation||"vertical","data-invalid":t.isInvalid||void 0,"data-disabled":t.isDisabled||void 0,"data-readonly":t.isReadOnly||void 0,"data-required":t.isRequired||void 0},S.createElement(k,{values:[[T,t],[K,{...v,ref:c,elementType:"span"}],[J,{slots:{description:$,errorMessage:y}}],[U,g]]},m.children))}),ge=R.forwardRef(function(e,i){let{inputRef:r=null,...s}=e;[e,i]=C(s,i,$e);let l=S.useContext(T),n=L(R.useMemo(()=>W(r,e.inputRef!==void 0?e.inputRef:null),[r,e.inputRef])),{labelProps:t,inputProps:c,isSelected:f,isDisabled:u,isPressed:v}=fe({...G(e),children:typeof e.children=="function"?!0:e.children},l,n),{isFocused:$,isFocusVisible:y,focusProps:g}=Y(),m=u||l.isReadOnly,{hoverProps:w,isHovered:b}=Z({...e,isDisabled:m}),q=M({...e,defaultClassName:"react-aria-Radio",values:{isSelected:f,isPressed:v,isHovered:b,isFocused:$,isFocusVisible:y,isDisabled:u,isReadOnly:l.isReadOnly,isInvalid:l.isInvalid,isRequired:l.isRequired}}),P=I(e);return delete P.id,S.createElement("label",{...x(P,t,w,q),ref:i,"data-selected":f||void 0,"data-pressed":v||void 0,"data-hovered":b||void 0,"data-focused":$||void 0,"data-focus-visible":y||void 0,"data-disabled":u||void 0,"data-readonly":l.isReadOnly||void 0,"data-invalid":l.isInvalid||void 0,"data-required":l.isRequired||void 0},S.createElement(ne,{elementType:"span"},S.createElement("input",{...x(c,g),ref:n})),q.children)}),Ve="_radioGroup_i4hw0_4",Re="_wrap_i4hw0_15",xe="_radio_i4hw0_4",E={radioGroup:Ve,wrap:Re,radio:xe},_=({label:a,description:e,errorMessage:i,children:r,className:s,errorPosition:l="top",popover:n,...t})=>V.jsxs(ye,{...t,className:oe(E.radioGroup,s),children:[V.jsx(se,{popover:n,children:a&&V.jsx(ue,{children:a})}),e&&V.jsx(ce,{slot:"description",children:e}),l==="top"&&V.jsx(F,{"data-testid":"fieldError",children:i}),V.jsx(A,{className:E.wrap,children:r}),l==="bottom"&&V.jsx(F,{"data-testid":"fieldError",children:i})]}),H=a=>V.jsx(ge,{className:E.radio,...a});try{_.displayName="RadioGroup",_.__docgenInfo={description:"RadioGroup is used to group several radio items together",displayName:"RadioGroup",props:{label:{defaultValue:null,description:"Label for the RadioGroup",name:"label",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"Additional description rendered below the label",name:"description",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"String to display as error message or function to handle the result and produce the error message",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},errorPosition:{defaultValue:{value:"top"},description:"",name:"errorPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}},popover:{defaultValue:null,description:"An assistive text that helps the user understand the field better. Will be hidden in a popover with an info icon button.",name:"popover",required:!1,type:{name:"InfoPopoverProps"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: RadioGroupRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: RadioGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"(value: string) => void"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:"enum",value:[{value:'"aria"'},{value:'"native"'}]}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: string) => true | ValidationError"}},"aria-errormessage":{defaultValue:null,description:"Identifies the element that provides an error message for the object.",name:"aria-errormessage",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"string"}},orientation:{defaultValue:{value:"'vertical'"},description:"The axis the Radio Button(s) should align with.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}}}}}catch{}try{H.displayName="Radio",H.__docgenInfo={description:"Radio item",displayName:"Radio",props:{inputRef:{defaultValue:null,description:"A ref for the HTML input element.",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},value:{defaultValue:null,description:`The value of the radio button, used when submitting an HTML form.
See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio#Value).`,name:"value",required:!0,type:{name:"string"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:`Whether the radio button is disabled or not.
Shows that a selection exists, but is not available in that circumstance.`,name:"isDisabled",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onHoverStart:{defaultValue:null,description:"Handler that is called when a hover interaction starts.",name:"onHoverStart",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverEnd:{defaultValue:null,description:"Handler that is called when a hover interaction ends.",name:"onHoverEnd",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverChange:{defaultValue:null,description:"Handler that is called when the hover state changes.",name:"onHoverChange",required:!1,type:{name:"(isHovering: boolean) => void"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: RadioRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: RadioGroupRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: RadioGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}}}}}catch{}export{_ as R,H as a,E as s};
