import{j as e}from"./jsx-runtime-BYYWji4R.js";import{$ as N,D as H,a as R}from"./DateInput-uGsOoFnJ.js";import{c as p}from"./clsx-B-dksMZM.js";import{a as A,L as P}from"./Label-CrDlCJ-2.js";import{T as B}from"./Text-BgvnLaBz.js";import{F as c}from"./FieldError-BjFojtrn.js";import{d as L}from"./CalendarDate-Lfx2W0H2.js";import{e as M}from"./index-Q7OVwvWC.js";import"./index-ClcD9ViR.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./utils-RHx87K0F.js";import"./SSRProvider-BhYbDCf7.js";import"./Form-Lr15ufU6.js";import"./useFormValidation-DmuZGU-W.js";import"./useFocusRing-zhkOjX4v.js";import"./_class_private_field_init-BOtJyCjG.js";import"./index-DQEgcCId.js";import"./Group-DwTQcyET.js";import"./Input-BMo7u0M7.js";import"./Hidden-BC9qER92.js";import"./Button-v_l_ujRb.js";import"./useLabels-FEgier_d.js";import"./context-zNjZoWML.js";import"./useButton-DQcVpLGQ.js";import"./Text-CZ6zcozL.js";import"./useDateFormatter-DzWwJ2YB.js";import"./LocalizedStringFormatter-BB0Nk989.js";import"./useControlledState-H1tiOFpU.js";import"./FocusScope-p3_VE_8x.js";import"./useDescription-BqzP9r9Z.js";import"./useField-C9GdkJOV.js";import"./useLocalizedStringFormatter-DiUIqqhg.js";import"./getScrollParent-CvodOSaS.js";import"./scrollIntoView-Dsrcj58z.js";import"./useEvent-D_ha2BWP.js";import"./useFilter-JOnEUQYC.js";import"./ListKeyboardDelegate-B6DhjEt7.js";import"./SelectionManager-TcugPLoc.js";import"./Dialog-erA2a1-e.js";import"./RSPContexts-HQcWPJyv.js";import"./OverlayArrow-CEJfcY2d.js";import"./useResizeObserver-D8gvjDpO.js";import"./Collection-BgAPHyOf.js";import"./index-NDK0uC61.js";import"./Separator-DJQC4y_4.js";import"./PressResponder-DWi2SZR7.js";import"./VisuallyHidden-BekSNXsj.js";import"./Dialog-Do6DVXaP.js";import"./useLocalizedStringFormatter-9M_dEwOo.js";import"./Button-DMxFleQu.js";import"./Button.module-DKVuWS4g.js";import"./x-Dz2R9y6b.js";import"./createLucideIcon-uZw3gxGR.js";import"./Heading-CV1Pcj_U.js";import"./info-CSjK64PU.js";const U="_dateField_1453v_4",$="_inputField_1453v_11",k="_medium_1453v_22",s={dateField:U,inputField:$,medium:k},d=({className:l,description:i,errorMessage:n,errorPosition:u="top",isDisabled:j,label:m,size:W="large",popover:C,...z})=>e.jsxs(N,{...z,className:p(s.dateField,l),children:[e.jsx(A,{popover:C,children:m&&e.jsx(P,{children:m})}),i&&e.jsx(B,{slot:"description",children:i}),u==="top"&&e.jsx(c,{children:n}),e.jsx("div",{className:p(s.inputField,{[s.medium]:W==="medium"}),"data-disabled":j||void 0,"data-testid":"date-field_input-field",children:e.jsx(H,{children:E=>e.jsx(R,{segment:E})})}),u==="bottom"&&e.jsx(c,{children:n})]});try{d.displayName="DateField",d.__docgenInfo={description:"",displayName:"DateField",props:{description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | ((validation: ValidationResult) => string)"}},errorPosition:{defaultValue:{value:"top"},description:"",name:"errorPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},size:{defaultValue:{value:"large"},description:"Component size (large: height 48px, medium: height 40px)",name:"size",required:!1,type:{name:"enum",value:[{value:'"large"'},{value:'"medium"'}]}},popover:{defaultValue:null,description:"An assistive text that helps the user understand the field better. Will be hidden in a popover with an info icon button.",name:"popover",required:!1,type:{name:"InfoPopoverProps"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"DateValue"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"(value: DateValue) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"DateValue"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: DateValue) => true | ValidationError"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},minValue:{defaultValue:null,description:"The minimum allowed date that a user may select.",name:"minValue",required:!1,type:{name:"DateValue"}},maxValue:{defaultValue:null,description:"The maximum allowed date that a user may select.",name:"maxValue",required:!1,type:{name:"DateValue"}},isDateUnavailable:{defaultValue:null,description:"Callback that is called for each date of the calendar. If it returns true, then the date is unavailable.",name:"isDateUnavailable",required:!1,type:{name:"(date: DateValue) => boolean"}},placeholderValue:{defaultValue:null,description:"A placeholder date that influences the format of the placeholder shown when no value is selected. Defaults to today's date at midnight.",name:"placeholderValue",required:!1,type:{name:"DateValue"}},hourCycle:{defaultValue:null,description:"Whether to display the time in 12 or 24 hour format. By default, this is determined by the user's locale.",name:"hourCycle",required:!1,type:{name:"enum",value:[{value:"12"},{value:"24"}]}},granularity:{defaultValue:null,description:'Determines the smallest unit that is displayed in the date picker. By default, this is `"day"` for dates, and `"minute"` for times.',name:"granularity",required:!1,type:{name:"enum",value:[{value:'"day"'},{value:'"hour"'},{value:'"minute"'},{value:'"second"'}]}},hideTimeZone:{defaultValue:{value:"false"},description:"Whether to hide the time zone abbreviation.",name:"hideTimeZone",required:!1,type:{name:"boolean"}},shouldForceLeadingZeros:{defaultValue:null,description:`Whether to always show leading zeros in the month, day, and hour fields.
By default, this is determined by the user's locale.`,name:"shouldForceLeadingZeros",required:!1,type:{name:"boolean"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:"enum",value:[{value:'"aria"'},{value:'"native"'}]}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: DateFieldRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: DateFieldRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: DateFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}}}}}catch{}const Ze={component:d,title:"Components/DateField",tags:["autodocs"],parameters:{a11y:{config:{rules:[{id:"color-contrast",selector:'[data-placeholder="true"]',enabled:!1}]},options:{rules:{"color-contrast":{enabled:!1}}}}},args:{errorPosition:"top",label:"Välj ett datum",description:"Vilket som helst"}},a={play:async({step:l,canvas:i,globals:{size:n}})=>{await l("it should change size according to size prop",async()=>{await M(i.getByTestId("date-field_input-field")).toHaveStyle({height:n==="large"?"48px":"40px"})})}},r={args:{isInvalid:!0,errorMessage:"Date must be tjugonionde maj"}},o={args:{isDisabled:!0}},t={args:{defaultValue:new L(1995,5,29)}};var h,f,v,y,b;a.parameters={...a.parameters,docs:{...(h=a.parameters)==null?void 0:h.docs,source:{originalSource:`{
  play: async ({
    step,
    canvas,
    globals: {
      size
    }
  }) => {
    await step('it should change size according to size prop', async () => {
      await expect(canvas.getByTestId('date-field_input-field')).toHaveStyle({
        height: size === 'large' ? '48px' : '40px'
      });
    });
  }
}`,...(v=(f=a.parameters)==null?void 0:f.docs)==null?void 0:v.source},description:{story:"Don't put format in description, it changes with browser language settings!",...(b=(y=a.parameters)==null?void 0:y.docs)==null?void 0:b.description}}};var g,V,q;r.parameters={...r.parameters,docs:{...(g=r.parameters)==null?void 0:g.docs,source:{originalSource:`{
  args: {
    isInvalid: true,
    errorMessage: 'Date must be tjugonionde maj'
  }
}`,...(q=(V=r.parameters)==null?void 0:V.docs)==null?void 0:q.source}}};var D,x,F;o.parameters={...o.parameters,docs:{...(D=o.parameters)==null?void 0:D.docs,source:{originalSource:`{
  args: {
    isDisabled: true
  }
}`,...(F=(x=o.parameters)==null?void 0:x.docs)==null?void 0:F.source}}};var w,_,S,T,I;t.parameters={...t.parameters,docs:{...(w=t.parameters)==null?void 0:w.docs,source:{originalSource:`{
  args: {
    defaultValue: new CalendarDate(1995, 5, 29)
  }
}`,...(S=(_=t.parameters)==null?void 0:_.docs)==null?void 0:S.source},description:{story:"When using uncontrolled value",...(I=(T=t.parameters)==null?void 0:T.docs)==null?void 0:I.description}}};const Oe=["Default","Invalid","Disabled","WithDefaultValue"];export{a as Default,o as Disabled,r as Invalid,t as WithDefaultValue,Oe as __namedExportsOrder,Ze as default};
